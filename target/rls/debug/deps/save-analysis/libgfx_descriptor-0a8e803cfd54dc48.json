{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0","program":"/Users/antonioramos/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","gfx_descriptor","--edition=2018","/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=0a8e803cfd54dc48","-C","extra-filename=-0a8e803cfd54dc48","--out-dir","/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps","-L","dependency=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps","--extern","arrayvec=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libarrayvec-410da0bcd6271b08.rmeta","--extern","fxhash=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libfxhash-cab122f38e55ae9a.rmeta","--extern","hal=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libgfx_hal-29aa9f4323e7605b.rmeta","--extern","log=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/liblog-3420ea1559b41e8b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/antonioramos/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libgfx_descriptor-0a8e803cfd54dc48.rmeta"},"prelude":{"crate_id":{"name":"gfx_descriptor","disambiguator":[10559813354461862197,14353722804623820200]},"crate_root":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src","external_crates":[{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","num":16,"id":{"name":"gfx_hal","disambiguator":[5953115990823336795,6314969920521700168]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","num":17,"id":{"name":"bitflags","disambiguator":[622889312128496731,14058552020937752200]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","num":18,"id":{"name":"raw_window_handle","disambiguator":[3967827822235630183,15863857987543660822]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","num":19,"id":{"name":"libc","disambiguator":[7108443598228372490,3719214740063754336]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","num":20,"id":{"name":"arrayvec","disambiguator":[5539411751077712848,8650827150853762111]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","num":21,"id":{"name":"log","disambiguator":[9296859664827610279,6775837141492413681]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","num":22,"id":{"name":"cfg_if","disambiguator":[4164838008399425541,17156835214731903611]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","num":23,"id":{"name":"fxhash","disambiguator":[6910660990117678751,17367875895123839480]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","num":24,"id":{"name":"byteorder","disambiguator":[2470126068869369270,3118906432055358660]}}],"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","byte_start":0,"byte_end":295,"line_start":1,"line_end":16,"column_start":1,"column_end":42}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","byte_start":281,"byte_end":282,"line_start":16,"line_end":16,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","byte_start":292,"byte_end":293,"line_start":16,"line_end":16,"column_start":39,"column_end":40},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","byte_start":0,"byte_end":295,"line_start":1,"line_end":16,"column_start":1,"column_end":42},"name":"","qualname":"::","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":53},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"decl_id":null,"docs":" GPU descriptor allocator","sig":null,"attributes":[{"value":"/ GPU descriptor allocator","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","byte_start":0,"byte_end":28,"line_start":1,"line_end":1,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","byte_start":29,"byte_end":32,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"warn(missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_qualifications)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/lib.rs","byte_start":34,"byte_end":187,"line_start":4,"line_end":11,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":93},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":732,"byte_end":745,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"DescriptorSet","qualname":"::allocator::DescriptorSet","value":"DescriptorSet {  }","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"decl_id":null,"docs":" Descriptor set from allocator.\n","sig":null,"attributes":[{"value":"/ Descriptor set from allocator.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":669,"byte_end":703,"line_start":19,"line_end":19,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":942,"byte_end":945,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"raw","qualname":"<DescriptorSet<B>>::raw","value":"pub fn raw(&Self) -> &B::DescriptorSet","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to gfx-hal descriptor set.\n","sig":null,"attributes":[{"value":"/ Get a reference to gfx-hal descriptor set.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":884,"byte_end":930,"line_start":28,"line_end":28,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":1144,"byte_end":1151,"line_start":37,"line_end":37,"column_start":19,"column_end":26},"name":"raw_mut","qualname":"<DescriptorSet<B>>::raw_mut","value":"pub unsafe fn raw_mut(&mut Self) -> &mut B::DescriptorSet","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to gfx-hal descriptor set.","sig":null,"attributes":[{"value":"/ Get a mutable reference to gfx-hal descriptor set.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":1005,"byte_end":1059,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":1064,"byte_end":1067,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":1072,"byte_end":1084,"line_start":35,"line_end":35,"column_start":5,"column_end":17}},{"value":"/ Object needs not to be replaced.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":1089,"byte_end":1125,"line_start":36,"line_end":36,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":7542,"byte_end":7561,"line_start":235,"line_end":235,"column_start":12,"column_end":31},"name":"DescriptorAllocator","qualname":"::allocator::DescriptorAllocator","value":"DescriptorAllocator {  }","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"decl_id":null,"docs":" Descriptor allocator.\n Can be used to allocate descriptor sets for any layout.\n","sig":null,"attributes":[{"value":"/ Descriptor allocator.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":7428,"byte_end":7453,"line_start":232,"line_end":232,"column_start":1,"column_end":26}},{"value":"/ Can be used to allocate descriptor sets for any layout.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":7454,"byte_end":7513,"line_start":233,"line_end":233,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8139,"byte_end":8142,"line_start":255,"line_end":255,"column_start":19,"column_end":22},"name":"new","qualname":"<DescriptorAllocator<B>>::new","value":"pub unsafe fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new allocator instance.","sig":null,"attributes":[{"value":"/ Create new allocator instance.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8001,"byte_end":8035,"line_start":251,"line_end":251,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8040,"byte_end":8043,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8048,"byte_end":8060,"line_start":253,"line_end":253,"column_start":5,"column_end":17}},{"value":"/ All later operations assume the device is not lost.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8065,"byte_end":8120,"line_start":254,"line_end":254,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8706,"byte_end":8714,"line_start":273,"line_end":273,"column_start":12,"column_end":20},"name":"allocate","qualname":"<DescriptorAllocator<B>>::allocate","value":"pub fn allocate<impl Extend<DescriptorSet<B>>: Extend<DescriptorSet<B>>>(&mut Self,\n                                                                         &B::Device,\n                                                                         &B::DescriptorSetLayout,\n                                                                         &DescriptorCounts,\n                                                                         u32,\n                                                                         &mut impl Extend<DescriptorSet<B>>)\n-> Result<(), OutOfMemory>","parent":null,"children":[],"decl_id":null,"docs":" Allocate descriptor set with specified layout.\n `DescriptorCounts` must match descriptor numbers of the layout.\n `DescriptorCounts` can be constructed [from bindings] that were used\n to create layout instance.","sig":null,"attributes":[{"value":"/ Allocate descriptor set with specified layout.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8425,"byte_end":8475,"line_start":267,"line_end":267,"column_start":5,"column_end":55}},{"value":"/ `DescriptorCounts` must match descriptor numbers of the layout.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8480,"byte_end":8547,"line_start":268,"line_end":268,"column_start":5,"column_end":72}},{"value":"/ `DescriptorCounts` can be constructed [from bindings] that were used","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8552,"byte_end":8624,"line_start":269,"line_end":269,"column_start":5,"column_end":77}},{"value":"/ to create layout instance.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8629,"byte_end":8659,"line_start":270,"line_end":270,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8664,"byte_end":8667,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ [from bindings]: .","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":8672,"byte_end":8694,"line_start":272,"line_end":272,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":10961,"byte_end":10965,"line_start":340,"line_end":340,"column_start":19,"column_end":23},"name":"free","qualname":"<DescriptorAllocator<B>>::free","value":"pub unsafe fn free<impl IntoIterator<Item = DescriptorSet<B>>: IntoIterator<Item\n                   =\n                   DescriptorSet<B>>>(&mut Self,\n                                      impl IntoIterator<Item = DescriptorSet<B>>)","parent":null,"children":[],"decl_id":null,"docs":" Free descriptor sets.","sig":null,"attributes":[{"value":"/ Free descriptor sets.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":10694,"byte_end":10719,"line_start":333,"line_end":333,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":10724,"byte_end":10727,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":10732,"byte_end":10744,"line_start":335,"line_end":335,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":10749,"byte_end":10752,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ None of descriptor sets can be referenced in any pending command buffers.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":10757,"byte_end":10834,"line_start":337,"line_end":337,"column_start":5,"column_end":82}},{"value":"/ All command buffers where at least one of descriptor sets referenced","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":10839,"byte_end":10911,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/ move to invalid state.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":10916,"byte_end":10942,"line_start":339,"line_end":339,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":12367,"byte_end":12372,"line_start":376,"line_end":376,"column_start":19,"column_end":24},"name":"clear","qualname":"<DescriptorAllocator<B>>::clear","value":"pub unsafe fn clear(&mut Self, &B::Device)","parent":null,"children":[],"decl_id":null,"docs":" Clear the allocator instance.\n All sets allocated from this allocator become invalid.","sig":null,"attributes":[{"value":"/ Clear the allocator instance.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":12158,"byte_end":12191,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ All sets allocated from this allocator become invalid.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":12196,"byte_end":12254,"line_start":372,"line_end":372,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":12259,"byte_end":12262,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":12267,"byte_end":12279,"line_start":374,"line_end":374,"column_start":5,"column_end":17}},{"value":"/ Assumes none of the allocated blocks will be used from here.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":12284,"byte_end":12348,"line_start":375,"line_end":375,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":12570,"byte_end":12577,"line_start":383,"line_end":383,"column_start":12,"column_end":19},"name":"cleanup","qualname":"<DescriptorAllocator<B>>::cleanup","value":"pub fn cleanup(&mut Self, &B::Device)","parent":null,"children":[],"decl_id":null,"docs":" Perform cleanup to allow resources reuse.\n","sig":null,"attributes":[{"value":"/ Perform cleanup to allow resources reuse.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":12513,"byte_end":12558,"line_start":382,"line_end":382,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":68},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":13051,"byte_end":13073,"line_start":15,"line_end":15,"column_start":11,"column_end":33},"name":"DESCRIPTOR_TYPES_COUNT","qualname":"::counts::DESCRIPTOR_TYPES_COUNT","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Length of the [`DESCRIPTOR_TYPES`] array.\n","sig":null,"attributes":[{"value":"/ Length of the [`DESCRIPTOR_TYPES`] array.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":12995,"byte_end":13040,"line_start":14,"line_end":14,"column_start":1,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":69},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":13204,"byte_end":13220,"line_start":19,"line_end":19,"column_start":11,"column_end":27},"name":"DESCRIPTOR_TYPES","qualname":"::counts::DESCRIPTOR_TYPES","value":"[DescriptorType; ]","parent":null,"children":[],"decl_id":null,"docs":" List of all possible descriptor types, with all the possible values\n the enum variants could have.\n","sig":null,"attributes":[{"value":"/ List of all possible descriptor types, with all the possible values","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":13088,"byte_end":13159,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ the enum variants could have.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":13160,"byte_end":13193,"line_start":18,"line_end":18,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":133},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18192,"byte_end":18208,"line_start":170,"line_end":170,"column_start":12,"column_end":28},"name":"DescriptorCounts","qualname":"::counts::DescriptorCounts","value":"DescriptorCounts {  }","parent":null,"children":[{"krate":0,"index":134}],"decl_id":null,"docs":" Number of descriptors per type.\n","sig":null,"attributes":[{"value":"/ Number of descriptors per type.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18091,"byte_end":18126,"line_start":168,"line_end":168,"column_start":1,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":73},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18328,"byte_end":18333,"line_start":176,"line_end":176,"column_start":15,"column_end":20},"name":"EMPTY","qualname":"::counts::DescriptorCounts::EMPTY","value":"Self","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" Empty descriptor counts.\n","sig":null,"attributes":[{"value":"/ Empty descriptor counts.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18285,"byte_end":18313,"line_start":175,"line_end":175,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18522,"byte_end":18533,"line_start":182,"line_end":182,"column_start":12,"column_end":23},"name":"add_binding","qualname":"<DescriptorCounts>::add_binding","value":"pub fn add_binding(&mut Self, DescriptorSetLayoutBinding)","parent":null,"children":[],"decl_id":null,"docs":" Add a single layout binding.\n Useful when created with `DescriptorCounts::EMPTY`.\n","sig":null,"attributes":[{"value":"/ Add a single layout binding.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18418,"byte_end":18450,"line_start":180,"line_end":180,"column_start":5,"column_end":37}},{"value":"/ Useful when created with `DescriptorCounts::EMPTY`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18455,"byte_end":18510,"line_start":181,"line_end":181,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18731,"byte_end":18739,"line_start":187,"line_end":187,"column_start":12,"column_end":20},"name":"filtered","qualname":"<DescriptorCounts>::filtered","value":"pub fn filtered(&Self) -> ArrayVec<[DescriptorRangeDesc; ]>","parent":null,"children":[],"decl_id":null,"docs":" Return the filtered list of descriptors.\n","sig":null,"attributes":[{"value":"/ Return the filtered list of descriptors.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18675,"byte_end":18719,"line_start":186,"line_end":186,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":19161,"byte_end":19169,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"multiply","qualname":"<DescriptorCounts>::multiply","value":"pub fn multiply(&Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiply all the counts by a value.\n","sig":null,"attributes":[{"value":"/ Multiply all the counts by a value.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":19110,"byte_end":19149,"line_start":199,"line_end":199,"column_start":5,"column_end":44}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":861,"byte_end":874,"line_start":27,"line_end":27,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":1350,"byte_end":1360,"line_start":48,"line_end":48,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":3396,"byte_end":3412,"line_start":105,"line_end":105,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":7789,"byte_end":7808,"line_start":242,"line_end":242,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":7972,"byte_end":7991,"line_start":250,"line_end":250,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18262,"byte_end":18278,"line_start":174,"line_end":174,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":19388,"byte_end":19404,"line_start":209,"line_end":209,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":19727,"byte_end":19743,"line_start":224,"line_end":224,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":20289,"byte_end":20305,"line_start":240,"line_end":240,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":20478,"byte_end":20494,"line_start":248,"line_end":248,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":861,"byte_end":874,"line_start":27,"line_end":27,"column_start":18,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":93},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":1350,"byte_end":1360,"line_start":48,"line_end":48,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":3396,"byte_end":3412,"line_start":105,"line_end":105,"column_start":18,"column_end":34},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":7789,"byte_end":7808,"line_start":242,"line_end":242,"column_start":27,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/allocator.rs","byte_start":7972,"byte_end":7991,"line_start":250,"line_end":250,"column_start":18,"column_end":37},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":18262,"byte_end":18278,"line_start":174,"line_end":174,"column_start":6,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":133},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":19388,"byte_end":19404,"line_start":209,"line_end":209,"column_start":51,"column_end":67},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":5206}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":19727,"byte_end":19743,"line_start":224,"line_end":224,"column_start":21,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":20289,"byte_end":20305,"line_start":240,"line_end":240,"column_start":20,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":2141}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/gfx-descriptor-0.2.0/src/counts.rs","byte_start":20478,"byte_end":20494,"line_start":248,"line_end":248,"column_start":20,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":133},"to":{"krate":2,"index":2145}}]}