{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6","program":"/Users/antonioramos/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ultraviolet","--edition=2018","/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=76d60f8ba68a28da","-C","extra-filename=-76d60f8ba68a28da","--out-dir","/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps","-L","dependency=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps","--extern","wide=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libwide-569505f737ccba9a.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/antonioramos/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libultraviolet-76d60f8ba68a28da.rmeta"},"prelude":{"crate_id":{"name":"ultraviolet","disambiguator":[3053581281525172622,3457232241318387517]},"crate_root":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src","external_crates":[{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/util.rs","num":16,"id":{"name":"wide","disambiguator":[16371856441112073149,11390474454774288396]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/util.rs","num":17,"id":{"name":"bytemuck","disambiguator":[2524888220975382078,8546024545197404703]}}],"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":0,"byte_end":5874,"line_start":1,"line_end":94,"column_start":1,"column_end":21}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70492,"byte_end":70493,"line_start":14,"line_end":14,"column_start":17,"column_end":18},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":42}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5731,"byte_end":5732,"line_start":85,"line_end":85,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"WBivec2, Bivec2, Bivec3, WBivec3","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5748,"byte_end":5749,"line_start":86,"line_end":86,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5764,"byte_end":5765,"line_start":87,"line_end":87,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"Wat2, Mat4, Mat3, Wat3, Mat2, Wat4","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5782,"byte_end":5783,"line_start":88,"line_end":88,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"WRotor2, Rotor3, Rotor2, WRotor3","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5804,"byte_end":5805,"line_start":89,"line_end":89,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5820,"byte_end":5821,"line_start":90,"line_end":90,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"Vec3, Vec2, Wec3, Wec4, Wec2, Vec4","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5836,"byte_end":5837,"line_start":91,"line_end":91,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"Vec3i, Vec3u, MulAdd","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":0},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5848,"byte_end":5852,"line_start":93,"line_end":93,"column_start":9,"column_end":13},"alias_span":null,"name":"wide","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":1039},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5868,"byte_end":5873,"line_start":94,"line_end":94,"column_start":15,"column_end":20},"alias_span":null,"name":"f32x4","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":0,"byte_end":5874,"line_start":1,"line_end":94,"column_start":1,"column_end":21},"name":"","qualname":"::","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":13},{"krate":0,"index":20},{"krate":0,"index":29},{"krate":0,"index":42},{"krate":0,"index":108},{"krate":0,"index":115},{"krate":0,"index":120},{"krate":0,"index":190},{"krate":0,"index":227},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"decl_id":null,"docs":" ## `ultraviolet`\n \n This is a crate to computer-graphics and games-related linear algebra, but *fast*, both in terms\n of productivity and in terms of runtime performance.\n \n In terms of productivity, ultraviolet uses no generics and is designed to be as straightforward\n of an interface as possible, resulting in fast compilation times and clear code. In addition, the\n lack of generics and Rust type-system \"hacks\" result in clear and concise errors that are easy to\n parse and fix for the user.\n \n In terms of runtime performance, ultraviolet was designed from the start with performance in mind.\n To do so, we provide two separate kinds of each type, each with nearly identical functionality,\n one with usual scalar f32 values, and the other a 'wide' type which uses SIMD f32x4 vectors for\n each value. This design is clear and explicit in intent, and it also allows code to\n take full advantage of SIMD.\n \n The 'wide' types use an \"SoA\" (Structure of Arrays) architecture\n such that each `Wec` (wide-Vec) actually contains the data for 4 `Vec`s and will do any operation\n on all 4 of the vector 'lanes' at the same time (the same concept applies to a `Wat`, or 'wide-Mat').\n Doing this is potentially *much* (factor of 10)\n faster than an \"AoS\" (Array of Structs) layout, as all current Rust linear algebra libraries do,\n though it does depend on your workload. Algorithms must be carefully architected to take full advantage\n of this, and doing so can be easier said than done, especially if your algorithm involves significant\n branching.\n \n ### Benchmarks\n \n Benchmarks done using my own fork of [mathbench-rs](https://github.com/bitshifter/mathbench-rs) with support for\n ultraviolet added to some benchmarks.\n \n For the euler 2d and 3d benchmarks, the work being done is exactly equivalent. For the rest of the benchmarks,\n the work being done is *made equivalent* by performing 4 of the benchmarked operation per iteration instead of just\n one for all of the other libraries, since `ultraviolet` is computing that operation on four Vec/Mats at a time.\n \n | benchmark              |        glam   |       cgmath   |     nalgebra   |       euclid   |   ultraviolet   |\n |------------------------|---------------|----------------|----------------|----------------|-----------------|\n | euler 2d               |    9.911 us   |     9.583 us   |     21.99 us   |     15.22 us   |    __6.675 us__ |\n | euler 3d               |    15.11 us   |     32.88 us   |     237.2 us   |     32.62 us   |    __9.928 us__ |\n | mat3 transform vector3 |   6.1533 ns   |   15.2933 ns   |   15.6202 ns   |      N/A       |   __4.4778 ns__ |\n | vec3 cross             |   7.6824 ns   |   16.9919 ns   |   12.3683 ns   |   12.4657 ns   |   __3.3286 ns__ |\n | vec3 dot               |   5.6354 ns   |   10.4704 ns   |    8.7803 ns   |    7.4304 ns   |   __2.4937 ns__ |\n | vec3 length            |   5.8759 ns   |    4.2015 ns   |    4.5598 ns   |    4.2083 ns   |   __1.9067 ns__ |\n | vec3 normalize         |   8.7861 ns   |    8.1677 ns   |   33.2839 ns   |    7.6300 ns   |   __4.4362 ns__ |\n \n ### Features\n \n This crate is currently being dogfooded in my ray tracer [`rayn`](https://github.com/termhn/rayn),\n and is being used by some Amethyst developers in experimental projects while it is considered for adoption\n into Amethyst. It does what those users have currently needed it to do.\n \n There are a couple relatively unique/novel features in this lib, the most important being the use of the Geometric Algebra\n concepts of Bivectors and Rotors to represent 2d and 3d rotations, rather than implementing complex number algebra\n and Quaternion algebra.\n \n What this means for the programmer is that you will be using the `Rotor3` type in place of\n a Quaternion, though you can expect it to do basically all the same things that a Quaternion does. In fact, Quaternions\n are essentially just a special case of Rotors. The reason this decision was made was twofold: first, the derivation of\n the math is actually quite simple to understand. All the derivations for the code implemented in the Rotor structs in this\n library are written out in the `docs` folder of the GitHub repo; I derived them manually as part of the implementation.\n On the other hand, Quaternions are often basically just seen as black boxes that we programmers use to do rotations because\n they have some nice properties, but that we don't really understand. You can use Rotors this same way, but you can also easily\n understand them. Second is that in some sense they can be seen as 'more correct' than Quaternions, and especially they\n facilitate a more proper understanding of rotation as being something that occurs *within a plane* rather than something\n that occurs *around an axis*, as it is generally thought. Finally, Rotors also generalize do 4 and even higher dimensions,\n and if someone wants to they could implement a Rotor4 which retains all the properties of a Rotor3/Quaternion but does rotation\n in 4 dimensions instead, something which simply is not possible to do with Quaternions.\n \n If it's missing something you need it to do, bug me on the [GitHub issue tracker](https://github.com/termhn/ultraviolet/issues) and/or Rust community discord server\n (I'm Fusha there) and I'll try to add it for you, if I believe it fits with the vision of the lib :)\n","sig":null,"attributes":[{"value":"/ ## `ultraviolet`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":0,"byte_end":20,"line_start":1,"line_end":1,"column_start":1,"column_end":21}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":21,"byte_end":25,"line_start":2,"line_end":2,"column_start":1,"column_end":5}},{"value":"/ This is a crate to computer-graphics and games-related linear algebra, but *fast*, both in terms","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":26,"byte_end":126,"line_start":3,"line_end":3,"column_start":1,"column_end":101}},{"value":"/ of productivity and in terms of runtime performance.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":127,"byte_end":183,"line_start":4,"line_end":4,"column_start":1,"column_end":57}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":184,"byte_end":188,"line_start":5,"line_end":5,"column_start":1,"column_end":5}},{"value":"/ In terms of productivity, ultraviolet uses no generics and is designed to be as straightforward","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":189,"byte_end":288,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ of an interface as possible, resulting in fast compilation times and clear code. In addition, the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":289,"byte_end":390,"line_start":7,"line_end":7,"column_start":1,"column_end":102}},{"value":"/ lack of generics and Rust type-system \"hacks\" result in clear and concise errors that are easy to","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":391,"byte_end":492,"line_start":8,"line_end":8,"column_start":1,"column_end":102}},{"value":"/ parse and fix for the user.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":493,"byte_end":524,"line_start":9,"line_end":9,"column_start":1,"column_end":32}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":525,"byte_end":529,"line_start":10,"line_end":10,"column_start":1,"column_end":5}},{"value":"/ In terms of runtime performance, ultraviolet was designed from the start with performance in mind.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":530,"byte_end":632,"line_start":11,"line_end":11,"column_start":1,"column_end":103}},{"value":"/ To do so, we provide two separate kinds of each type, each with nearly identical functionality,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":633,"byte_end":732,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ one with usual scalar f32 values, and the other a 'wide' type which uses SIMD f32x4 vectors for","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":733,"byte_end":832,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ each value. This design is clear and explicit in intent, and it also allows code to","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":833,"byte_end":920,"line_start":14,"line_end":14,"column_start":1,"column_end":88}},{"value":"/ take full advantage of SIMD.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":921,"byte_end":953,"line_start":15,"line_end":15,"column_start":1,"column_end":33}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":954,"byte_end":958,"line_start":16,"line_end":16,"column_start":1,"column_end":5}},{"value":"/ The 'wide' types use an \"SoA\" (Structure of Arrays) architecture","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":959,"byte_end":1027,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ such that each `Wec` (wide-Vec) actually contains the data for 4 `Vec`s and will do any operation","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1028,"byte_end":1129,"line_start":18,"line_end":18,"column_start":1,"column_end":102}},{"value":"/ on all 4 of the vector 'lanes' at the same time (the same concept applies to a `Wat`, or 'wide-Mat').","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1130,"byte_end":1235,"line_start":19,"line_end":19,"column_start":1,"column_end":106}},{"value":"/ Doing this is potentially *much* (factor of 10)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1236,"byte_end":1287,"line_start":20,"line_end":20,"column_start":1,"column_end":52}},{"value":"/ faster than an \"AoS\" (Array of Structs) layout, as all current Rust linear algebra libraries do,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1288,"byte_end":1388,"line_start":21,"line_end":21,"column_start":1,"column_end":101}},{"value":"/ though it does depend on your workload. Algorithms must be carefully architected to take full advantage","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1389,"byte_end":1496,"line_start":22,"line_end":22,"column_start":1,"column_end":108}},{"value":"/ of this, and doing so can be easier said than done, especially if your algorithm involves significant","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1497,"byte_end":1602,"line_start":23,"line_end":23,"column_start":1,"column_end":106}},{"value":"/ branching.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1603,"byte_end":1617,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1618,"byte_end":1622,"line_start":25,"line_end":25,"column_start":1,"column_end":5}},{"value":"/ ### Benchmarks","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1623,"byte_end":1641,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1642,"byte_end":1646,"line_start":27,"line_end":27,"column_start":1,"column_end":5}},{"value":"/ Benchmarks done using my own fork of [mathbench-rs](https://github.com/bitshifter/mathbench-rs) with support for","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1647,"byte_end":1763,"line_start":28,"line_end":28,"column_start":1,"column_end":117}},{"value":"/ ultraviolet added to some benchmarks.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1764,"byte_end":1805,"line_start":29,"line_end":29,"column_start":1,"column_end":42}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1806,"byte_end":1810,"line_start":30,"line_end":30,"column_start":1,"column_end":5}},{"value":"/ For the euler 2d and 3d benchmarks, the work being done is exactly equivalent. For the rest of the benchmarks,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1811,"byte_end":1925,"line_start":31,"line_end":31,"column_start":1,"column_end":115}},{"value":"/ the work being done is *made equivalent* by performing 4 of the benchmarked operation per iteration instead of just","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":1926,"byte_end":2045,"line_start":32,"line_end":32,"column_start":1,"column_end":120}},{"value":"/ one for all of the other libraries, since `ultraviolet` is computing that operation on four Vec/Mats at a time.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":2046,"byte_end":2161,"line_start":33,"line_end":33,"column_start":1,"column_end":116}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":2162,"byte_end":2166,"line_start":34,"line_end":34,"column_start":1,"column_end":5}},{"value":"/ | benchmark              |        glam   |       cgmath   |     nalgebra   |       euclid   |   ultraviolet   |","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":2167,"byte_end":2282,"line_start":35,"line_end":35,"column_start":1,"column_end":116}},{"value":"/ |------------------------|---------------|----------------|----------------|----------------|-----------------|","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":2283,"byte_end":2398,"line_start":36,"line_end":36,"column_start":1,"column_end":116}},{"value":"/ | euler 2d               |    9.911 us   |     9.583 us   |     21.99 us   |     15.22 us   |    __6.675 us__ |","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":2399,"byte_end":2514,"line_start":37,"line_end":37,"column_start":1,"column_end":116}},{"value":"/ | euler 3d               |    15.11 us   |     32.88 us   |     237.2 us   |     32.62 us   |    __9.928 us__ |","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":2515,"byte_end":2630,"line_start":38,"line_end":38,"column_start":1,"column_end":116}},{"value":"/ | mat3 transform vector3 |   6.1533 ns   |   15.2933 ns   |   15.6202 ns   |      N/A       |   __4.4778 ns__ |","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":2631,"byte_end":2746,"line_start":39,"line_end":39,"column_start":1,"column_end":116}},{"value":"/ | vec3 cross             |   7.6824 ns   |   16.9919 ns   |   12.3683 ns   |   12.4657 ns   |   __3.3286 ns__ |","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":2747,"byte_end":2862,"line_start":40,"line_end":40,"column_start":1,"column_end":116}},{"value":"/ | vec3 dot               |   5.6354 ns   |   10.4704 ns   |    8.7803 ns   |    7.4304 ns   |   __2.4937 ns__ |","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":2863,"byte_end":2978,"line_start":41,"line_end":41,"column_start":1,"column_end":116}},{"value":"/ | vec3 length            |   5.8759 ns   |    4.2015 ns   |    4.5598 ns   |    4.2083 ns   |   __1.9067 ns__ |","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":2979,"byte_end":3094,"line_start":42,"line_end":42,"column_start":1,"column_end":116}},{"value":"/ | vec3 normalize         |   8.7861 ns   |    8.1677 ns   |   33.2839 ns   |    7.6300 ns   |   __4.4362 ns__ |","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3095,"byte_end":3210,"line_start":43,"line_end":43,"column_start":1,"column_end":116}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3211,"byte_end":3215,"line_start":44,"line_end":44,"column_start":1,"column_end":5}},{"value":"/ ### Features","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3216,"byte_end":3232,"line_start":45,"line_end":45,"column_start":1,"column_end":17}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3233,"byte_end":3237,"line_start":46,"line_end":46,"column_start":1,"column_end":5}},{"value":"/ This crate is currently being dogfooded in my ray tracer [`rayn`](https://github.com/termhn/rayn),","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3238,"byte_end":3340,"line_start":47,"line_end":47,"column_start":1,"column_end":103}},{"value":"/ and is being used by some Amethyst developers in experimental projects while it is considered for adoption","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3341,"byte_end":3451,"line_start":48,"line_end":48,"column_start":1,"column_end":111}},{"value":"/ into Amethyst. It does what those users have currently needed it to do.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3452,"byte_end":3527,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3528,"byte_end":3532,"line_start":50,"line_end":50,"column_start":1,"column_end":5}},{"value":"/ There are a couple relatively unique/novel features in this lib, the most important being the use of the Geometric Algebra","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3533,"byte_end":3659,"line_start":51,"line_end":51,"column_start":1,"column_end":127}},{"value":"/ concepts of Bivectors and Rotors to represent 2d and 3d rotations, rather than implementing complex number algebra","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3660,"byte_end":3778,"line_start":52,"line_end":52,"column_start":1,"column_end":119}},{"value":"/ and Quaternion algebra.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3779,"byte_end":3806,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3807,"byte_end":3811,"line_start":54,"line_end":54,"column_start":1,"column_end":5}},{"value":"/ What this means for the programmer is that you will be using the `Rotor3` type in place of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3812,"byte_end":3906,"line_start":55,"line_end":55,"column_start":1,"column_end":95}},{"value":"/ a Quaternion, though you can expect it to do basically all the same things that a Quaternion does. In fact, Quaternions","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":3907,"byte_end":4030,"line_start":56,"line_end":56,"column_start":1,"column_end":124}},{"value":"/ are essentially just a special case of Rotors. The reason this decision was made was twofold: first, the derivation of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":4031,"byte_end":4153,"line_start":57,"line_end":57,"column_start":1,"column_end":123}},{"value":"/ the math is actually quite simple to understand. All the derivations for the code implemented in the Rotor structs in this","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":4154,"byte_end":4280,"line_start":58,"line_end":58,"column_start":1,"column_end":127}},{"value":"/ library are written out in the `docs` folder of the GitHub repo; I derived them manually as part of the implementation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":4281,"byte_end":4404,"line_start":59,"line_end":59,"column_start":1,"column_end":124}},{"value":"/ On the other hand, Quaternions are often basically just seen as black boxes that we programmers use to do rotations because","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":4405,"byte_end":4532,"line_start":60,"line_end":60,"column_start":1,"column_end":128}},{"value":"/ they have some nice properties, but that we don't really understand. You can use Rotors this same way, but you can also easily","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":4533,"byte_end":4663,"line_start":61,"line_end":61,"column_start":1,"column_end":131}},{"value":"/ understand them. Second is that in some sense they can be seen as 'more correct' than Quaternions, and especially they","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":4664,"byte_end":4786,"line_start":62,"line_end":62,"column_start":1,"column_end":123}},{"value":"/ facilitate a more proper understanding of rotation as being something that occurs *within a plane* rather than something","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":4787,"byte_end":4911,"line_start":63,"line_end":63,"column_start":1,"column_end":125}},{"value":"/ that occurs *around an axis*, as it is generally thought. Finally, Rotors also generalize do 4 and even higher dimensions,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":4912,"byte_end":5038,"line_start":64,"line_end":64,"column_start":1,"column_end":127}},{"value":"/ and if someone wants to they could implement a Rotor4 which retains all the properties of a Rotor3/Quaternion but does rotation","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5039,"byte_end":5170,"line_start":65,"line_end":65,"column_start":1,"column_end":132}},{"value":"/ in 4 dimensions instead, something which simply is not possible to do with Quaternions.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5171,"byte_end":5262,"line_start":66,"line_end":66,"column_start":1,"column_end":92}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5263,"byte_end":5267,"line_start":67,"line_end":67,"column_start":1,"column_end":5}},{"value":"/ If it's missing something you need it to do, bug me on the [GitHub issue tracker](https://github.com/termhn/ultraviolet/issues) and/or Rust community discord server","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5268,"byte_end":5436,"line_start":68,"line_end":68,"column_start":1,"column_end":169}},{"value":"/ (I'm Fusha there) and I'll try to add it for you, if I believe it fits with the vision of the lib :)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5437,"byte_end":5541,"line_start":69,"line_end":69,"column_start":1,"column_end":105}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bivec","qualname":"::bivec","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":355},{"krate":0,"index":362},{"krate":0,"index":361},{"krate":0,"index":359},{"krate":0,"index":357},{"krate":0,"index":249},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":364},{"krate":0,"index":371},{"krate":0,"index":370},{"krate":0,"index":368},{"krate":0,"index":366},{"krate":0,"index":302},{"krate":0,"index":317},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":485},{"krate":0,"index":494},{"krate":0,"index":493},{"krate":0,"index":491},{"krate":0,"index":489},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":419},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":496},{"krate":0,"index":505},{"krate":0,"index":504},{"krate":0,"index":502},{"krate":0,"index":500},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482}],"decl_id":null,"docs":" Bivectors, i.e. oriented areas.","sig":null,"attributes":[{"value":"/ Bivectors, i.e. oriented areas.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":6555,"byte_end":6590,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":6591,"byte_end":6594,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A bivector is an *oriented area*, and is equivalent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":6595,"byte_end":6650,"line_start":3,"line_end":3,"column_start":1,"column_end":56}},{"value":"/ to the result of the exterior (wedge) product of two vectors, i.e.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":6651,"byte_end":6721,"line_start":4,"line_end":4,"column_start":1,"column_end":71}},{"value":"/ `u ∧ v`. This means it is the *oriented area* of the parallelogram","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":6722,"byte_end":6794,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ created by attaching two vectors and then extending them into a parallelogram.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":6795,"byte_end":6877,"line_start":6,"line_end":6,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":6878,"byte_end":6881,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This may be hard to visualize at first, but bivectors are as fundamental as vectors. If vectors","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":6882,"byte_end":6981,"line_start":8,"line_end":8,"column_start":1,"column_end":100}},{"value":"/ are a representation of *lines*, then bivectors are a representation of *planes*.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":6982,"byte_end":7067,"line_start":9,"line_end":9,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7068,"byte_end":7071,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A normalized bivector can be thought of as representing a plane of rotation and the *direction of rotation*","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7072,"byte_end":7183,"line_start":11,"line_end":11,"column_start":1,"column_end":112}},{"value":"/ inside that plane such that a *positive* rotation follows the orientation of the bivector. When","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7184,"byte_end":7283,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ you obtain a bivector by taking the exterior product of two vectors, the positive direction of rotation","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7284,"byte_end":7391,"line_start":13,"line_end":13,"column_start":1,"column_end":108}},{"value":"/ is defined as the one that *brings the first vector closer to the second*. For example, a bivector","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7392,"byte_end":7494,"line_start":14,"line_end":14,"column_start":1,"column_end":103}},{"value":"/ created by taking the exterior product `x ∧ y` of the x and y basis vectors will create a unit","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7495,"byte_end":7595,"line_start":15,"line_end":15,"column_start":1,"column_end":99}},{"value":"/ bivector that represents the xy plane, with orientation such that a positive rotation of `x` inside","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7596,"byte_end":7699,"line_start":16,"line_end":16,"column_start":1,"column_end":104}},{"value":"/ the plane would bring `x` closer to `y`. This is why positive rotation is generally defined as","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7700,"byte_end":7798,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ \"counter clockwise\" in 2d, since such a rotation brings `x` to `y`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7799,"byte_end":7870,"line_start":18,"line_end":18,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7871,"byte_end":7874,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Much like vectors can be represented as a linear combination of *basis vectors*, i.e.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7875,"byte_end":7964,"line_start":20,"line_end":20,"column_start":1,"column_end":90}},{"value":"/ a vector \"component representation,\" bivectors can be represented as a linear combination","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":7965,"byte_end":8058,"line_start":21,"line_end":21,"column_start":1,"column_end":94}},{"value":"/ of *basis bivectors*. If the basis vectors are the unit vectors in the direction of each","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8059,"byte_end":8151,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ canonical axis of a space, then the basis bivectors are the *unit area planes* in each of the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8152,"byte_end":8249,"line_start":23,"line_end":23,"column_start":1,"column_end":98}},{"value":"/ canonical planes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8250,"byte_end":8271,"line_start":24,"line_end":24,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8272,"byte_end":8275,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ In 2d, there is only one basis plane, the xy plane, which represents all of 2d space. As such, in 2d","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8276,"byte_end":8380,"line_start":26,"line_end":26,"column_start":1,"column_end":105}},{"value":"/ there is only *one* basis bivector, while there are *two* basis vectors. This means that a 2d bivector","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8381,"byte_end":8487,"line_start":27,"line_end":27,"column_start":1,"column_end":107}},{"value":"/ has only one component.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8488,"byte_end":8515,"line_start":28,"line_end":28,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8516,"byte_end":8519,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In 3d, there are three basis planes, the xy plane, the xz plane, and the yz plane, which are respectively","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8520,"byte_end":8629,"line_start":30,"line_end":30,"column_start":1,"column_end":110}},{"value":"/ the planes parallel to those combinations of the x, y, and z basis vectors. Therefore, a 3d bivector has","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8630,"byte_end":8738,"line_start":31,"line_end":31,"column_start":1,"column_end":109}},{"value":"/ three components, each of which represents the *projected area* of that bivector onto one of the three","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8739,"byte_end":8845,"line_start":32,"line_end":32,"column_start":1,"column_end":107}},{"value":"/ basis bivectors. This is analogous to how vector components represent the *projected length* of that vector","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8846,"byte_end":8957,"line_start":33,"line_end":33,"column_start":1,"column_end":112}},{"value":"/ onto each unit vector.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":8958,"byte_end":8984,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":15958,"byte_end":15964,"line_start":288,"line_end":288,"column_start":11,"column_end":17},"name":"Bivec2","qualname":"::bivec::Bivec2","value":"Bivec2 { xy }","parent":null,"children":[{"krate":0,"index":356}],"decl_id":null,"docs":" A bivector in 2d space.","sig":null,"attributes":[{"value":"/ A bivector in 2d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9143,"byte_end":9170,"line_start":45,"line_end":45,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9179,"byte_end":9182,"line_start":46,"line_end":46,"column_start":9,"column_end":12}},{"value":"/ Since in 2d there is only one plane in the whole of 2d space, a 2d bivector","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9191,"byte_end":9270,"line_start":47,"line_end":47,"column_start":9,"column_end":88}},{"value":"/ has only one component.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9279,"byte_end":9306,"line_start":48,"line_end":48,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9315,"byte_end":9318,"line_start":49,"line_end":49,"column_start":9,"column_end":12}},{"value":"/ Please see the module level documentation for more information on bivectors generally!","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9327,"byte_end":9417,"line_start":50,"line_end":50,"column_start":9,"column_end":99}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9473,"byte_end":9483,"line_start":52,"line_end":52,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":15975,"byte_end":15982,"line_start":288,"line_end":288,"column_start":28,"column_end":35},"name":"WBivec2","qualname":"::bivec::WBivec2","value":"WBivec2 { xy }","parent":null,"children":[{"krate":0,"index":365}],"decl_id":null,"docs":" A bivector in 2d space.","sig":null,"attributes":[{"value":"/ A bivector in 2d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9143,"byte_end":9170,"line_start":45,"line_end":45,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9179,"byte_end":9182,"line_start":46,"line_end":46,"column_start":9,"column_end":12}},{"value":"/ Since in 2d there is only one plane in the whole of 2d space, a 2d bivector","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9191,"byte_end":9270,"line_start":47,"line_end":47,"column_start":9,"column_end":88}},{"value":"/ has only one component.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9279,"byte_end":9306,"line_start":48,"line_end":48,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9315,"byte_end":9318,"line_start":49,"line_end":49,"column_start":9,"column_end":12}},{"value":"/ Please see the module level documentation for more information on bivectors generally!","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9327,"byte_end":9417,"line_start":50,"line_end":50,"column_start":9,"column_end":99}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":9473,"byte_end":9483,"line_start":52,"line_end":52,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":24707,"byte_end":24713,"line_start":575,"line_end":575,"column_start":10,"column_end":16},"name":"Bivec3","qualname":"::bivec::Bivec3","value":"Bivec3 { xy, xz, yz }","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488}],"decl_id":null,"docs":" A bivector in 3d space.","sig":null,"attributes":[{"value":"/ A bivector in 3d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16089,"byte_end":16116,"line_start":293,"line_end":293,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16125,"byte_end":16128,"line_start":294,"line_end":294,"column_start":9,"column_end":12}},{"value":"/ In 3d, a bivector has 3 components, each one representing the signed *projected area* of the bivector","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16137,"byte_end":16242,"line_start":295,"line_end":295,"column_start":9,"column_end":114}},{"value":"/ onto one of the 3 *basis bivectors*, which can be thought of as corresponding to each of hte","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16251,"byte_end":16347,"line_start":296,"line_end":296,"column_start":9,"column_end":105}},{"value":"/ three basis planes. This is analogous to the components of a 3d vector, which correspond to the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16356,"byte_end":16455,"line_start":297,"line_end":297,"column_start":9,"column_end":108}},{"value":"/ *projected length* of the vector onto the three basis *vectors. Since in 3d, there are three","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16464,"byte_end":16560,"line_start":298,"line_end":298,"column_start":9,"column_end":105}},{"value":"/ components for both vectors and bivectors, 3d bivectors have been historically confused with","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16569,"byte_end":16665,"line_start":299,"line_end":299,"column_start":9,"column_end":105}},{"value":"/ 3d vectors quite a lot.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16674,"byte_end":16701,"line_start":300,"line_end":300,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16710,"byte_end":16713,"line_start":301,"line_end":301,"column_start":9,"column_end":12}},{"value":"/ Please see the module level documentation for more information on bivectors generally!","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16722,"byte_end":16812,"line_start":302,"line_end":302,"column_start":9,"column_end":99}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16868,"byte_end":16878,"line_start":304,"line_end":304,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":496},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":24730,"byte_end":24737,"line_start":575,"line_end":575,"column_start":33,"column_end":40},"name":"WBivec3","qualname":"::bivec::WBivec3","value":"WBivec3 { xy, xz, yz }","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" A bivector in 3d space.","sig":null,"attributes":[{"value":"/ A bivector in 3d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16089,"byte_end":16116,"line_start":293,"line_end":293,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16125,"byte_end":16128,"line_start":294,"line_end":294,"column_start":9,"column_end":12}},{"value":"/ In 3d, a bivector has 3 components, each one representing the signed *projected area* of the bivector","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16137,"byte_end":16242,"line_start":295,"line_end":295,"column_start":9,"column_end":114}},{"value":"/ onto one of the 3 *basis bivectors*, which can be thought of as corresponding to each of hte","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16251,"byte_end":16347,"line_start":296,"line_end":296,"column_start":9,"column_end":105}},{"value":"/ three basis planes. This is analogous to the components of a 3d vector, which correspond to the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16356,"byte_end":16455,"line_start":297,"line_end":297,"column_start":9,"column_end":108}},{"value":"/ *projected length* of the vector onto the three basis *vectors. Since in 3d, there are three","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16464,"byte_end":16560,"line_start":298,"line_end":298,"column_start":9,"column_end":105}},{"value":"/ components for both vectors and bivectors, 3d bivectors have been historically confused with","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16569,"byte_end":16665,"line_start":299,"line_end":299,"column_start":9,"column_end":105}},{"value":"/ 3d vectors quite a lot.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16674,"byte_end":16701,"line_start":300,"line_end":300,"column_start":9,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16710,"byte_end":16713,"line_start":301,"line_end":301,"column_start":9,"column_end":12}},{"value":"/ Please see the module level documentation for more information on bivectors generally!","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16722,"byte_end":16812,"line_start":302,"line_end":302,"column_start":9,"column_end":99}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/bivec.rs","byte_start":16868,"byte_end":16878,"line_start":304,"line_end":304,"column_start":9,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":20},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lerp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lerp","qualname":"::lerp","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lerp.rs","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":533}],"decl_id":null,"docs":" Linear interpolation on types for which it makes sense.\n","sig":null,"attributes":[{"value":"/ Linear interpolation on types for which it makes sense.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lerp.rs","byte_start":24758,"byte_end":24817,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lerp.rs","byte_start":24908,"byte_end":24912,"line_start":8,"line_end":8,"column_start":11,"column_end":15},"name":"Lerp","qualname":"::lerp::Lerp","value":"Lerp<T>","parent":null,"children":[{"krate":0,"index":27}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lerp.rs","byte_start":24925,"byte_end":24929,"line_start":9,"line_end":9,"column_start":8,"column_end":12},"name":"lerp","qualname":"::lerp::Lerp::lerp","value":"pub fn lerp(&Self, Self, T) -> Self","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":29},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mat","qualname":"::mat","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":607},{"krate":0,"index":613},{"krate":0,"index":612},{"krate":0,"index":610},{"krate":0,"index":616},{"krate":0,"index":535},{"krate":0,"index":552},{"krate":0,"index":555},{"krate":0,"index":558},{"krate":0,"index":562},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":618},{"krate":0,"index":624},{"krate":0,"index":623},{"krate":0,"index":621},{"krate":0,"index":627},{"krate":0,"index":571},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":735},{"krate":0,"index":741},{"krate":0,"index":740},{"krate":0,"index":738},{"krate":0,"index":744},{"krate":0,"index":629},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":673},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":746},{"krate":0,"index":752},{"krate":0,"index":751},{"krate":0,"index":749},{"krate":0,"index":755},{"krate":0,"index":682},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":726},{"krate":0,"index":730},{"krate":0,"index":733},{"krate":0,"index":867},{"krate":0,"index":873},{"krate":0,"index":872},{"krate":0,"index":870},{"krate":0,"index":876},{"krate":0,"index":757},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":799},{"krate":0,"index":803},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":878},{"krate":0,"index":884},{"krate":0,"index":883},{"krate":0,"index":881},{"krate":0,"index":887},{"krate":0,"index":812},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":854},{"krate":0,"index":858},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":36},{"krate":0,"index":39}],"decl_id":null,"docs":" Square matrices.\n","sig":null,"attributes":[{"value":"/ Square matrices.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":25391,"byte_end":25411,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":607},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":31239,"byte_end":31243,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"Mat2","qualname":"::mat::Mat2","value":"Mat2 { cols }","parent":null,"children":[{"krate":0,"index":608}],"decl_id":null,"docs":" A 2x2 square matrix.","sig":null,"attributes":[{"value":"/ A 2x2 square matrix.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":25564,"byte_end":25588,"line_start":10,"line_end":10,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":25597,"byte_end":25600,"line_start":11,"line_end":11,"column_start":9,"column_end":12}},{"value":"/ Useful for performing linear transformations (rotation, scaling) on 2d vectors.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":25609,"byte_end":25692,"line_start":12,"line_end":12,"column_start":9,"column_end":92}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":25741,"byte_end":25751,"line_start":14,"line_end":14,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":618},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":31270,"byte_end":31274,"line_start":187,"line_end":187,"column_start":39,"column_end":43},"name":"Wat2","qualname":"::mat::Wat2","value":"Wat2 { cols }","parent":null,"children":[{"krate":0,"index":619}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":25741,"byte_end":25751,"line_start":14,"line_end":14,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":735},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":47617,"byte_end":47621,"line_start":593,"line_end":593,"column_start":8,"column_end":12},"name":"Mat3","qualname":"::mat::Mat3","value":"Mat3 { cols }","parent":null,"children":[{"krate":0,"index":736}],"decl_id":null,"docs":" A 3x3 square matrix.","sig":null,"attributes":[{"value":"/ A 3x3 square matrix.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":31440,"byte_end":31464,"line_start":191,"line_end":191,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":31473,"byte_end":31476,"line_start":192,"line_end":192,"column_start":9,"column_end":12}},{"value":"/ Useful for performing linear transformations (rotation, scaling) on 3d vectors,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":31485,"byte_end":31568,"line_start":193,"line_end":193,"column_start":9,"column_end":92}},{"value":"/ or for performing arbitrary transformations (linear +   translation, projection, etc)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":31577,"byte_end":31666,"line_start":194,"line_end":194,"column_start":9,"column_end":98}},{"value":"/ on homogeneous 2d vectors","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":31675,"byte_end":31704,"line_start":195,"line_end":195,"column_start":9,"column_end":38}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":31753,"byte_end":31763,"line_start":197,"line_end":197,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":746},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":47670,"byte_end":47674,"line_start":593,"line_end":593,"column_start":61,"column_end":65},"name":"Wat3","qualname":"::mat::Wat3","value":"Wat3 { cols }","parent":null,"children":[{"krate":0,"index":747}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":31753,"byte_end":31763,"line_start":197,"line_end":197,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":867},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":69063,"byte_end":69067,"line_start":1095,"line_end":1095,"column_start":8,"column_end":12},"name":"Mat4","qualname":"::mat::Mat4","value":"Mat4 { cols }","parent":null,"children":[{"krate":0,"index":868}],"decl_id":null,"docs":" A 4x4 square matrix.","sig":null,"attributes":[{"value":"/ A 4x4 square matrix.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":47840,"byte_end":47864,"line_start":597,"line_end":597,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":47873,"byte_end":47876,"line_start":598,"line_end":598,"column_start":9,"column_end":12}},{"value":"/ Useful for performing linear transformations (rotation, scaling) on 4d vectors,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":47885,"byte_end":47968,"line_start":599,"line_end":599,"column_start":9,"column_end":92}},{"value":"/ or for performing arbitrary transformations (linear + translation, projection, etc)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":47977,"byte_end":48064,"line_start":600,"line_end":600,"column_start":9,"column_end":96}},{"value":"/ on homogeneous 3d vectors.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":48073,"byte_end":48103,"line_start":601,"line_end":601,"column_start":9,"column_end":39}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":48112,"byte_end":48115,"line_start":602,"line_end":602,"column_start":9,"column_end":12}},{"value":"/ Note that most constructors assume that the matrix will be used as a homogeneous 3d","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":48124,"byte_end":48211,"line_start":603,"line_end":603,"column_start":9,"column_end":96}},{"value":"/ transformation matrix.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":48220,"byte_end":48246,"line_start":604,"line_end":604,"column_start":9,"column_end":35}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":48295,"byte_end":48305,"line_start":606,"line_end":606,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":69104,"byte_end":69108,"line_start":1095,"line_end":1095,"column_start":49,"column_end":53},"name":"Wat4","qualname":"::mat::Wat4","value":"Wat4 { cols }","parent":null,"children":[{"krate":0,"index":879}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":48295,"byte_end":48305,"line_start":606,"line_end":606,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":69218,"byte_end":69227,"line_start":1099,"line_end":1099,"column_start":12,"column_end":21},"name":"translate","qualname":"<Mat4>::translate","value":"pub fn translate(&mut Self, &Vec3)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":69402,"byte_end":69412,"line_start":1104,"line_end":1104,"column_start":12,"column_end":22},"name":"translated","qualname":"<Mat4>::translated","value":"pub fn translated(&Self, &Vec3) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":69604,"byte_end":69613,"line_start":1114,"line_end":1114,"column_start":12,"column_end":21},"name":"translate","qualname":"<Wat4>::translate","value":"pub fn translate(&mut Self, &Wec3)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":69847,"byte_end":69857,"line_start":1122,"line_end":1122,"column_start":12,"column_end":22},"name":"translated","qualname":"<Wat4>::translated","value":"pub fn translated(&Self, &Wec3) -> Wat4","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":42},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"projection","qualname":"::projection","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":59},{"krate":0,"index":75},{"krate":0,"index":91},{"krate":0,"index":107}],"decl_id":null,"docs":" Utility functions to create projection matrices.","sig":null,"attributes":[{"value":"/ Utility functions to create projection matrices.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":69982,"byte_end":70034,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70035,"byte_end":70038,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Each module contains versions for a certain kind of \"base\" coordinate systems, i.e. the coordinate","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70039,"byte_end":70141,"line_start":3,"line_end":3,"column_start":1,"column_end":103}},{"value":"/ system that your client application is using. All of them assume +x is pointing to the right.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70142,"byte_end":70239,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70240,"byte_end":70243,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The `rh_yup` module is publicly re-exported as it contains the functions for what is generally seen","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70244,"byte_end":70347,"line_start":6,"line_end":6,"column_start":1,"column_end":104}},{"value":"/ as the 'standard' computer graphics coordinate space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70348,"byte_end":70405,"line_start":7,"line_end":7,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":43},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lh_ydown","qualname":"::projection::lh_ydown","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":" Projection matrices that are intended to be used when the base coordinate\n system (i.e. the one used by the application code) is left-handed, with the\n x-axis pointing right, y-axis pointing *down*, and z-axis pointing *out of\n the screen*.\n","sig":null,"attributes":[{"value":"/ Projection matrices that are intended to be used when the base coordinate","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":70496,"byte_end":70573,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ system (i.e. the one used by the application code) is left-handed, with the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":70574,"byte_end":70653,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ x-axis pointing right, y-axis pointing *down*, and z-axis pointing *out of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":70654,"byte_end":70732,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ the screen*.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":70733,"byte_end":70749,"line_start":4,"line_end":4,"column_start":1,"column_end":17}}]},{"kind":"Function","id":{"krate":0,"index":46},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":71083,"byte_end":71098,"line_start":15,"line_end":15,"column_start":8,"column_end":23},"name":"orthographic_gl","qualname":"::projection::lh_ydown::orthographic_gl","value":"pub fn orthographic_gl(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with OpenGL.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":70790,"byte_end":70845,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":70846,"byte_end":70849,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":70850,"byte_end":70944,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ and the destination space is left-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":70945,"byte_end":70989,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/ and y-up, with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":70990,"byte_end":71065,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":71066,"byte_end":71075,"line_start":14,"line_end":14,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":47},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":71861,"byte_end":71876,"line_start":36,"line_end":36,"column_start":8,"column_end":23},"name":"orthographic_vk","qualname":"::projection::lh_ydown::orthographic_vk","value":"pub fn orthographic_vk(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with Vulkan.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":71566,"byte_end":71621,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":71622,"byte_end":71625,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":71626,"byte_end":71720,"line_start":32,"line_end":32,"column_start":1,"column_end":95}},{"value":"/ and the destination space is right-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":71721,"byte_end":71766,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/ and y-down, with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":71767,"byte_end":71843,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":71844,"byte_end":71853,"line_start":35,"line_end":35,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":48},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":72613,"byte_end":72628,"line_start":56,"line_end":56,"column_start":8,"column_end":23},"name":"orthographic_dx","qualname":"::projection::lh_ydown::orthographic_dx","value":"pub fn orthographic_dx(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with OpenGL.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":72318,"byte_end":72373,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":72374,"byte_end":72377,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":72378,"byte_end":72472,"line_start":52,"line_end":52,"column_start":1,"column_end":95}},{"value":"/ and the destination space is be left-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":72473,"byte_end":72520,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/ and y-up, with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":72521,"byte_end":72595,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":72596,"byte_end":72605,"line_start":55,"line_end":55,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":49},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73550,"byte_end":73564,"line_start":79,"line_end":79,"column_start":8,"column_end":22},"name":"perspective_gl","qualname":"::projection::lh_ydown::perspective_gl","value":"pub fn perspective_gl(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73071,"byte_end":73134,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73135,"byte_end":73138,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73139,"byte_end":73190,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73191,"byte_end":73252,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73253,"byte_end":73256,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73257,"byte_end":73351,"line_start":75,"line_end":75,"column_start":1,"column_end":95}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73352,"byte_end":73445,"line_start":76,"line_end":76,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73446,"byte_end":73532,"line_start":77,"line_end":77,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73533,"byte_end":73542,"line_start":78,"line_end":78,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74463,"byte_end":74477,"line_start":102,"line_end":102,"column_start":8,"column_end":22},"name":"perspective_dx","qualname":"::projection::lh_ydown::perspective_dx","value":"pub fn perspective_dx(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":73984,"byte_end":74048,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74049,"byte_end":74052,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74053,"byte_end":74104,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74105,"byte_end":74166,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74167,"byte_end":74170,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74171,"byte_end":74265,"line_start":98,"line_end":98,"column_start":1,"column_end":95}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74266,"byte_end":74359,"line_start":99,"line_end":99,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74360,"byte_end":74445,"line_start":100,"line_end":100,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74446,"byte_end":74455,"line_start":101,"line_end":101,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":51},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75361,"byte_end":75375,"line_start":125,"line_end":125,"column_start":8,"column_end":22},"name":"perspective_vk","qualname":"::projection::lh_ydown::perspective_vk","value":"pub fn perspective_vk(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74880,"byte_end":74943,"line_start":116,"line_end":116,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74944,"byte_end":74947,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":74948,"byte_end":74999,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75000,"byte_end":75061,"line_start":119,"line_end":119,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75062,"byte_end":75065,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75066,"byte_end":75160,"line_start":121,"line_end":121,"column_start":1,"column_end":95}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75161,"byte_end":75254,"line_start":122,"line_end":122,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75255,"byte_end":75343,"line_start":123,"line_end":123,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75344,"byte_end":75353,"line_start":124,"line_end":124,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":52},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76525,"byte_end":76550,"line_start":152,"line_end":152,"column_start":8,"column_end":33},"name":"perspective_infinite_z_gl","qualname":"::projection::lh_ydown::perspective_infinite_z_gl","value":"pub fn perspective_infinite_z_gl(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75777,"byte_end":75866,"line_start":139,"line_end":139,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75867,"byte_end":75870,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75871,"byte_end":75968,"line_start":141,"line_end":141,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":75969,"byte_end":76065,"line_start":142,"line_end":142,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76066,"byte_end":76109,"line_start":143,"line_end":143,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76110,"byte_end":76113,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76114,"byte_end":76165,"line_start":145,"line_end":145,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76166,"byte_end":76227,"line_start":146,"line_end":146,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76228,"byte_end":76231,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76232,"byte_end":76326,"line_start":148,"line_end":148,"column_start":1,"column_end":95}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76327,"byte_end":76420,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76421,"byte_end":76507,"line_start":150,"line_end":150,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76508,"byte_end":76517,"line_start":151,"line_end":151,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":53},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77647,"byte_end":77672,"line_start":178,"line_end":178,"column_start":8,"column_end":33},"name":"perspective_infinite_z_vk","qualname":"::projection::lh_ydown::perspective_infinite_z_vk","value":"pub fn perspective_infinite_z_vk(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76897,"byte_end":76986,"line_start":165,"line_end":165,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76987,"byte_end":76990,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":76991,"byte_end":77088,"line_start":167,"line_end":167,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77089,"byte_end":77185,"line_start":168,"line_end":168,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77186,"byte_end":77229,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77230,"byte_end":77233,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77234,"byte_end":77285,"line_start":171,"line_end":171,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77286,"byte_end":77347,"line_start":172,"line_end":172,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77348,"byte_end":77351,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77352,"byte_end":77446,"line_start":174,"line_end":174,"column_start":1,"column_end":95}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77447,"byte_end":77540,"line_start":175,"line_end":175,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77541,"byte_end":77629,"line_start":176,"line_end":176,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":77630,"byte_end":77639,"line_start":177,"line_end":177,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":54},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78760,"byte_end":78785,"line_start":204,"line_end":204,"column_start":8,"column_end":33},"name":"perspective_infinite_z_dx","qualname":"::projection::lh_ydown::perspective_infinite_z_dx","value":"pub fn perspective_infinite_z_dx(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78012,"byte_end":78102,"line_start":191,"line_end":191,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78103,"byte_end":78106,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78107,"byte_end":78204,"line_start":193,"line_end":193,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78205,"byte_end":78301,"line_start":194,"line_end":194,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78302,"byte_end":78345,"line_start":195,"line_end":195,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78346,"byte_end":78349,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78350,"byte_end":78401,"line_start":197,"line_end":197,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78402,"byte_end":78463,"line_start":198,"line_end":198,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78464,"byte_end":78467,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78468,"byte_end":78562,"line_start":200,"line_end":200,"column_start":1,"column_end":95}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78563,"byte_end":78656,"line_start":201,"line_end":201,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78657,"byte_end":78742,"line_start":202,"line_end":202,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":78743,"byte_end":78752,"line_start":203,"line_end":203,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":55},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":80124,"byte_end":80152,"line_start":233,"line_end":233,"column_start":8,"column_end":36},"name":"perspective_reversed_z_dx_gl","qualname":"::projection::lh_ydown::perspective_reversed_z_dx_gl","value":"pub fn perspective_reversed_z_dx_gl(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed z-axis meant to be used with DirectX or OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed z-axis meant to be used with DirectX or OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79126,"byte_end":79221,"line_start":217,"line_end":217,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79222,"byte_end":79225,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79226,"byte_end":79313,"line_start":219,"line_end":219,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79314,"byte_end":79418,"line_start":220,"line_end":220,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79419,"byte_end":79509,"line_start":221,"line_end":221,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79510,"byte_end":79513,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79514,"byte_end":79565,"line_start":223,"line_end":223,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79566,"byte_end":79627,"line_start":224,"line_end":224,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79628,"byte_end":79631,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79632,"byte_end":79726,"line_start":226,"line_end":226,"column_start":1,"column_end":95}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79727,"byte_end":79820,"line_start":227,"line_end":227,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79821,"byte_end":79906,"line_start":228,"line_end":228,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79907,"byte_end":79910,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ **Note that in order for this to work properly with OpenGL, you'll need to use the `gl_arb_clip_control` extension","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":79911,"byte_end":80029,"line_start":230,"line_end":230,"column_start":1,"column_end":119}},{"value":"/ and set the z clip from 0.0 to 1.0 rather than the default -1.0 to 1.0**","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":80030,"byte_end":80106,"line_start":231,"line_end":231,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":80107,"byte_end":80116,"line_start":232,"line_end":232,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":56},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":81372,"byte_end":81397,"line_start":265,"line_end":265,"column_start":8,"column_end":33},"name":"perspective_reversed_z_vk","qualname":"::projection::lh_ydown::perspective_reversed_z_vk","value":"pub fn perspective_reversed_z_vk(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed z-axis meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed z-axis meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":80582,"byte_end":80666,"line_start":252,"line_end":252,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":80667,"byte_end":80670,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":80671,"byte_end":80758,"line_start":254,"line_end":254,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":80759,"byte_end":80863,"line_start":255,"line_end":255,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":80864,"byte_end":80954,"line_start":256,"line_end":256,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":80955,"byte_end":80958,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":80959,"byte_end":81010,"line_start":258,"line_end":258,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":81011,"byte_end":81072,"line_start":259,"line_end":259,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":81073,"byte_end":81076,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":81077,"byte_end":81171,"line_start":261,"line_end":261,"column_start":1,"column_end":95}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":81172,"byte_end":81265,"line_start":262,"line_end":262,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":81266,"byte_end":81354,"line_start":263,"line_end":263,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":81355,"byte_end":81364,"line_start":264,"line_end":264,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":57},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":83149,"byte_end":83186,"line_start":306,"line_end":306,"column_start":8,"column_end":45},"name":"perspective_reversed_infinite_z_dx_gl","qualname":"::projection::lh_ydown::perspective_reversed_infinite_z_dx_gl","value":"pub fn perspective_reversed_infinite_z_dx_gl(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed and infinite z-axis meant to be used with OpenGL or DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed and infinite z-axis meant to be used with OpenGL or DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":81819,"byte_end":81927,"line_start":284,"line_end":284,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":81928,"byte_end":81931,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":81932,"byte_end":82019,"line_start":286,"line_end":286,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82020,"byte_end":82124,"line_start":287,"line_end":287,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82125,"byte_end":82215,"line_start":288,"line_end":288,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82216,"byte_end":82219,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Infinte-Z is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82220,"byte_end":82322,"line_start":290,"line_end":290,"column_start":1,"column_end":103}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82323,"byte_end":82419,"line_start":291,"line_end":291,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82420,"byte_end":82463,"line_start":292,"line_end":292,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82464,"byte_end":82467,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Combining them gives the best of both worlds for large scenes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82468,"byte_end":82534,"line_start":294,"line_end":294,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82535,"byte_end":82538,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82539,"byte_end":82590,"line_start":296,"line_end":296,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82591,"byte_end":82652,"line_start":297,"line_end":297,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82653,"byte_end":82656,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82657,"byte_end":82751,"line_start":299,"line_end":299,"column_start":1,"column_end":95}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82752,"byte_end":82845,"line_start":300,"line_end":300,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82846,"byte_end":82931,"line_start":301,"line_end":301,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82932,"byte_end":82935,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ **Note that in order for this to work properly with OpenGL, you'll need to use the `gl_arb_clip_control` extension","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":82936,"byte_end":83054,"line_start":303,"line_end":303,"column_start":1,"column_end":119}},{"value":"/ and set the z clip from 0.0 to 1.0 rather than the default -1.0 to 1.0**","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":83055,"byte_end":83131,"line_start":304,"line_end":304,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":83132,"byte_end":83141,"line_start":305,"line_end":305,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84662,"byte_end":84696,"line_start":342,"line_end":342,"column_start":8,"column_end":42},"name":"perspective_reversed_infinite_z_vk","qualname":"::projection::lh_ydown::perspective_reversed_infinite_z_vk","value":"pub fn perspective_reversed_infinite_z_vk(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed and infinite z-axis meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed and infinite z-axis meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":83540,"byte_end":83637,"line_start":323,"line_end":323,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":83638,"byte_end":83641,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":83642,"byte_end":83729,"line_start":325,"line_end":325,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":83730,"byte_end":83834,"line_start":326,"line_end":326,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":83835,"byte_end":83925,"line_start":327,"line_end":327,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":83926,"byte_end":83929,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ Infinte-Z is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":83930,"byte_end":84032,"line_start":329,"line_end":329,"column_start":1,"column_end":103}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84033,"byte_end":84129,"line_start":330,"line_end":330,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84130,"byte_end":84173,"line_start":331,"line_end":331,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84174,"byte_end":84177,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ Combining them gives the best of both worlds for large scenes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84178,"byte_end":84244,"line_start":333,"line_end":333,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84245,"byte_end":84248,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84249,"byte_end":84300,"line_start":335,"line_end":335,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84301,"byte_end":84362,"line_start":336,"line_end":336,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84363,"byte_end":84366,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84367,"byte_end":84461,"line_start":338,"line_end":338,"column_start":1,"column_end":95}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84462,"byte_end":84555,"line_start":339,"line_end":339,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84556,"byte_end":84644,"line_start":340,"line_end":340,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_ydown.rs","byte_start":84645,"byte_end":84654,"line_start":341,"line_end":341,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":59},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lh_yup","qualname":"::projection::lh_yup","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74}],"decl_id":null,"docs":" Projection matrices that are intended to be used when the base coordinate\n system (i.e. the one used by the application code) is left-handed, with the\n x-axis pointing right, y-axis pointing *up*, and z-axis pointing *into the\n screen*.\n","sig":null,"attributes":[{"value":"/ Projection matrices that are intended to be used when the base coordinate","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85049,"byte_end":85126,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ system (i.e. the one used by the application code) is left-handed, with the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85127,"byte_end":85206,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ x-axis pointing right, y-axis pointing *up*, and z-axis pointing *into the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85207,"byte_end":85285,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/ screen*.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85286,"byte_end":85298,"line_start":4,"line_end":4,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":62},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85630,"byte_end":85645,"line_start":15,"line_end":15,"column_start":8,"column_end":23},"name":"orthographic_gl","qualname":"::projection::lh_yup::orthographic_gl","value":"pub fn orthographic_gl(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with OpenGL.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85339,"byte_end":85394,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85395,"byte_end":85398,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85399,"byte_end":85491,"line_start":11,"line_end":11,"column_start":1,"column_end":93}},{"value":"/ and the destination space is left-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85492,"byte_end":85536,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/ and y-up, with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85537,"byte_end":85612,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":85613,"byte_end":85622,"line_start":14,"line_end":14,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":86405,"byte_end":86420,"line_start":36,"line_end":36,"column_start":8,"column_end":23},"name":"orthographic_vk","qualname":"::projection::lh_yup::orthographic_vk","value":"pub fn orthographic_vk(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with Vulkan.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":86112,"byte_end":86167,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":86168,"byte_end":86171,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":86172,"byte_end":86264,"line_start":32,"line_end":32,"column_start":1,"column_end":93}},{"value":"/ and the destination space is right-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":86265,"byte_end":86310,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/ and y-down, with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":86311,"byte_end":86387,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":86388,"byte_end":86397,"line_start":35,"line_end":35,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87154,"byte_end":87169,"line_start":56,"line_end":56,"column_start":8,"column_end":23},"name":"orthographic_dx","qualname":"::projection::lh_yup::orthographic_dx","value":"pub fn orthographic_dx(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with DirectX.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":86863,"byte_end":86919,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":86920,"byte_end":86923,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":86924,"byte_end":87016,"line_start":52,"line_end":52,"column_start":1,"column_end":93}},{"value":"/ and the destination space is left-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87017,"byte_end":87061,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/ and y-up, with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87062,"byte_end":87136,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87137,"byte_end":87146,"line_start":55,"line_end":55,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88088,"byte_end":88102,"line_start":79,"line_end":79,"column_start":8,"column_end":22},"name":"perspective_gl","qualname":"::projection::lh_yup::perspective_gl","value":"pub fn perspective_gl(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87611,"byte_end":87674,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87675,"byte_end":87678,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87679,"byte_end":87730,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87731,"byte_end":87792,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87793,"byte_end":87796,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87797,"byte_end":87889,"line_start":75,"line_end":75,"column_start":1,"column_end":93}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87890,"byte_end":87983,"line_start":76,"line_end":76,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":87984,"byte_end":88070,"line_start":77,"line_end":77,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88071,"byte_end":88080,"line_start":78,"line_end":78,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":66},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88998,"byte_end":89012,"line_start":102,"line_end":102,"column_start":8,"column_end":22},"name":"perspective_dx","qualname":"::projection::lh_yup::perspective_dx","value":"pub fn perspective_dx(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88521,"byte_end":88585,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88586,"byte_end":88589,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88590,"byte_end":88641,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88642,"byte_end":88703,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88704,"byte_end":88707,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88708,"byte_end":88800,"line_start":98,"line_end":98,"column_start":1,"column_end":93}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88801,"byte_end":88894,"line_start":99,"line_end":99,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88895,"byte_end":88980,"line_start":100,"line_end":100,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":88981,"byte_end":88990,"line_start":101,"line_end":101,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":67},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":89893,"byte_end":89907,"line_start":125,"line_end":125,"column_start":8,"column_end":22},"name":"perspective_vk","qualname":"::projection::lh_yup::perspective_vk","value":"pub fn perspective_vk(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":89414,"byte_end":89477,"line_start":116,"line_end":116,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":89478,"byte_end":89481,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":89482,"byte_end":89533,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":89534,"byte_end":89595,"line_start":119,"line_end":119,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":89596,"byte_end":89599,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":89600,"byte_end":89692,"line_start":121,"line_end":121,"column_start":1,"column_end":93}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":89693,"byte_end":89786,"line_start":122,"line_end":122,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":89787,"byte_end":89875,"line_start":123,"line_end":123,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":89876,"byte_end":89885,"line_start":124,"line_end":124,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91056,"byte_end":91081,"line_start":152,"line_end":152,"column_start":8,"column_end":33},"name":"perspective_infinite_z_gl","qualname":"::projection::lh_yup::perspective_infinite_z_gl","value":"pub fn perspective_infinite_z_gl(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90310,"byte_end":90399,"line_start":139,"line_end":139,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90400,"byte_end":90403,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90404,"byte_end":90501,"line_start":141,"line_end":141,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90502,"byte_end":90598,"line_start":142,"line_end":142,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90599,"byte_end":90642,"line_start":143,"line_end":143,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90643,"byte_end":90646,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90647,"byte_end":90698,"line_start":145,"line_end":145,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90699,"byte_end":90760,"line_start":146,"line_end":146,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90761,"byte_end":90764,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90765,"byte_end":90857,"line_start":148,"line_end":148,"column_start":1,"column_end":93}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90858,"byte_end":90951,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":90952,"byte_end":91038,"line_start":150,"line_end":150,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91039,"byte_end":91048,"line_start":151,"line_end":151,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92175,"byte_end":92200,"line_start":178,"line_end":178,"column_start":8,"column_end":33},"name":"perspective_infinite_z_vk","qualname":"::projection::lh_yup::perspective_infinite_z_vk","value":"pub fn perspective_infinite_z_vk(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91427,"byte_end":91516,"line_start":165,"line_end":165,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91517,"byte_end":91520,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91521,"byte_end":91618,"line_start":167,"line_end":167,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91619,"byte_end":91715,"line_start":168,"line_end":168,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91716,"byte_end":91759,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91760,"byte_end":91763,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91764,"byte_end":91815,"line_start":171,"line_end":171,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91816,"byte_end":91877,"line_start":172,"line_end":172,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91878,"byte_end":91881,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91882,"byte_end":91974,"line_start":174,"line_end":174,"column_start":1,"column_end":93}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":91975,"byte_end":92068,"line_start":175,"line_end":175,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92069,"byte_end":92157,"line_start":176,"line_end":176,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92158,"byte_end":92167,"line_start":177,"line_end":177,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":70},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":93287,"byte_end":93312,"line_start":204,"line_end":204,"column_start":8,"column_end":33},"name":"perspective_infinite_z_dx","qualname":"::projection::lh_yup::perspective_infinite_z_dx","value":"pub fn perspective_infinite_z_dx(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92541,"byte_end":92631,"line_start":191,"line_end":191,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92632,"byte_end":92635,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92636,"byte_end":92733,"line_start":193,"line_end":193,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92734,"byte_end":92830,"line_start":194,"line_end":194,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92831,"byte_end":92874,"line_start":195,"line_end":195,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92875,"byte_end":92878,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92879,"byte_end":92930,"line_start":197,"line_end":197,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92931,"byte_end":92992,"line_start":198,"line_end":198,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92993,"byte_end":92996,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":92997,"byte_end":93089,"line_start":200,"line_end":200,"column_start":1,"column_end":93}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":93090,"byte_end":93183,"line_start":201,"line_end":201,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":93184,"byte_end":93269,"line_start":202,"line_end":202,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":93270,"byte_end":93279,"line_start":203,"line_end":203,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":71},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94648,"byte_end":94676,"line_start":233,"line_end":233,"column_start":8,"column_end":36},"name":"perspective_reversed_z_dx_gl","qualname":"::projection::lh_yup::perspective_reversed_z_dx_gl","value":"pub fn perspective_reversed_z_dx_gl(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed z-axis meant to be used with DirectX or OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed z-axis meant to be used with DirectX or OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":93652,"byte_end":93747,"line_start":217,"line_end":217,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":93748,"byte_end":93751,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":93752,"byte_end":93839,"line_start":219,"line_end":219,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":93840,"byte_end":93944,"line_start":220,"line_end":220,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":93945,"byte_end":94035,"line_start":221,"line_end":221,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94036,"byte_end":94039,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94040,"byte_end":94091,"line_start":223,"line_end":223,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94092,"byte_end":94153,"line_start":224,"line_end":224,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94154,"byte_end":94157,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94158,"byte_end":94250,"line_start":226,"line_end":226,"column_start":1,"column_end":93}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94251,"byte_end":94344,"line_start":227,"line_end":227,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94345,"byte_end":94430,"line_start":228,"line_end":228,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94431,"byte_end":94434,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ **Note that in order for this to work properly with OpenGL, you'll need to use the `gl_arb_clip_control` extension","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94435,"byte_end":94553,"line_start":230,"line_end":230,"column_start":1,"column_end":119}},{"value":"/ and set the z clip from 0.0 to 1.0 rather than the default -1.0 to 1.0**","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94554,"byte_end":94630,"line_start":231,"line_end":231,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":94631,"byte_end":94640,"line_start":232,"line_end":232,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":72},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95893,"byte_end":95918,"line_start":265,"line_end":265,"column_start":8,"column_end":33},"name":"perspective_reversed_z_vk","qualname":"::projection::lh_yup::perspective_reversed_z_vk","value":"pub fn perspective_reversed_z_vk(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed z-axis meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed z-axis meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95105,"byte_end":95189,"line_start":252,"line_end":252,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95190,"byte_end":95193,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95194,"byte_end":95281,"line_start":254,"line_end":254,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95282,"byte_end":95386,"line_start":255,"line_end":255,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95387,"byte_end":95477,"line_start":256,"line_end":256,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95478,"byte_end":95481,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95482,"byte_end":95533,"line_start":258,"line_end":258,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95534,"byte_end":95595,"line_start":259,"line_end":259,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95596,"byte_end":95599,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95600,"byte_end":95692,"line_start":261,"line_end":261,"column_start":1,"column_end":93}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95693,"byte_end":95786,"line_start":262,"line_end":262,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95787,"byte_end":95875,"line_start":263,"line_end":263,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":95876,"byte_end":95885,"line_start":264,"line_end":264,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":73},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97669,"byte_end":97706,"line_start":306,"line_end":306,"column_start":8,"column_end":45},"name":"perspective_reversed_infinite_z_dx_gl","qualname":"::projection::lh_yup::perspective_reversed_infinite_z_dx_gl","value":"pub fn perspective_reversed_infinite_z_dx_gl(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed and infinite z-axis meant to be used with OpenGL or DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed and infinite z-axis meant to be used with OpenGL or DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96341,"byte_end":96449,"line_start":284,"line_end":284,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96450,"byte_end":96453,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96454,"byte_end":96541,"line_start":286,"line_end":286,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96542,"byte_end":96646,"line_start":287,"line_end":287,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96647,"byte_end":96737,"line_start":288,"line_end":288,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96738,"byte_end":96741,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Infinte-Z is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96742,"byte_end":96844,"line_start":290,"line_end":290,"column_start":1,"column_end":103}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96845,"byte_end":96941,"line_start":291,"line_end":291,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96942,"byte_end":96985,"line_start":292,"line_end":292,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96986,"byte_end":96989,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Combining them gives the best of both worlds for large scenes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":96990,"byte_end":97056,"line_start":294,"line_end":294,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97057,"byte_end":97060,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97061,"byte_end":97112,"line_start":296,"line_end":296,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97113,"byte_end":97174,"line_start":297,"line_end":297,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97175,"byte_end":97178,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97179,"byte_end":97271,"line_start":299,"line_end":299,"column_start":1,"column_end":93}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97272,"byte_end":97365,"line_start":300,"line_end":300,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97366,"byte_end":97451,"line_start":301,"line_end":301,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97452,"byte_end":97455,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ **Note that in order for this to work properly with OpenGL, you'll need to use the `gl_arb_clip_control` extension","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97456,"byte_end":97574,"line_start":303,"line_end":303,"column_start":1,"column_end":119}},{"value":"/ and set the z clip from 0.0 to 1.0 rather than the default -1.0 to 1.0**","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97575,"byte_end":97651,"line_start":304,"line_end":304,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":97652,"byte_end":97661,"line_start":305,"line_end":305,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":74},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":99179,"byte_end":99213,"line_start":342,"line_end":342,"column_start":8,"column_end":42},"name":"perspective_reversed_infinite_z_vk","qualname":"::projection::lh_yup::perspective_reversed_infinite_z_vk","value":"pub fn perspective_reversed_infinite_z_vk(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed and infinite z-axis meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed and infinite z-axis meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98059,"byte_end":98156,"line_start":323,"line_end":323,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98157,"byte_end":98160,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98161,"byte_end":98248,"line_start":325,"line_end":325,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98249,"byte_end":98353,"line_start":326,"line_end":326,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98354,"byte_end":98444,"line_start":327,"line_end":327,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98445,"byte_end":98448,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ Infinte-Z is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98449,"byte_end":98551,"line_start":329,"line_end":329,"column_start":1,"column_end":103}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98552,"byte_end":98648,"line_start":330,"line_end":330,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98649,"byte_end":98692,"line_start":331,"line_end":331,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98693,"byte_end":98696,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ Combining them gives the best of both worlds for large scenes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98697,"byte_end":98763,"line_start":333,"line_end":333,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98764,"byte_end":98767,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98768,"byte_end":98819,"line_start":335,"line_end":335,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98820,"byte_end":98881,"line_start":336,"line_end":336,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98882,"byte_end":98885,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is left-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98886,"byte_end":98978,"line_start":338,"line_end":338,"column_start":1,"column_end":93}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":98979,"byte_end":99072,"line_start":339,"line_end":339,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":99073,"byte_end":99161,"line_start":340,"line_end":340,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/lh_yup.rs","byte_start":99162,"byte_end":99171,"line_start":341,"line_end":341,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rh_ydown","qualname":"::projection::rh_ydown","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"decl_id":null,"docs":" Projection matrices that are intended to be used when the base coordinate\n system (i.e. the one used by the application code) is right-handed, with the\n x-axis pointing right, y-axis pointing *down*, and z-axis pointing *into the\n screen*.\n","sig":null,"attributes":[{"value":"/ Projection matrices that are intended to be used when the base coordinate","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":99567,"byte_end":99644,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ system (i.e. the one used by the application code) is right-handed, with the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":99645,"byte_end":99725,"line_start":2,"line_end":2,"column_start":1,"column_end":81}},{"value":"/ x-axis pointing right, y-axis pointing *down*, and z-axis pointing *into the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":99726,"byte_end":99806,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ screen*.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":99807,"byte_end":99819,"line_start":4,"line_end":4,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100154,"byte_end":100169,"line_start":15,"line_end":15,"column_start":8,"column_end":23},"name":"orthographic_gl","qualname":"::projection::rh_ydown::orthographic_gl","value":"pub fn orthographic_gl(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with OpenGL.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":99860,"byte_end":99915,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":99916,"byte_end":99919,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":99920,"byte_end":100015,"line_start":11,"line_end":11,"column_start":1,"column_end":96}},{"value":"/ and the destination space is left-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100016,"byte_end":100060,"line_start":12,"line_end":12,"column_start":1,"column_end":45}},{"value":"/ and y-up, with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100061,"byte_end":100136,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100137,"byte_end":100146,"line_start":14,"line_end":14,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100933,"byte_end":100948,"line_start":36,"line_end":36,"column_start":8,"column_end":23},"name":"orthographic_vk","qualname":"::projection::rh_ydown::orthographic_vk","value":"pub fn orthographic_vk(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with OpenGL.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100638,"byte_end":100693,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100694,"byte_end":100697,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100698,"byte_end":100793,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ and the destination space is left-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100794,"byte_end":100838,"line_start":33,"line_end":33,"column_start":1,"column_end":45}},{"value":"/ and y-down, with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100839,"byte_end":100915,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":100916,"byte_end":100925,"line_start":35,"line_end":35,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":101684,"byte_end":101699,"line_start":56,"line_end":56,"column_start":8,"column_end":23},"name":"orthographic_dx","qualname":"::projection::rh_ydown::orthographic_dx","value":"pub fn orthographic_dx(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with OpenGL.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":101391,"byte_end":101446,"line_start":50,"line_end":50,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":101447,"byte_end":101450,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":101451,"byte_end":101546,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ and the destination space is left-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":101547,"byte_end":101591,"line_start":53,"line_end":53,"column_start":1,"column_end":45}},{"value":"/ and y-up, with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":101592,"byte_end":101666,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":101667,"byte_end":101676,"line_start":55,"line_end":55,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":102623,"byte_end":102637,"line_start":79,"line_end":79,"column_start":8,"column_end":22},"name":"perspective_gl","qualname":"::projection::rh_ydown::perspective_gl","value":"pub fn perspective_gl(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":102143,"byte_end":102206,"line_start":70,"line_end":70,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":102207,"byte_end":102210,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":102211,"byte_end":102262,"line_start":72,"line_end":72,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":102263,"byte_end":102324,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":102325,"byte_end":102328,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":102329,"byte_end":102424,"line_start":75,"line_end":75,"column_start":1,"column_end":96}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":102425,"byte_end":102518,"line_start":76,"line_end":76,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":102519,"byte_end":102605,"line_start":77,"line_end":77,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":102606,"byte_end":102615,"line_start":78,"line_end":78,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":82},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103538,"byte_end":103552,"line_start":102,"line_end":102,"column_start":8,"column_end":22},"name":"perspective_dx","qualname":"::projection::rh_ydown::perspective_dx","value":"pub fn perspective_dx(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103058,"byte_end":103122,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103123,"byte_end":103126,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103127,"byte_end":103178,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103179,"byte_end":103240,"line_start":96,"line_end":96,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103241,"byte_end":103244,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103245,"byte_end":103340,"line_start":98,"line_end":98,"column_start":1,"column_end":96}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103341,"byte_end":103434,"line_start":99,"line_end":99,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103435,"byte_end":103520,"line_start":100,"line_end":100,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103521,"byte_end":103530,"line_start":101,"line_end":101,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104438,"byte_end":104452,"line_start":125,"line_end":125,"column_start":8,"column_end":22},"name":"perspective_vk","qualname":"::projection::rh_ydown::perspective_vk","value":"pub fn perspective_vk(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":103956,"byte_end":104019,"line_start":116,"line_end":116,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104020,"byte_end":104023,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104024,"byte_end":104075,"line_start":118,"line_end":118,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104076,"byte_end":104137,"line_start":119,"line_end":119,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104138,"byte_end":104141,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104142,"byte_end":104237,"line_start":121,"line_end":121,"column_start":1,"column_end":96}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104238,"byte_end":104331,"line_start":122,"line_end":122,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104332,"byte_end":104420,"line_start":123,"line_end":123,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104421,"byte_end":104430,"line_start":124,"line_end":124,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105604,"byte_end":105629,"line_start":152,"line_end":152,"column_start":8,"column_end":33},"name":"perspective_infinite_z_gl","qualname":"::projection::rh_ydown::perspective_infinite_z_gl","value":"pub fn perspective_infinite_z_gl(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104855,"byte_end":104944,"line_start":139,"line_end":139,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104945,"byte_end":104948,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":104949,"byte_end":105046,"line_start":141,"line_end":141,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105047,"byte_end":105143,"line_start":142,"line_end":142,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105144,"byte_end":105187,"line_start":143,"line_end":143,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105188,"byte_end":105191,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105192,"byte_end":105243,"line_start":145,"line_end":145,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105244,"byte_end":105305,"line_start":146,"line_end":146,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105306,"byte_end":105309,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105310,"byte_end":105405,"line_start":148,"line_end":148,"column_start":1,"column_end":96}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105406,"byte_end":105499,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105500,"byte_end":105586,"line_start":150,"line_end":150,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105587,"byte_end":105596,"line_start":151,"line_end":151,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":85},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106728,"byte_end":106753,"line_start":178,"line_end":178,"column_start":8,"column_end":33},"name":"perspective_infinite_z_vk","qualname":"::projection::rh_ydown::perspective_infinite_z_vk","value":"pub fn perspective_infinite_z_vk(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":105977,"byte_end":106066,"line_start":165,"line_end":165,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106067,"byte_end":106070,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106071,"byte_end":106168,"line_start":167,"line_end":167,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106169,"byte_end":106265,"line_start":168,"line_end":168,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106266,"byte_end":106309,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106310,"byte_end":106313,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106314,"byte_end":106365,"line_start":171,"line_end":171,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106366,"byte_end":106427,"line_start":172,"line_end":172,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106428,"byte_end":106431,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106432,"byte_end":106527,"line_start":174,"line_end":174,"column_start":1,"column_end":96}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106528,"byte_end":106621,"line_start":175,"line_end":175,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106622,"byte_end":106710,"line_start":176,"line_end":176,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":106711,"byte_end":106720,"line_start":177,"line_end":177,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":86},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107843,"byte_end":107868,"line_start":204,"line_end":204,"column_start":8,"column_end":33},"name":"perspective_infinite_z_dx","qualname":"::projection::rh_ydown::perspective_infinite_z_dx","value":"pub fn perspective_infinite_z_dx(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107094,"byte_end":107184,"line_start":191,"line_end":191,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107185,"byte_end":107188,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107189,"byte_end":107286,"line_start":193,"line_end":193,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107287,"byte_end":107383,"line_start":194,"line_end":194,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107384,"byte_end":107427,"line_start":195,"line_end":195,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107428,"byte_end":107431,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107432,"byte_end":107483,"line_start":197,"line_end":197,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107484,"byte_end":107545,"line_start":198,"line_end":198,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107546,"byte_end":107549,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107550,"byte_end":107645,"line_start":200,"line_end":200,"column_start":1,"column_end":96}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107646,"byte_end":107739,"line_start":201,"line_end":201,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107740,"byte_end":107825,"line_start":202,"line_end":202,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":107826,"byte_end":107835,"line_start":203,"line_end":203,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":87},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":109209,"byte_end":109237,"line_start":233,"line_end":233,"column_start":8,"column_end":36},"name":"perspective_reversed_z_dx_gl","qualname":"::projection::rh_ydown::perspective_reversed_z_dx_gl","value":"pub fn perspective_reversed_z_dx_gl(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed z-axis meant to be used with DirectX or OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed z-axis meant to be used with DirectX or OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108210,"byte_end":108305,"line_start":217,"line_end":217,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108306,"byte_end":108309,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108310,"byte_end":108397,"line_start":219,"line_end":219,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108398,"byte_end":108502,"line_start":220,"line_end":220,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108503,"byte_end":108593,"line_start":221,"line_end":221,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108594,"byte_end":108597,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108598,"byte_end":108649,"line_start":223,"line_end":223,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108650,"byte_end":108711,"line_start":224,"line_end":224,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108712,"byte_end":108715,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108716,"byte_end":108811,"line_start":226,"line_end":226,"column_start":1,"column_end":96}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108812,"byte_end":108905,"line_start":227,"line_end":227,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108906,"byte_end":108991,"line_start":228,"line_end":228,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108992,"byte_end":108995,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/ **Note that in order for this to work properly with OpenGL, you'll need to use the `gl_arb_clip_control` extension","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":108996,"byte_end":109114,"line_start":230,"line_end":230,"column_start":1,"column_end":119}},{"value":"/ and set the z clip from 0.0 to 1.0 rather than the default -1.0 to 1.0**","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":109115,"byte_end":109191,"line_start":231,"line_end":231,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":109192,"byte_end":109201,"line_start":232,"line_end":232,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":88},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":110459,"byte_end":110484,"line_start":265,"line_end":265,"column_start":8,"column_end":33},"name":"perspective_reversed_z_vk","qualname":"::projection::rh_ydown::perspective_reversed_z_vk","value":"pub fn perspective_reversed_z_vk(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed z-axis meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed z-axis meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":109668,"byte_end":109752,"line_start":252,"line_end":252,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":109753,"byte_end":109756,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":109757,"byte_end":109844,"line_start":254,"line_end":254,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":109845,"byte_end":109949,"line_start":255,"line_end":255,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":109950,"byte_end":110040,"line_start":256,"line_end":256,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":110041,"byte_end":110044,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":110045,"byte_end":110096,"line_start":258,"line_end":258,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":110097,"byte_end":110158,"line_start":259,"line_end":259,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":110159,"byte_end":110162,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":110163,"byte_end":110258,"line_start":261,"line_end":261,"column_start":1,"column_end":96}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":110259,"byte_end":110352,"line_start":262,"line_end":262,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":110353,"byte_end":110441,"line_start":263,"line_end":263,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":110442,"byte_end":110451,"line_start":264,"line_end":264,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":89},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":112238,"byte_end":112275,"line_start":306,"line_end":306,"column_start":8,"column_end":45},"name":"perspective_reversed_infinite_z_dx_gl","qualname":"::projection::rh_ydown::perspective_reversed_infinite_z_dx_gl","value":"pub fn perspective_reversed_infinite_z_dx_gl(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed and infinite z-axis meant to be used with OpenGL or DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed and infinite z-axis meant to be used with OpenGL or DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":110907,"byte_end":111015,"line_start":284,"line_end":284,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111016,"byte_end":111019,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111020,"byte_end":111107,"line_start":286,"line_end":286,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111108,"byte_end":111212,"line_start":287,"line_end":287,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111213,"byte_end":111303,"line_start":288,"line_end":288,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111304,"byte_end":111307,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Infinte-Z is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111308,"byte_end":111410,"line_start":290,"line_end":290,"column_start":1,"column_end":103}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111411,"byte_end":111507,"line_start":291,"line_end":291,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111508,"byte_end":111551,"line_start":292,"line_end":292,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111552,"byte_end":111555,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ Combining them gives the best of both worlds for large scenes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111556,"byte_end":111622,"line_start":294,"line_end":294,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111623,"byte_end":111626,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111627,"byte_end":111678,"line_start":296,"line_end":296,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111679,"byte_end":111740,"line_start":297,"line_end":297,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111741,"byte_end":111744,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111745,"byte_end":111840,"line_start":299,"line_end":299,"column_start":1,"column_end":96}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111841,"byte_end":111934,"line_start":300,"line_end":300,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":111935,"byte_end":112020,"line_start":301,"line_end":301,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":112021,"byte_end":112024,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ **Note that in order for this to work properly with OpenGL, you'll need to use the `gl_arb_clip_control` extension","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":112025,"byte_end":112143,"line_start":303,"line_end":303,"column_start":1,"column_end":119}},{"value":"/ and set the z clip from 0.0 to 1.0 rather than the default -1.0 to 1.0**","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":112144,"byte_end":112220,"line_start":304,"line_end":304,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":112221,"byte_end":112230,"line_start":305,"line_end":305,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":90},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113753,"byte_end":113787,"line_start":342,"line_end":342,"column_start":8,"column_end":42},"name":"perspective_reversed_infinite_z_vk","qualname":"::projection::rh_ydown::perspective_reversed_infinite_z_vk","value":"pub fn perspective_reversed_infinite_z_vk(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed and infinite z-axis meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed and infinite z-axis meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":112630,"byte_end":112727,"line_start":323,"line_end":323,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":112728,"byte_end":112731,"line_start":324,"line_end":324,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":112732,"byte_end":112819,"line_start":325,"line_end":325,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":112820,"byte_end":112924,"line_start":326,"line_end":326,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":112925,"byte_end":113015,"line_start":327,"line_end":327,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113016,"byte_end":113019,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"/ Infinte-Z is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113020,"byte_end":113122,"line_start":329,"line_end":329,"column_start":1,"column_end":103}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113123,"byte_end":113219,"line_start":330,"line_end":330,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113220,"byte_end":113263,"line_start":331,"line_end":331,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113264,"byte_end":113267,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ Combining them gives the best of both worlds for large scenes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113268,"byte_end":113334,"line_start":333,"line_end":333,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113335,"byte_end":113338,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113339,"byte_end":113390,"line_start":335,"line_end":335,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113391,"byte_end":113452,"line_start":336,"line_end":336,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113453,"byte_end":113456,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-down","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113457,"byte_end":113552,"line_start":338,"line_end":338,"column_start":1,"column_end":96}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113553,"byte_end":113646,"line_start":339,"line_end":339,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113647,"byte_end":113735,"line_start":340,"line_end":340,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_ydown.rs","byte_start":113736,"byte_end":113745,"line_start":341,"line_end":341,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":91},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rh_yup","qualname":"::projection::rh_yup","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":" Projection matrices that are intended to be used when the base coordinate\n system (i.e. the one used by the application code) is right-handed with the\n the x-axis pointing right, y-axis pointing *up*, and z-axis pointing *out of\n the screen*. This is reexported at the root of `projections` as it is the\n de-facto standard coordinate system for doing computer graphics programming.\n","sig":null,"attributes":[{"value":"/ Projection matrices that are intended to be used when the base coordinate","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114141,"byte_end":114218,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ system (i.e. the one used by the application code) is right-handed with the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114219,"byte_end":114298,"line_start":2,"line_end":2,"column_start":1,"column_end":80}},{"value":"/ the x-axis pointing right, y-axis pointing *up*, and z-axis pointing *out of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114299,"byte_end":114379,"line_start":3,"line_end":3,"column_start":1,"column_end":81}},{"value":"/ the screen*. This is reexported at the root of `projections` as it is the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114380,"byte_end":114457,"line_start":4,"line_end":4,"column_start":1,"column_end":78}},{"value":"/ de-facto standard coordinate system for doing computer graphics programming.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114458,"byte_end":114538,"line_start":5,"line_end":5,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114920,"byte_end":114935,"line_start":16,"line_end":16,"column_start":8,"column_end":23},"name":"orthographic_gl","qualname":"::projection::rh_yup::orthographic_gl","value":"pub fn orthographic_gl(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with OpenGL.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114579,"byte_end":114634,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114635,"byte_end":114638,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114639,"byte_end":114732,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space)and the destination space is left-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114733,"byte_end":114826,"line_start":13,"line_end":13,"column_start":1,"column_end":94}},{"value":"/ and y-up, with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114827,"byte_end":114902,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":114903,"byte_end":114912,"line_start":15,"line_end":15,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":95},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":115746,"byte_end":115761,"line_start":37,"line_end":37,"column_start":8,"column_end":23},"name":"orthographic_vk","qualname":"::projection::rh_yup::orthographic_vk","value":"pub fn orthographic_vk(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with Vulkan.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":115403,"byte_end":115458,"line_start":31,"line_end":31,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":115459,"byte_end":115462,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":115463,"byte_end":115556,"line_start":33,"line_end":33,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space)and the destination space is right-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":115557,"byte_end":115651,"line_start":34,"line_end":34,"column_start":1,"column_end":95}},{"value":"/ and y-down, with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":115652,"byte_end":115728,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":115729,"byte_end":115738,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":96},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":116546,"byte_end":116561,"line_start":57,"line_end":57,"column_start":8,"column_end":23},"name":"orthographic_dx","qualname":"::projection::rh_yup::orthographic_dx","value":"pub fn orthographic_dx(f32, f32, f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Orthographic projection matrix for use with DirectX.","sig":null,"attributes":[{"value":"/ Orthographic projection matrix for use with DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":116205,"byte_end":116261,"line_start":51,"line_end":51,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":116262,"byte_end":116265,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":116266,"byte_end":116359,"line_start":53,"line_end":53,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space)and the destination space is left-handed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":116360,"byte_end":116453,"line_start":54,"line_end":54,"column_start":1,"column_end":94}},{"value":"/ and y-up, with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":116454,"byte_end":116528,"line_start":55,"line_end":55,"column_start":1,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":116529,"byte_end":116538,"line_start":56,"line_end":56,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":97},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117482,"byte_end":117496,"line_start":80,"line_end":80,"column_start":8,"column_end":22},"name":"perspective_gl","qualname":"::projection::rh_yup::perspective_gl","value":"pub fn perspective_gl(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117004,"byte_end":117067,"line_start":71,"line_end":71,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117068,"byte_end":117071,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117072,"byte_end":117123,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117124,"byte_end":117185,"line_start":74,"line_end":74,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117186,"byte_end":117189,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117190,"byte_end":117283,"line_start":76,"line_end":76,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117284,"byte_end":117377,"line_start":77,"line_end":77,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117378,"byte_end":117464,"line_start":78,"line_end":78,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117465,"byte_end":117474,"line_start":79,"line_end":79,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":98},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118394,"byte_end":118408,"line_start":103,"line_end":103,"column_start":8,"column_end":22},"name":"perspective_dx","qualname":"::projection::rh_yup::perspective_dx","value":"pub fn perspective_dx(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117916,"byte_end":117980,"line_start":94,"line_end":94,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117981,"byte_end":117984,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":117985,"byte_end":118036,"line_start":96,"line_end":96,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118037,"byte_end":118098,"line_start":97,"line_end":97,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118099,"byte_end":118102,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118103,"byte_end":118196,"line_start":99,"line_end":99,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118197,"byte_end":118290,"line_start":100,"line_end":100,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118291,"byte_end":118376,"line_start":101,"line_end":101,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118377,"byte_end":118386,"line_start":102,"line_end":102,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":119291,"byte_end":119305,"line_start":126,"line_end":126,"column_start":8,"column_end":22},"name":"perspective_vk","qualname":"::projection::rh_yup::perspective_vk","value":"pub fn perspective_vk(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118811,"byte_end":118874,"line_start":117,"line_end":117,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118875,"byte_end":118878,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118879,"byte_end":118930,"line_start":119,"line_end":119,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118931,"byte_end":118992,"line_start":120,"line_end":120,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118993,"byte_end":118996,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":118997,"byte_end":119090,"line_start":122,"line_end":122,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":119091,"byte_end":119184,"line_start":123,"line_end":123,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":119185,"byte_end":119273,"line_start":124,"line_end":124,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":119274,"byte_end":119283,"line_start":125,"line_end":125,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120456,"byte_end":120481,"line_start":153,"line_end":153,"column_start":8,"column_end":33},"name":"perspective_infinite_z_gl","qualname":"::projection::rh_yup::perspective_infinite_z_gl","value":"pub fn perspective_infinite_z_gl(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":119709,"byte_end":119798,"line_start":140,"line_end":140,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":119799,"byte_end":119802,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":119803,"byte_end":119900,"line_start":142,"line_end":142,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":119901,"byte_end":119997,"line_start":143,"line_end":143,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":119998,"byte_end":120041,"line_start":144,"line_end":144,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120042,"byte_end":120045,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120046,"byte_end":120097,"line_start":146,"line_end":146,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120098,"byte_end":120159,"line_start":147,"line_end":147,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120160,"byte_end":120163,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120164,"byte_end":120257,"line_start":149,"line_end":149,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120258,"byte_end":120351,"line_start":150,"line_end":150,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from -1.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120352,"byte_end":120438,"line_start":151,"line_end":151,"column_start":1,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120439,"byte_end":120448,"line_start":152,"line_end":152,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":101},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121577,"byte_end":121602,"line_start":179,"line_end":179,"column_start":8,"column_end":33},"name":"perspective_infinite_z_vk","qualname":"::projection::rh_yup::perspective_infinite_z_vk","value":"pub fn perspective_infinite_z_vk(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120828,"byte_end":120917,"line_start":166,"line_end":166,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120918,"byte_end":120921,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":120922,"byte_end":121019,"line_start":168,"line_end":168,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121020,"byte_end":121116,"line_start":169,"line_end":169,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121117,"byte_end":121160,"line_start":170,"line_end":170,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121161,"byte_end":121164,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121165,"byte_end":121216,"line_start":172,"line_end":172,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121217,"byte_end":121278,"line_start":173,"line_end":173,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121279,"byte_end":121282,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121283,"byte_end":121376,"line_start":175,"line_end":175,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121377,"byte_end":121470,"line_start":176,"line_end":176,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121471,"byte_end":121559,"line_start":177,"line_end":177,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121560,"byte_end":121569,"line_start":178,"line_end":178,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122691,"byte_end":122716,"line_start":205,"line_end":205,"column_start":8,"column_end":33},"name":"perspective_infinite_z_dx","qualname":"::projection::rh_yup::perspective_infinite_z_dx","value":"pub fn perspective_infinite_z_dx(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with infinite z-far plane meant to be used with DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with infinite z-far plane meant to be used with DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":121944,"byte_end":122034,"line_start":192,"line_end":192,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122035,"byte_end":122038,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ This is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122039,"byte_end":122136,"line_start":194,"line_end":194,"column_start":1,"column_end":98}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122137,"byte_end":122233,"line_start":195,"line_end":195,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122234,"byte_end":122277,"line_start":196,"line_end":196,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122278,"byte_end":122281,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122282,"byte_end":122333,"line_start":198,"line_end":198,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122334,"byte_end":122395,"line_start":199,"line_end":199,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122396,"byte_end":122399,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122400,"byte_end":122493,"line_start":201,"line_end":201,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122494,"byte_end":122587,"line_start":202,"line_end":202,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122588,"byte_end":122673,"line_start":203,"line_end":203,"column_start":1,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":122674,"byte_end":122683,"line_start":204,"line_end":204,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":103},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":124054,"byte_end":124082,"line_start":234,"line_end":234,"column_start":8,"column_end":36},"name":"perspective_reversed_z_dx_gl","qualname":"::projection::rh_yup::perspective_reversed_z_dx_gl","value":"pub fn perspective_reversed_z_dx_gl(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed z-axis meant to be used with DirectX or OpenGL.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed z-axis meant to be used with DirectX or OpenGL.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123057,"byte_end":123152,"line_start":218,"line_end":218,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123153,"byte_end":123156,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123157,"byte_end":123244,"line_start":220,"line_end":220,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123245,"byte_end":123349,"line_start":221,"line_end":221,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123350,"byte_end":123440,"line_start":222,"line_end":222,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123441,"byte_end":123444,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123445,"byte_end":123496,"line_start":224,"line_end":224,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123497,"byte_end":123558,"line_start":225,"line_end":225,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123559,"byte_end":123562,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123563,"byte_end":123656,"line_start":227,"line_end":227,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123657,"byte_end":123750,"line_start":228,"line_end":228,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123751,"byte_end":123836,"line_start":229,"line_end":229,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123837,"byte_end":123840,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ **Note that in order for this to work properly with OpenGL, you'll need to use the `gl_arb_clip_control` extension","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123841,"byte_end":123959,"line_start":231,"line_end":231,"column_start":1,"column_end":119}},{"value":"/ and set the z clip from 0.0 to 1.0 rather than the default -1.0 to 1.0**","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":123960,"byte_end":124036,"line_start":232,"line_end":232,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":124037,"byte_end":124046,"line_start":233,"line_end":233,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":104},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":125301,"byte_end":125326,"line_start":266,"line_end":266,"column_start":8,"column_end":33},"name":"perspective_reversed_z_vk","qualname":"::projection::rh_yup::perspective_reversed_z_vk","value":"pub fn perspective_reversed_z_vk(f32, f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed z-axis meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed z-axis meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":124512,"byte_end":124596,"line_start":253,"line_end":253,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":124597,"byte_end":124600,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":124601,"byte_end":124688,"line_start":255,"line_end":255,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":124689,"byte_end":124793,"line_start":256,"line_end":256,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":124794,"byte_end":124884,"line_start":257,"line_end":257,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":124885,"byte_end":124888,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":124889,"byte_end":124940,"line_start":259,"line_end":259,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":124941,"byte_end":125002,"line_start":260,"line_end":260,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":125003,"byte_end":125006,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":125007,"byte_end":125100,"line_start":262,"line_end":262,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":125101,"byte_end":125194,"line_start":263,"line_end":263,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":125195,"byte_end":125283,"line_start":264,"line_end":264,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":125284,"byte_end":125293,"line_start":265,"line_end":265,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":105},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":127079,"byte_end":127116,"line_start":307,"line_end":307,"column_start":8,"column_end":45},"name":"perspective_reversed_infinite_z_dx_gl","qualname":"::projection::rh_yup::perspective_reversed_infinite_z_dx_gl","value":"pub fn perspective_reversed_infinite_z_dx_gl(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed and infinite z-axis meant to be used with OpenGL or DirectX.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed and infinite z-axis meant to be used with OpenGL or DirectX.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":125750,"byte_end":125858,"line_start":285,"line_end":285,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":125859,"byte_end":125862,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":125863,"byte_end":125950,"line_start":287,"line_end":287,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":125951,"byte_end":126055,"line_start":288,"line_end":288,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126056,"byte_end":126146,"line_start":289,"line_end":289,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126147,"byte_end":126150,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ Infinte-Z is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126151,"byte_end":126253,"line_start":291,"line_end":291,"column_start":1,"column_end":103}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126254,"byte_end":126350,"line_start":292,"line_end":292,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126351,"byte_end":126394,"line_start":293,"line_end":293,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126395,"byte_end":126398,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ Combining them gives the best of both worlds for large scenes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126399,"byte_end":126465,"line_start":295,"line_end":295,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126466,"byte_end":126469,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126470,"byte_end":126521,"line_start":297,"line_end":297,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126522,"byte_end":126583,"line_start":298,"line_end":298,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126584,"byte_end":126587,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126588,"byte_end":126681,"line_start":300,"line_end":300,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126682,"byte_end":126775,"line_start":301,"line_end":301,"column_start":1,"column_end":94}},{"value":"/ left-handed and y-up with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126776,"byte_end":126861,"line_start":302,"line_end":302,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126862,"byte_end":126865,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ **Note that in order for this to work properly with OpenGL, you'll need to use the `gl_arb_clip_control` extension","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126866,"byte_end":126984,"line_start":304,"line_end":304,"column_start":1,"column_end":119}},{"value":"/ and set the z clip from 0.0 to 1.0 rather than the default -1.0 to 1.0**","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":126985,"byte_end":127061,"line_start":305,"line_end":305,"column_start":1,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":127062,"byte_end":127071,"line_start":306,"line_end":306,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128591,"byte_end":128625,"line_start":343,"line_end":343,"column_start":8,"column_end":42},"name":"perspective_reversed_infinite_z_vk","qualname":"::projection::rh_yup::perspective_reversed_infinite_z_vk","value":"pub fn perspective_reversed_infinite_z_vk(f32, f32, f32) -> Mat4","parent":null,"children":[],"decl_id":null,"docs":" Perspective projection matrix with reversed and infinite z-axis meant to be used with Vulkan.","sig":null,"attributes":[{"value":"/ Perspective projection matrix with reversed and infinite z-axis meant to be used with Vulkan.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":127470,"byte_end":127567,"line_start":324,"line_end":324,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":127568,"byte_end":127571,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ Reversed-Z provides significantly better precision and therefore reduced z-fighting","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":127572,"byte_end":127659,"line_start":326,"line_end":326,"column_start":1,"column_end":88}},{"value":"/ for most depth situations, especially when a floating-point depth buffer is used. You'll want to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":127660,"byte_end":127764,"line_start":327,"line_end":327,"column_start":1,"column_end":105}},{"value":"/ a reversed depth comparison function and depth clear value when using this projection.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":127765,"byte_end":127855,"line_start":328,"line_end":328,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":127856,"byte_end":127859,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ Infinte-Z is useful for extremely large scenes where having a far clip plane is extraneous anyway,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":127860,"byte_end":127962,"line_start":330,"line_end":330,"column_start":1,"column_end":103}},{"value":"/ as allowing it to approach infinity it eliminates several approximate numerical computations","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":127963,"byte_end":128059,"line_start":331,"line_end":331,"column_start":1,"column_end":97}},{"value":"/ and so can improve z-fighting behavior.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128060,"byte_end":128103,"line_start":332,"line_end":332,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128104,"byte_end":128107,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ Combining them gives the best of both worlds for large scenes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128108,"byte_end":128174,"line_start":334,"line_end":334,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128175,"byte_end":128178,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ * `vertical_fov` should be provided in radians.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128179,"byte_end":128230,"line_start":336,"line_end":336,"column_start":1,"column_end":52}},{"value":"/ * `aspect_ratio` should be the quotient `width / height`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128231,"byte_end":128292,"line_start":337,"line_end":337,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128293,"byte_end":128296,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ This matrix is meant to be used when the source coordinate space is right-handed and y-up","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128297,"byte_end":128390,"line_start":339,"line_end":339,"column_start":1,"column_end":94}},{"value":"/ (the standard computer graphics coordinate space) and the destination coordinate space is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128391,"byte_end":128484,"line_start":340,"line_end":340,"column_start":1,"column_end":94}},{"value":"/ right-handed and y-down with Z (depth) clip extending from 0.0 (close) to 1.0 (far).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128485,"byte_end":128573,"line_start":341,"line_end":341,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection/rh_yup.rs","byte_start":128574,"byte_end":128583,"line_start":342,"line_end":342,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":108},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rotor","qualname":"::rotor","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":979},{"krate":0,"index":985},{"krate":0,"index":984},{"krate":0,"index":982},{"krate":0,"index":987},{"krate":0,"index":889},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":989},{"krate":0,"index":995},{"krate":0,"index":994},{"krate":0,"index":992},{"krate":0,"index":997},{"krate":0,"index":934},{"krate":0,"index":951},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":976},{"krate":0,"index":1095},{"krate":0,"index":1101},{"krate":0,"index":1100},{"krate":0,"index":1098},{"krate":0,"index":1103},{"krate":0,"index":999},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1044},{"krate":0,"index":1105},{"krate":0,"index":1111},{"krate":0,"index":1110},{"krate":0,"index":1108},{"krate":0,"index":1113},{"krate":0,"index":1047},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1074},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1087},{"krate":0,"index":1089},{"krate":0,"index":1092}],"decl_id":null,"docs":" Rotors, i.e. constructs that describe and perform rotations.","sig":null,"attributes":[{"value":"/ Rotors, i.e. constructs that describe and perform rotations.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":128980,"byte_end":129044,"line_start":1,"line_end":1,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129045,"byte_end":129048,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ A rotor is the geometric algebra analog of the Quaternion, and they","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129049,"byte_end":129120,"line_start":3,"line_end":3,"column_start":1,"column_end":72}},{"value":"/ end up being mathematically equivalent. They are good for doing the same","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129121,"byte_end":129197,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/ sorts of things, and for the most part you can use rotors just like you","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129198,"byte_end":129273,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/ would a quaternion, if you're already familiar with using those. However,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129274,"byte_end":129351,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/ they are significantly easier to derive yourself and build intuition for,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129352,"byte_end":129429,"line_start":7,"line_end":7,"column_start":1,"column_end":78}},{"value":"/ and they generalize to both lower and higher dimensions than just 3, which","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129430,"byte_end":129508,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ is the only space for which quaternions are valuable.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129509,"byte_end":129566,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129567,"byte_end":129570,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A rotor can be thought of in multiple ways, the first of which","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129571,"byte_end":129637,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ is that a rotor is the result of the 'geometric product' of two vectors,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129638,"byte_end":129714,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ denoted for two vectors `u` and `v` as simply `uv`. This operation is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129715,"byte_end":129788,"line_start":13,"line_end":13,"column_start":1,"column_end":74}},{"value":"/ defined as","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129789,"byte_end":129803,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129804,"byte_end":129807,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `uv = u · v + u ∧ v`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129808,"byte_end":129835,"line_start":16,"line_end":16,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129836,"byte_end":129839,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ As can be seen, this operation results in the addition of two different","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129840,"byte_end":129915,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ types of values: first, the dot product will result in a scalar, and second,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129916,"byte_end":129996,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ the exterior (wedge) product will result in a bivector. The addition of these two different","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":129997,"byte_end":130092,"line_start":20,"line_end":20,"column_start":1,"column_end":96}},{"value":"/ types is not defined, but can be understood in a similar way as complex numbers,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130093,"byte_end":130177,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/ i.e. as a 'bundle' of two different kinds of values.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130178,"byte_end":130234,"line_start":22,"line_end":22,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130235,"byte_end":130238,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The reason we call this type of value a 'rotor' is that if you both left- and","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130239,"byte_end":130320,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"/ right-multiply (using the geometric product) a rotor with a vector, you will","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130321,"byte_end":130401,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ rotate the sandwiched vector. For example, if you start with two vectors,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130402,"byte_end":130479,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ `a` and `b`, and create a rotor `ab` from them, then rotate a vector `u` with this","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130480,"byte_end":130566,"line_start":27,"line_end":27,"column_start":1,"column_end":87}},{"value":"/ rotor by doing `ba u ab`, you will end up rotating the vector `u` by in the plane","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130567,"byte_end":130652,"line_start":28,"line_end":28,"column_start":1,"column_end":86}},{"value":"/ that corresponds to `a ∧ b` (i.e. the plane which is parallel with both vectors), by","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130653,"byte_end":130743,"line_start":29,"line_end":29,"column_start":1,"column_end":89}},{"value":"/ twice the angle between `a` and `b`, in the opposite direction of the one that would","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130744,"byte_end":130832,"line_start":30,"line_end":30,"column_start":1,"column_end":89}},{"value":"/ bring `a` towards `b` within that plane.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130833,"byte_end":130877,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130878,"byte_end":130881,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In `ultraviolet`, the `Mul` trait is implemented for Rotors such that doing","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130882,"byte_end":130961,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130962,"byte_end":130965,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ `rotor * vec`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130966,"byte_end":130983,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130984,"byte_end":130987,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ will rotate the Vector `vec` by the Rotor `rotor`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":130988,"byte_end":131042,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131043,"byte_end":131046,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ To compose rotations, simply left-multiply the rotor by another one in the same","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131047,"byte_end":131130,"line_start":39,"line_end":39,"column_start":1,"column_end":84}},{"value":"/ way that matrix composition works. For example,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131131,"byte_end":131182,"line_start":40,"line_end":40,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131183,"byte_end":131186,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ `rotor_ab = rotor_b * rotor_a`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131187,"byte_end":131221,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131222,"byte_end":131225,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Will result in the composition of `rotor_b` and `rotor_a` such that `rotor_ab` encodes","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131226,"byte_end":131316,"line_start":44,"line_end":44,"column_start":1,"column_end":91}},{"value":"/ a rotation as though `rotor_a` was applied *and then* `rotor_b` was applied.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131317,"byte_end":131397,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131398,"byte_end":131401,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ Note that *composition* of rotors is *more efficient*","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131402,"byte_end":131459,"line_start":47,"line_end":47,"column_start":1,"column_end":58}},{"value":"/ than composition of matrices, however, the operation of rotating a vector by a rotor, i.e. the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131460,"byte_end":131558,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ `rotor * vec` product,  is *more expensive* to","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131559,"byte_end":131609,"line_start":49,"line_end":49,"column_start":1,"column_end":51}},{"value":"/ compute than the `matrix * vec` product. So, rotors are excellent for *building* and *interpolating*","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131610,"byte_end":131714,"line_start":50,"line_end":50,"column_start":1,"column_end":105}},{"value":"/ rotations, but it may be preferable to convert them into matrices before applying them to","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131715,"byte_end":131808,"line_start":51,"line_end":51,"column_start":1,"column_end":94}},{"value":"/ vectors/points, if the same rotation will be applied to many vectors.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":131809,"byte_end":131882,"line_start":52,"line_end":52,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":979},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":140152,"byte_end":140158,"line_start":319,"line_end":319,"column_start":10,"column_end":16},"name":"Rotor2","qualname":"::rotor::Rotor2","value":"Rotor2 { s, bv }","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981}],"decl_id":null,"docs":" A Rotor in 2d space.","sig":null,"attributes":[{"value":"/ A Rotor in 2d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":132070,"byte_end":132094,"line_start":64,"line_end":64,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":132103,"byte_end":132106,"line_start":65,"line_end":65,"column_start":9,"column_end":12}},{"value":"/ Please see the module level documentation for more information on rotors!","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":132115,"byte_end":132192,"line_start":66,"line_end":66,"column_start":9,"column_end":86}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":132239,"byte_end":132249,"line_start":68,"line_end":68,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":989},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":140189,"byte_end":140196,"line_start":319,"line_end":319,"column_start":47,"column_end":54},"name":"WRotor2","qualname":"::rotor::WRotor2","value":"WRotor2 { s, bv }","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":991}],"decl_id":null,"docs":" A Rotor in 2d space.","sig":null,"attributes":[{"value":"/ A Rotor in 2d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":132070,"byte_end":132094,"line_start":64,"line_end":64,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":132103,"byte_end":132106,"line_start":65,"line_end":65,"column_start":9,"column_end":12}},{"value":"/ Please see the module level documentation for more information on rotors!","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":132115,"byte_end":132192,"line_start":66,"line_end":66,"column_start":9,"column_end":86}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":132239,"byte_end":132249,"line_start":68,"line_end":68,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":152542,"byte_end":152548,"line_start":677,"line_end":677,"column_start":10,"column_end":16},"name":"Rotor3","qualname":"::rotor::Rotor3","value":"Rotor3 { s, bv }","parent":null,"children":[{"krate":0,"index":1096},{"krate":0,"index":1097}],"decl_id":null,"docs":" A Rotor in 3d space.","sig":null,"attributes":[{"value":"/ A Rotor in 3d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":140347,"byte_end":140371,"line_start":324,"line_end":324,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":140380,"byte_end":140383,"line_start":325,"line_end":325,"column_start":9,"column_end":12}},{"value":"/ Please see the module level documentation for more information on rotors!","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":140392,"byte_end":140469,"line_start":326,"line_end":326,"column_start":9,"column_end":86}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":140516,"byte_end":140526,"line_start":328,"line_end":328,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":152579,"byte_end":152586,"line_start":677,"line_end":677,"column_start":47,"column_end":54},"name":"WRotor3","qualname":"::rotor::WRotor3","value":"WRotor3 { s, bv }","parent":null,"children":[{"krate":0,"index":1106},{"krate":0,"index":1107}],"decl_id":null,"docs":" A Rotor in 3d space.","sig":null,"attributes":[{"value":"/ A Rotor in 3d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":140347,"byte_end":140371,"line_start":324,"line_end":324,"column_start":9,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":140380,"byte_end":140383,"line_start":325,"line_end":325,"column_start":9,"column_end":12}},{"value":"/ Please see the module level documentation for more information on rotors!","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":140392,"byte_end":140469,"line_start":326,"line_end":326,"column_start":9,"column_end":86}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/rotor.rs","byte_start":140516,"byte_end":140526,"line_start":328,"line_end":328,"column_start":9,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":115},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transform","qualname":"::transform","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":1215},{"krate":0,"index":1221},{"krate":0,"index":1220},{"krate":0,"index":1218},{"krate":0,"index":1223},{"krate":0,"index":1115},{"krate":0,"index":1128},{"krate":0,"index":1131},{"krate":0,"index":1134},{"krate":0,"index":1137},{"krate":0,"index":1225},{"krate":0,"index":1231},{"krate":0,"index":1230},{"krate":0,"index":1228},{"krate":0,"index":1233},{"krate":0,"index":1140},{"krate":0,"index":1153},{"krate":0,"index":1156},{"krate":0,"index":1159},{"krate":0,"index":1162},{"krate":0,"index":1235},{"krate":0,"index":1241},{"krate":0,"index":1240},{"krate":0,"index":1238},{"krate":0,"index":1243},{"krate":0,"index":1165},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1245},{"krate":0,"index":1251},{"krate":0,"index":1250},{"krate":0,"index":1248},{"krate":0,"index":1253},{"krate":0,"index":1190},{"krate":0,"index":1203},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1212},{"krate":0,"index":1363},{"krate":0,"index":1370},{"krate":0,"index":1369},{"krate":0,"index":1367},{"krate":0,"index":1372},{"krate":0,"index":1255},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1279},{"krate":0,"index":1374},{"krate":0,"index":1381},{"krate":0,"index":1380},{"krate":0,"index":1378},{"krate":0,"index":1383},{"krate":0,"index":1282},{"krate":0,"index":1297},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1385},{"krate":0,"index":1392},{"krate":0,"index":1391},{"krate":0,"index":1389},{"krate":0,"index":1394},{"krate":0,"index":1309},{"krate":0,"index":1324},{"krate":0,"index":1327},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1396},{"krate":0,"index":1403},{"krate":0,"index":1402},{"krate":0,"index":1400},{"krate":0,"index":1405},{"krate":0,"index":1336},{"krate":0,"index":1351},{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1360}],"decl_id":null,"docs":" Dedicated transformation types as the combination of primitives.\n \n Note that you may want to us these types over the corresponding type of\n homogeneous transformation matrix because they are faster in most operations,\n especially composition and inverse.\n","sig":null,"attributes":[{"value":"/ Dedicated transformation types as the combination of primitives.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154360,"byte_end":154428,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154429,"byte_end":154433,"line_start":2,"line_end":2,"column_start":1,"column_end":5}},{"value":"/ Note that you may want to us these types over the corresponding type of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154434,"byte_end":154509,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ homogeneous transformation matrix because they are faster in most operations,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154510,"byte_end":154591,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"/ especially composition and inverse.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154592,"byte_end":154631,"line_start":5,"line_end":5,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":159963,"byte_end":159972,"line_start":163,"line_end":163,"column_start":5,"column_end":14},"name":"Isometry2","qualname":"::transform::Isometry2","value":"Isometry2 { translation, rotation }","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"decl_id":null,"docs":" An Isometry, aka a \"rigid body transformation\".","sig":null,"attributes":[{"value":"/ An Isometry, aka a \"rigid body transformation\".","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154785,"byte_end":154836,"line_start":13,"line_end":13,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154845,"byte_end":154848,"line_start":14,"line_end":14,"column_start":9,"column_end":12}},{"value":"/ Defined as the combination of a rotation *and then* a translation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154857,"byte_end":154927,"line_start":15,"line_end":15,"column_start":9,"column_end":79}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154936,"byte_end":154940,"line_start":16,"line_end":16,"column_start":9,"column_end":13}},{"value":"/ You may want to us this type over the corresponding type of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154949,"byte_end":155012,"line_start":17,"line_end":17,"column_start":9,"column_end":72}},{"value":"/ homogeneous transformation matrix because it will be faster in most operations,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155021,"byte_end":155104,"line_start":18,"line_end":18,"column_start":9,"column_end":92}},{"value":"/ especially composition and inverse.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155113,"byte_end":155152,"line_start":19,"line_end":19,"column_start":9,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155199,"byte_end":155209,"line_start":21,"line_end":21,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160003,"byte_end":160013,"line_start":163,"line_end":163,"column_start":45,"column_end":55},"name":"WIsometry2","qualname":"::transform::WIsometry2","value":"WIsometry2 { translation, rotation }","parent":null,"children":[{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" An Isometry, aka a \"rigid body transformation\".","sig":null,"attributes":[{"value":"/ An Isometry, aka a \"rigid body transformation\".","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154785,"byte_end":154836,"line_start":13,"line_end":13,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154845,"byte_end":154848,"line_start":14,"line_end":14,"column_start":9,"column_end":12}},{"value":"/ Defined as the combination of a rotation *and then* a translation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154857,"byte_end":154927,"line_start":15,"line_end":15,"column_start":9,"column_end":79}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154936,"byte_end":154940,"line_start":16,"line_end":16,"column_start":9,"column_end":13}},{"value":"/ You may want to us this type over the corresponding type of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154949,"byte_end":155012,"line_start":17,"line_end":17,"column_start":9,"column_end":72}},{"value":"/ homogeneous transformation matrix because it will be faster in most operations,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155021,"byte_end":155104,"line_start":18,"line_end":18,"column_start":9,"column_end":92}},{"value":"/ especially composition and inverse.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155113,"byte_end":155152,"line_start":19,"line_end":19,"column_start":9,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155199,"byte_end":155209,"line_start":21,"line_end":21,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160051,"byte_end":160060,"line_start":164,"line_end":164,"column_start":5,"column_end":14},"name":"Isometry3","qualname":"::transform::Isometry3","value":"Isometry3 { translation, rotation }","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237}],"decl_id":null,"docs":" An Isometry, aka a \"rigid body transformation\".","sig":null,"attributes":[{"value":"/ An Isometry, aka a \"rigid body transformation\".","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154785,"byte_end":154836,"line_start":13,"line_end":13,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154845,"byte_end":154848,"line_start":14,"line_end":14,"column_start":9,"column_end":12}},{"value":"/ Defined as the combination of a rotation *and then* a translation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154857,"byte_end":154927,"line_start":15,"line_end":15,"column_start":9,"column_end":79}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154936,"byte_end":154940,"line_start":16,"line_end":16,"column_start":9,"column_end":13}},{"value":"/ You may want to us this type over the corresponding type of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154949,"byte_end":155012,"line_start":17,"line_end":17,"column_start":9,"column_end":72}},{"value":"/ homogeneous transformation matrix because it will be faster in most operations,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155021,"byte_end":155104,"line_start":18,"line_end":18,"column_start":9,"column_end":92}},{"value":"/ especially composition and inverse.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155113,"byte_end":155152,"line_start":19,"line_end":19,"column_start":9,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155199,"byte_end":155209,"line_start":21,"line_end":21,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160091,"byte_end":160101,"line_start":164,"line_end":164,"column_start":45,"column_end":55},"name":"WIsometry3","qualname":"::transform::WIsometry3","value":"WIsometry3 { translation, rotation }","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":" An Isometry, aka a \"rigid body transformation\".","sig":null,"attributes":[{"value":"/ An Isometry, aka a \"rigid body transformation\".","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154785,"byte_end":154836,"line_start":13,"line_end":13,"column_start":9,"column_end":60}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154845,"byte_end":154848,"line_start":14,"line_end":14,"column_start":9,"column_end":12}},{"value":"/ Defined as the combination of a rotation *and then* a translation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154857,"byte_end":154927,"line_start":15,"line_end":15,"column_start":9,"column_end":79}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154936,"byte_end":154940,"line_start":16,"line_end":16,"column_start":9,"column_end":13}},{"value":"/ You may want to us this type over the corresponding type of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":154949,"byte_end":155012,"line_start":17,"line_end":17,"column_start":9,"column_end":72}},{"value":"/ homogeneous transformation matrix because it will be faster in most operations,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155021,"byte_end":155104,"line_start":18,"line_end":18,"column_start":9,"column_end":92}},{"value":"/ especially composition and inverse.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155113,"byte_end":155152,"line_start":19,"line_end":19,"column_start":9,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":155199,"byte_end":155209,"line_start":21,"line_end":21,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":166754,"byte_end":166765,"line_start":346,"line_end":346,"column_start":5,"column_end":16},"name":"Similarity2","qualname":"::transform::Similarity2","value":"Similarity2 { translation, rotation, scale }","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366}],"decl_id":null,"docs":" A Similarity, i.e. an Isometry but with an added uniform scaling.","sig":null,"attributes":[{"value":"/ A Similarity, i.e. an Isometry but with an added uniform scaling.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160258,"byte_end":160327,"line_start":170,"line_end":170,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160336,"byte_end":160339,"line_start":171,"line_end":171,"column_start":9,"column_end":12}},{"value":"/ Defined as a uniform scaling followed by a rotation followed by a translation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160348,"byte_end":160430,"line_start":172,"line_end":172,"column_start":9,"column_end":91}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160439,"byte_end":160443,"line_start":173,"line_end":173,"column_start":9,"column_end":13}},{"value":"/ You may want to us this type over the corresponding type of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160452,"byte_end":160515,"line_start":174,"line_end":174,"column_start":9,"column_end":72}},{"value":"/ homogeneous transformation matrix because it will be faster in most operations,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160524,"byte_end":160607,"line_start":175,"line_end":175,"column_start":9,"column_end":92}},{"value":"/ especially composition and inverse.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160616,"byte_end":160655,"line_start":176,"line_end":176,"column_start":9,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160702,"byte_end":160712,"line_start":178,"line_end":178,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":166796,"byte_end":166808,"line_start":346,"line_end":346,"column_start":47,"column_end":59},"name":"WSimilarity2","qualname":"::transform::WSimilarity2","value":"WSimilarity2 { translation, rotation, scale }","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377}],"decl_id":null,"docs":" A Similarity, i.e. an Isometry but with an added uniform scaling.","sig":null,"attributes":[{"value":"/ A Similarity, i.e. an Isometry but with an added uniform scaling.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160258,"byte_end":160327,"line_start":170,"line_end":170,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160336,"byte_end":160339,"line_start":171,"line_end":171,"column_start":9,"column_end":12}},{"value":"/ Defined as a uniform scaling followed by a rotation followed by a translation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160348,"byte_end":160430,"line_start":172,"line_end":172,"column_start":9,"column_end":91}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160439,"byte_end":160443,"line_start":173,"line_end":173,"column_start":9,"column_end":13}},{"value":"/ You may want to us this type over the corresponding type of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160452,"byte_end":160515,"line_start":174,"line_end":174,"column_start":9,"column_end":72}},{"value":"/ homogeneous transformation matrix because it will be faster in most operations,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160524,"byte_end":160607,"line_start":175,"line_end":175,"column_start":9,"column_end":92}},{"value":"/ especially composition and inverse.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160616,"byte_end":160655,"line_start":176,"line_end":176,"column_start":9,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160702,"byte_end":160712,"line_start":178,"line_end":178,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":166846,"byte_end":166857,"line_start":347,"line_end":347,"column_start":5,"column_end":16},"name":"Similarity3","qualname":"::transform::Similarity3","value":"Similarity3 { translation, rotation, scale }","parent":null,"children":[{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388}],"decl_id":null,"docs":" A Similarity, i.e. an Isometry but with an added uniform scaling.","sig":null,"attributes":[{"value":"/ A Similarity, i.e. an Isometry but with an added uniform scaling.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160258,"byte_end":160327,"line_start":170,"line_end":170,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160336,"byte_end":160339,"line_start":171,"line_end":171,"column_start":9,"column_end":12}},{"value":"/ Defined as a uniform scaling followed by a rotation followed by a translation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160348,"byte_end":160430,"line_start":172,"line_end":172,"column_start":9,"column_end":91}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160439,"byte_end":160443,"line_start":173,"line_end":173,"column_start":9,"column_end":13}},{"value":"/ You may want to us this type over the corresponding type of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160452,"byte_end":160515,"line_start":174,"line_end":174,"column_start":9,"column_end":72}},{"value":"/ homogeneous transformation matrix because it will be faster in most operations,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160524,"byte_end":160607,"line_start":175,"line_end":175,"column_start":9,"column_end":92}},{"value":"/ especially composition and inverse.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160616,"byte_end":160655,"line_start":176,"line_end":176,"column_start":9,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160702,"byte_end":160712,"line_start":178,"line_end":178,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":166888,"byte_end":166900,"line_start":347,"line_end":347,"column_start":47,"column_end":59},"name":"WSimilarity3","qualname":"::transform::WSimilarity3","value":"WSimilarity3 { translation, rotation, scale }","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399}],"decl_id":null,"docs":" A Similarity, i.e. an Isometry but with an added uniform scaling.","sig":null,"attributes":[{"value":"/ A Similarity, i.e. an Isometry but with an added uniform scaling.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160258,"byte_end":160327,"line_start":170,"line_end":170,"column_start":9,"column_end":78}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160336,"byte_end":160339,"line_start":171,"line_end":171,"column_start":9,"column_end":12}},{"value":"/ Defined as a uniform scaling followed by a rotation followed by a translation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160348,"byte_end":160430,"line_start":172,"line_end":172,"column_start":9,"column_end":91}},{"value":"/ ","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160439,"byte_end":160443,"line_start":173,"line_end":173,"column_start":9,"column_end":13}},{"value":"/ You may want to us this type over the corresponding type of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160452,"byte_end":160515,"line_start":174,"line_end":174,"column_start":9,"column_end":72}},{"value":"/ homogeneous transformation matrix because it will be faster in most operations,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160524,"byte_end":160607,"line_start":175,"line_end":175,"column_start":9,"column_end":92}},{"value":"/ especially composition and inverse.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160616,"byte_end":160655,"line_start":176,"line_end":176,"column_start":9,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/transform.rs","byte_start":160702,"byte_end":160712,"line_start":178,"line_end":178,"column_start":9,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":120},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":1627},{"krate":0,"index":1635},{"krate":0,"index":1634},{"krate":0,"index":1632},{"krate":0,"index":1630},{"krate":0,"index":1407},{"krate":0,"index":1452},{"krate":0,"index":1456},{"krate":0,"index":1460},{"krate":0,"index":1464},{"krate":0,"index":1468},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1495},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1505},{"krate":0,"index":1507},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1637},{"krate":0,"index":1645},{"krate":0,"index":1644},{"krate":0,"index":1642},{"krate":0,"index":1640},{"krate":0,"index":1517},{"krate":0,"index":1562},{"krate":0,"index":1566},{"krate":0,"index":1570},{"krate":0,"index":1574},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":1591},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":1602},{"krate":0,"index":1605},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1612},{"krate":0,"index":1615},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1625},{"krate":0,"index":127},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":1873},{"krate":0,"index":1882},{"krate":0,"index":1881},{"krate":0,"index":1879},{"krate":0,"index":1877},{"krate":0,"index":1647},{"krate":0,"index":1695},{"krate":0,"index":1697},{"krate":0,"index":1701},{"krate":0,"index":1705},{"krate":0,"index":1709},{"krate":0,"index":1713},{"krate":0,"index":1715},{"krate":0,"index":1717},{"krate":0,"index":1719},{"krate":0,"index":1722},{"krate":0,"index":1724},{"krate":0,"index":1727},{"krate":0,"index":1729},{"krate":0,"index":1732},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1740},{"krate":0,"index":1742},{"krate":0,"index":1745},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1752},{"krate":0,"index":1755},{"krate":0,"index":1758},{"krate":0,"index":1884},{"krate":0,"index":1893},{"krate":0,"index":1892},{"krate":0,"index":1890},{"krate":0,"index":1888},{"krate":0,"index":1760},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1814},{"krate":0,"index":1818},{"krate":0,"index":1822},{"krate":0,"index":1826},{"krate":0,"index":1828},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1863},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":2109},{"krate":0,"index":2119},{"krate":0,"index":2118},{"krate":0,"index":2116},{"krate":0,"index":2114},{"krate":0,"index":1895},{"krate":0,"index":1937},{"krate":0,"index":1939},{"krate":0,"index":1943},{"krate":0,"index":1947},{"krate":0,"index":1951},{"krate":0,"index":1955},{"krate":0,"index":1957},{"krate":0,"index":1959},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1966},{"krate":0,"index":1969},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":1980},{"krate":0,"index":1982},{"krate":0,"index":1984},{"krate":0,"index":1987},{"krate":0,"index":1990},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2121},{"krate":0,"index":2131},{"krate":0,"index":2130},{"krate":0,"index":2128},{"krate":0,"index":2126},{"krate":0,"index":2002},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2050},{"krate":0,"index":2054},{"krate":0,"index":2058},{"krate":0,"index":2062},{"krate":0,"index":2064},{"krate":0,"index":2066},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2078},{"krate":0,"index":2081},{"krate":0,"index":2084},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2094},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2104},{"krate":0,"index":2107},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":182},{"krate":0,"index":186}],"decl_id":null,"docs":" Vectors and points, i.e. directed line segments and locations.\n","sig":null,"attributes":[{"value":"/ Vectors and points, i.e. directed line segments and locations.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":166937,"byte_end":167003,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182216,"byte_end":182220,"line_start":498,"line_end":498,"column_start":9,"column_end":13},"name":"Vec2","qualname":"::vec::Vec2","value":"Vec2 { x, y }","parent":null,"children":[{"krate":0,"index":1628},{"krate":0,"index":1629}],"decl_id":null,"docs":" A set of two coordinates which may be interpreted as a vector or point in 2d space.","sig":null,"attributes":[{"value":"/ A set of two coordinates which may be interpreted as a vector or point in 2d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167227,"byte_end":167314,"line_start":12,"line_end":12,"column_start":9,"column_end":96}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167323,"byte_end":167326,"line_start":13,"line_end":13,"column_start":9,"column_end":12}},{"value":"/ Generally this distinction between a point and vector is more of a pain than it is worth","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167335,"byte_end":167427,"line_start":14,"line_end":14,"column_start":9,"column_end":101}},{"value":"/ to distinguish on a type level, however when converting to and from homogeneous","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167436,"byte_end":167519,"line_start":15,"line_end":15,"column_start":9,"column_end":92}},{"value":"/ coordinates it is quite important.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167528,"byte_end":167566,"line_start":16,"line_end":16,"column_start":9,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167622,"byte_end":167632,"line_start":18,"line_end":18,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182259,"byte_end":182263,"line_start":498,"line_end":498,"column_start":52,"column_end":56},"name":"Wec2","qualname":"::vec::Wec2","value":"Wec2 { x, y }","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639}],"decl_id":null,"docs":" A set of two coordinates which may be interpreted as a vector or point in 2d space.","sig":null,"attributes":[{"value":"/ A set of two coordinates which may be interpreted as a vector or point in 2d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167227,"byte_end":167314,"line_start":12,"line_end":12,"column_start":9,"column_end":96}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167323,"byte_end":167326,"line_start":13,"line_end":13,"column_start":9,"column_end":12}},{"value":"/ Generally this distinction between a point and vector is more of a pain than it is worth","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167335,"byte_end":167427,"line_start":14,"line_end":14,"column_start":9,"column_end":101}},{"value":"/ to distinguish on a type level, however when converting to and from homogeneous","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167436,"byte_end":167519,"line_start":15,"line_end":15,"column_start":9,"column_end":92}},{"value":"/ coordinates it is quite important.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167528,"byte_end":167566,"line_start":16,"line_end":16,"column_start":9,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":167622,"byte_end":167632,"line_start":18,"line_end":18,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182849,"byte_end":182856,"line_start":526,"line_end":526,"column_start":12,"column_end":19},"name":"refract","qualname":"<Vec2>::refract","value":"pub fn refract(&mut Self, Self, f32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182828,"byte_end":182837,"line_start":525,"line_end":525,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182971,"byte_end":182980,"line_start":531,"line_end":531,"column_start":12,"column_end":21},"name":"refracted","qualname":"<Vec2>::refracted","value":"pub fn refracted(&Self, Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182950,"byte_end":182959,"line_start":530,"line_end":530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183318,"byte_end":183327,"line_start":546,"line_end":546,"column_start":12,"column_end":21},"name":"new_splat","qualname":"<Wec2>::new_splat","value":"pub fn new_splat(f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183297,"byte_end":183306,"line_start":545,"line_end":545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183473,"byte_end":183478,"line_start":554,"line_end":554,"column_start":12,"column_end":17},"name":"splat","qualname":"<Wec2>::splat","value":"pub fn splat(Vec2) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183452,"byte_end":183461,"line_start":553,"line_end":553,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183894,"byte_end":183899,"line_start":564,"line_end":564,"column_start":12,"column_end":17},"name":"merge","qualname":"<Wec2>::merge","value":"pub fn merge(f32x4, Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Merge two vectors together lanewise using `mask` as a mask.","sig":null,"attributes":[{"value":"/ Merge two vectors together lanewise using `mask` as a mask.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183552,"byte_end":183615,"line_start":558,"line_end":558,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183620,"byte_end":183623,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ This is essentially a bitwise merge operation, such that any point where","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183628,"byte_end":183704,"line_start":560,"line_end":560,"column_start":5,"column_end":81}},{"value":"/ there is a 1 bit in `mask`, the output will put the bit from `tru`, while","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183709,"byte_end":183786,"line_start":561,"line_end":561,"column_start":5,"column_end":82}},{"value":"/ where there is a 0 bit in `mask`, the output will put the bit from `fals`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183791,"byte_end":183868,"line_start":562,"line_end":562,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183873,"byte_end":183882,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":184087,"byte_end":184094,"line_start":572,"line_end":572,"column_start":12,"column_end":19},"name":"refract","qualname":"<Wec2>::refract","value":"pub fn refract(&mut Self, Self, f32x4)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":184066,"byte_end":184075,"line_start":571,"line_end":571,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":184211,"byte_end":184220,"line_start":577,"line_end":577,"column_start":12,"column_end":21},"name":"refracted","qualname":"<Wec2>::refracted","value":"pub fn refracted(&Self, Self, f32x4) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":184190,"byte_end":184199,"line_start":576,"line_end":576,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":201491,"byte_end":201495,"line_start":1122,"line_end":1122,"column_start":15,"column_end":19},"name":"Vec3","qualname":"::vec::Vec3","value":"Vec3 { x, y, z }","parent":null,"children":[{"krate":0,"index":1874},{"krate":0,"index":1875},{"krate":0,"index":1876}],"decl_id":null,"docs":" A set of three coordinates which may be interpreted as a point or vector in 3d space,\n or as a homogeneous 2d vector or point.","sig":null,"attributes":[{"value":"/ A set of three coordinates which may be interpreted as a point or vector in 3d space,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":184702,"byte_end":184791,"line_start":594,"line_end":594,"column_start":9,"column_end":98}},{"value":"/ or as a homogeneous 2d vector or point.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":184800,"byte_end":184843,"line_start":595,"line_end":595,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":184852,"byte_end":184855,"line_start":596,"line_end":596,"column_start":9,"column_end":12}},{"value":"/ Generally this distinction between a point and vector is more of a pain than it is worth","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":184864,"byte_end":184956,"line_start":597,"line_end":597,"column_start":9,"column_end":101}},{"value":"/ to distinguish on a type level, however when converting to and from homogeneous","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":184965,"byte_end":185048,"line_start":598,"line_end":598,"column_start":9,"column_end":92}},{"value":"/ coordinates it is quite important.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":185057,"byte_end":185095,"line_start":599,"line_end":599,"column_start":9,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":185153,"byte_end":185163,"line_start":601,"line_end":601,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":201534,"byte_end":201538,"line_start":1122,"line_end":1122,"column_start":58,"column_end":62},"name":"Wec3","qualname":"::vec::Wec3","value":"Wec3 { x, y, z }","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":185153,"byte_end":185163,"line_start":601,"line_end":601,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202318,"byte_end":202325,"line_start":1170,"line_end":1170,"column_start":12,"column_end":19},"name":"refract","qualname":"<Vec3>::refract","value":"pub fn refract(&mut Self, Self, f32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202297,"byte_end":202306,"line_start":1169,"line_end":1169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202440,"byte_end":202449,"line_start":1175,"line_end":1175,"column_start":12,"column_end":21},"name":"refracted","qualname":"<Vec3>::refracted","value":"pub fn refracted(&Self, Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202419,"byte_end":202428,"line_start":1174,"line_end":1174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202787,"byte_end":202796,"line_start":1190,"line_end":1190,"column_start":12,"column_end":21},"name":"new_splat","qualname":"<Wec3>::new_splat","value":"pub fn new_splat(f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202766,"byte_end":202775,"line_start":1189,"line_end":1189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202981,"byte_end":202986,"line_start":1199,"line_end":1199,"column_start":12,"column_end":17},"name":"splat","qualname":"<Wec3>::splat","value":"pub fn splat(Vec3) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202960,"byte_end":202969,"line_start":1198,"line_end":1198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203402,"byte_end":203407,"line_start":1209,"line_end":1209,"column_start":12,"column_end":17},"name":"merge","qualname":"<Wec3>::merge","value":"pub fn merge(f32x4, Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Merge two vectors together lanewise using `mask` as a mask.","sig":null,"attributes":[{"value":"/ Merge two vectors together lanewise using `mask` as a mask.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203060,"byte_end":203123,"line_start":1203,"line_end":1203,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203128,"byte_end":203131,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ This is essentially a bitwise merge operation, such that any point where","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203136,"byte_end":203212,"line_start":1205,"line_end":1205,"column_start":5,"column_end":81}},{"value":"/ there is a 1 bit in `mask`, the output will put the bit from `tru`, while","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203217,"byte_end":203294,"line_start":1206,"line_end":1206,"column_start":5,"column_end":82}},{"value":"/ where there is a 0 bit in `mask`, the output will put the bit from `fals`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203299,"byte_end":203376,"line_start":1207,"line_end":1207,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203381,"byte_end":203390,"line_start":1208,"line_end":1208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203637,"byte_end":203644,"line_start":1218,"line_end":1218,"column_start":12,"column_end":19},"name":"refract","qualname":"<Wec3>::refract","value":"pub fn refract(&mut Self, Self, f32x4)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203616,"byte_end":203625,"line_start":1217,"line_end":1217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203761,"byte_end":203770,"line_start":1223,"line_end":1223,"column_start":12,"column_end":21},"name":"refracted","qualname":"<Wec3>::refracted","value":"pub fn refracted(&Self, Self, f32x4) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":203740,"byte_end":203749,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219376,"byte_end":219380,"line_start":1735,"line_end":1735,"column_start":8,"column_end":12},"name":"Vec4","qualname":"::vec::Vec4","value":"Vec4 { x, y, z, w }","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113}],"decl_id":null,"docs":" A set of four coordinates which may be interpreted as a point or vector in 4d space,\n or as a homogeneous 3d vector or point.","sig":null,"attributes":[{"value":"/ A set of four coordinates which may be interpreted as a point or vector in 4d space,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":204979,"byte_end":205067,"line_start":1266,"line_end":1266,"column_start":9,"column_end":97}},{"value":"/ or as a homogeneous 3d vector or point.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":205076,"byte_end":205119,"line_start":1267,"line_end":1267,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":205128,"byte_end":205131,"line_start":1268,"line_end":1268,"column_start":9,"column_end":12}},{"value":"/ Generally this distinction between a point and vector is more of a pain than it is worth","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":205140,"byte_end":205232,"line_start":1269,"line_end":1269,"column_start":9,"column_end":101}},{"value":"/ to distinguish on a type level, however when converting to and from homogeneous","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":205241,"byte_end":205324,"line_start":1270,"line_end":1270,"column_start":9,"column_end":92}},{"value":"/ coordinates it is quite important.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":205333,"byte_end":205371,"line_start":1271,"line_end":1271,"column_start":9,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":205429,"byte_end":205439,"line_start":1273,"line_end":1273,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2121},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219401,"byte_end":219405,"line_start":1735,"line_end":1735,"column_start":33,"column_end":37},"name":"Wec4","qualname":"::vec::Wec4","value":"Wec4 { x, y, z, w }","parent":null,"children":[{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":205429,"byte_end":205439,"line_start":1273,"line_end":1273,"column_start":9,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219868,"byte_end":219875,"line_start":1763,"line_end":1763,"column_start":12,"column_end":19},"name":"refract","qualname":"<Vec4>::refract","value":"pub fn refract(&mut Self, Self, f32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219847,"byte_end":219856,"line_start":1762,"line_end":1762,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219990,"byte_end":219999,"line_start":1768,"line_end":1768,"column_start":12,"column_end":21},"name":"refracted","qualname":"<Vec4>::refracted","value":"pub fn refracted(&Self, Self, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219969,"byte_end":219978,"line_start":1767,"line_end":1767,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220337,"byte_end":220346,"line_start":1783,"line_end":1783,"column_start":12,"column_end":21},"name":"new_splat","qualname":"<Wec4>::new_splat","value":"pub fn new_splat(f32, f32, f32, f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220316,"byte_end":220325,"line_start":1782,"line_end":1782,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220570,"byte_end":220575,"line_start":1793,"line_end":1793,"column_start":12,"column_end":17},"name":"splat","qualname":"<Wec4>::splat","value":"pub fn splat(Vec4) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220549,"byte_end":220558,"line_start":1792,"line_end":1792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220991,"byte_end":220996,"line_start":1803,"line_end":1803,"column_start":12,"column_end":17},"name":"merge","qualname":"<Wec4>::merge","value":"pub fn merge(f32x4, Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Merge two vectors together lanewise using `mask` as a mask.","sig":null,"attributes":[{"value":"/ Merge two vectors together lanewise using `mask` as a mask.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220649,"byte_end":220712,"line_start":1797,"line_end":1797,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220717,"byte_end":220720,"line_start":1798,"line_end":1798,"column_start":5,"column_end":8}},{"value":"/ This is essentially a bitwise merge operation, such that any point where","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220725,"byte_end":220801,"line_start":1799,"line_end":1799,"column_start":5,"column_end":81}},{"value":"/ there is a 1 bit in `mask`, the output will put the bit from `tru`, while","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220806,"byte_end":220883,"line_start":1800,"line_end":1800,"column_start":5,"column_end":82}},{"value":"/ where there is a 0 bit in `mask`, the output will put the bit from `fals`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220888,"byte_end":220965,"line_start":1801,"line_end":1801,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220970,"byte_end":220979,"line_start":1802,"line_end":1802,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":190},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"int","qualname":"::int","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":2232},{"krate":0,"index":2250},{"krate":0,"index":2249},{"krate":0,"index":2247},{"krate":0,"index":2245},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2235},{"krate":0,"index":2133},{"krate":0,"index":2172},{"krate":0,"index":2176},{"krate":0,"index":2180},{"krate":0,"index":2184},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2197},{"krate":0,"index":2199},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2207},{"krate":0,"index":2210},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2220},{"krate":0,"index":2223},{"krate":0,"index":2225},{"krate":0,"index":2227},{"krate":0,"index":2230},{"krate":0,"index":2351},{"krate":0,"index":2369},{"krate":0,"index":2368},{"krate":0,"index":2366},{"krate":0,"index":2364},{"krate":0,"index":2360},{"krate":0,"index":2361},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2354},{"krate":0,"index":2252},{"krate":0,"index":2291},{"krate":0,"index":2295},{"krate":0,"index":2299},{"krate":0,"index":2303},{"krate":0,"index":2307},{"krate":0,"index":2309},{"krate":0,"index":2311},{"krate":0,"index":2313},{"krate":0,"index":2316},{"krate":0,"index":2318},{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2326},{"krate":0,"index":2329},{"krate":0,"index":2332},{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2339},{"krate":0,"index":2342},{"krate":0,"index":2344},{"krate":0,"index":2346},{"krate":0,"index":2349},{"krate":0,"index":2473},{"krate":0,"index":2492},{"krate":0,"index":2491},{"krate":0,"index":2489},{"krate":0,"index":2487},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2477},{"krate":0,"index":2371},{"krate":0,"index":2413},{"krate":0,"index":2417},{"krate":0,"index":2421},{"krate":0,"index":2425},{"krate":0,"index":2429},{"krate":0,"index":2431},{"krate":0,"index":2433},{"krate":0,"index":2435},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2443},{"krate":0,"index":2445},{"krate":0,"index":2448},{"krate":0,"index":2451},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2458},{"krate":0,"index":2461},{"krate":0,"index":2464},{"krate":0,"index":2466},{"krate":0,"index":2468},{"krate":0,"index":2471},{"krate":0,"index":2596},{"krate":0,"index":2615},{"krate":0,"index":2614},{"krate":0,"index":2612},{"krate":0,"index":2610},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2603},{"krate":0,"index":2604},{"krate":0,"index":2600},{"krate":0,"index":2494},{"krate":0,"index":2536},{"krate":0,"index":2540},{"krate":0,"index":2544},{"krate":0,"index":2548},{"krate":0,"index":2552},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2563},{"krate":0,"index":2566},{"krate":0,"index":2568},{"krate":0,"index":2571},{"krate":0,"index":2574},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2581},{"krate":0,"index":2584},{"krate":0,"index":2587},{"krate":0,"index":2589},{"krate":0,"index":2591},{"krate":0,"index":2594},{"krate":0,"index":2716},{"krate":0,"index":2736},{"krate":0,"index":2735},{"krate":0,"index":2733},{"krate":0,"index":2731},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2721},{"krate":0,"index":2617},{"krate":0,"index":2656},{"krate":0,"index":2660},{"krate":0,"index":2664},{"krate":0,"index":2668},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2676},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2686},{"krate":0,"index":2688},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2699},{"krate":0,"index":2701},{"krate":0,"index":2704},{"krate":0,"index":2707},{"krate":0,"index":2709},{"krate":0,"index":2711},{"krate":0,"index":2714},{"krate":0,"index":2837},{"krate":0,"index":2857},{"krate":0,"index":2856},{"krate":0,"index":2854},{"krate":0,"index":2852},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2842},{"krate":0,"index":2738},{"krate":0,"index":2777},{"krate":0,"index":2781},{"krate":0,"index":2785},{"krate":0,"index":2789},{"krate":0,"index":2793},{"krate":0,"index":2795},{"krate":0,"index":2797},{"krate":0,"index":2799},{"krate":0,"index":2802},{"krate":0,"index":2804},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2812},{"krate":0,"index":2815},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822},{"krate":0,"index":2825},{"krate":0,"index":2828},{"krate":0,"index":2830},{"krate":0,"index":2832},{"krate":0,"index":2835},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":224}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":195},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222174,"byte_end":222180,"line_start":4,"line_end":4,"column_start":11,"column_end":17},"name":"MulAdd","qualname":"::int::MulAdd","value":"MulAdd<A = Self, B = Self>","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":198},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222278,"byte_end":222284,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Output","qualname":"::int::MulAdd::Output","value":"type Output;","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" The resulting type after applying the fused multiply-add.\n","sig":null,"attributes":[{"value":"/ The resulting type after applying the fused multiply-add.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222207,"byte_end":222268,"line_start":5,"line_end":5,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222345,"byte_end":222352,"line_start":9,"line_end":9,"column_start":8,"column_end":15},"name":"mul_add","qualname":"::int::MulAdd::mul_add","value":"pub fn mul_add(Self, A, B) -> Self::Output","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Performs the fused multiply-add operation.\n","sig":null,"attributes":[{"value":"/ Performs the fused multiply-add operation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222291,"byte_end":222337,"line_start":8,"line_end":8,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235251,"byte_end":235256,"line_start":451,"line_end":451,"column_start":9,"column_end":14},"name":"Vec2u","qualname":"::int::Vec2u","value":"Vec2u { x, y }","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2234}],"decl_id":null,"docs":" A set of two coordinates which may be interpreted as a vector or point in 2d space.","sig":null,"attributes":[{"value":"/ A set of two coordinates which may be interpreted as a vector or point in 2d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222780,"byte_end":222867,"line_start":31,"line_end":31,"column_start":9,"column_end":96}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222876,"byte_end":222879,"line_start":32,"line_end":32,"column_start":9,"column_end":12}},{"value":"/ Generally this distinction between a point and vector is more of a pain than it is worth","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222888,"byte_end":222980,"line_start":33,"line_end":33,"column_start":9,"column_end":101}},{"value":"/ to distinguish on a type level, however when converting to and from homogeneous","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222989,"byte_end":223072,"line_start":34,"line_end":34,"column_start":9,"column_end":92}},{"value":"/ coordinates it is quite important.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":223081,"byte_end":223119,"line_start":35,"line_end":35,"column_start":9,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":223196,"byte_end":223206,"line_start":37,"line_end":37,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235289,"byte_end":235294,"line_start":452,"line_end":452,"column_start":9,"column_end":14},"name":"Vec2i","qualname":"::int::Vec2i","value":"Vec2i { x, y }","parent":null,"children":[{"krate":0,"index":2352},{"krate":0,"index":2353}],"decl_id":null,"docs":" A set of two coordinates which may be interpreted as a vector or point in 2d space.","sig":null,"attributes":[{"value":"/ A set of two coordinates which may be interpreted as a vector or point in 2d space.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222780,"byte_end":222867,"line_start":31,"line_end":31,"column_start":9,"column_end":96}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222876,"byte_end":222879,"line_start":32,"line_end":32,"column_start":9,"column_end":12}},{"value":"/ Generally this distinction between a point and vector is more of a pain than it is worth","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222888,"byte_end":222980,"line_start":33,"line_end":33,"column_start":9,"column_end":101}},{"value":"/ to distinguish on a type level, however when converting to and from homogeneous","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":222989,"byte_end":223072,"line_start":34,"line_end":34,"column_start":9,"column_end":92}},{"value":"/ coordinates it is quite important.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":223081,"byte_end":223119,"line_start":35,"line_end":35,"column_start":9,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":223196,"byte_end":223206,"line_start":37,"line_end":37,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249460,"byte_end":249465,"line_start":914,"line_end":914,"column_start":16,"column_end":21},"name":"Vec3u","qualname":"::int::Vec3u","value":"Vec3u { x, y, z }","parent":null,"children":[{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2476}],"decl_id":null,"docs":" A set of three coordinates which may be interpreted as a point or vector in 3d space,\n or as a homogeneous 2d vector or point.","sig":null,"attributes":[{"value":"/ A set of three coordinates which may be interpreted as a point or vector in 3d space,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235412,"byte_end":235501,"line_start":456,"line_end":456,"column_start":9,"column_end":98}},{"value":"/ or as a homogeneous 2d vector or point.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235510,"byte_end":235553,"line_start":457,"line_end":457,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235562,"byte_end":235565,"line_start":458,"line_end":458,"column_start":9,"column_end":12}},{"value":"/ Generally this distinction between a point and vector is more of a pain than it is worth","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235574,"byte_end":235666,"line_start":459,"line_end":459,"column_start":9,"column_end":101}},{"value":"/ to distinguish on a type level, however when converting to and from homogeneous","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235675,"byte_end":235758,"line_start":460,"line_end":460,"column_start":9,"column_end":92}},{"value":"/ coordinates it is quite important.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235767,"byte_end":235805,"line_start":461,"line_end":461,"column_start":9,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235884,"byte_end":235894,"line_start":463,"line_end":463,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249498,"byte_end":249503,"line_start":915,"line_end":915,"column_start":16,"column_end":21},"name":"Vec3i","qualname":"::int::Vec3i","value":"Vec3i { x, y, z }","parent":null,"children":[{"krate":0,"index":2597},{"krate":0,"index":2598},{"krate":0,"index":2599}],"decl_id":null,"docs":" A set of three coordinates which may be interpreted as a point or vector in 3d space,\n or as a homogeneous 2d vector or point.","sig":null,"attributes":[{"value":"/ A set of three coordinates which may be interpreted as a point or vector in 3d space,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235412,"byte_end":235501,"line_start":456,"line_end":456,"column_start":9,"column_end":98}},{"value":"/ or as a homogeneous 2d vector or point.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235510,"byte_end":235553,"line_start":457,"line_end":457,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235562,"byte_end":235565,"line_start":458,"line_end":458,"column_start":9,"column_end":12}},{"value":"/ Generally this distinction between a point and vector is more of a pain than it is worth","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235574,"byte_end":235666,"line_start":459,"line_end":459,"column_start":9,"column_end":101}},{"value":"/ to distinguish on a type level, however when converting to and from homogeneous","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235675,"byte_end":235758,"line_start":460,"line_end":460,"column_start":9,"column_end":92}},{"value":"/ coordinates it is quite important.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235767,"byte_end":235805,"line_start":461,"line_end":461,"column_start":9,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":235884,"byte_end":235894,"line_start":463,"line_end":463,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2716},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":262853,"byte_end":262858,"line_start":1352,"line_end":1352,"column_start":8,"column_end":13},"name":"Vec4u","qualname":"::int::Vec4u","value":"Vec4u { x, y, z, w }","parent":null,"children":[{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720}],"decl_id":null,"docs":" A set of four coordinates which may be interpreted as a point or vector in 4d space,\n or as a homogeneous 3d vector or point.","sig":null,"attributes":[{"value":"/ A set of four coordinates which may be interpreted as a point or vector in 4d space,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249612,"byte_end":249700,"line_start":919,"line_end":919,"column_start":9,"column_end":97}},{"value":"/ or as a homogeneous 3d vector or point.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249709,"byte_end":249752,"line_start":920,"line_end":920,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249761,"byte_end":249764,"line_start":921,"line_end":921,"column_start":9,"column_end":12}},{"value":"/ Generally this distinction between a point and vector is more of a pain than it is worth","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249773,"byte_end":249865,"line_start":922,"line_end":922,"column_start":9,"column_end":101}},{"value":"/ to distinguish on a type level, however when converting to and from homogeneous","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249874,"byte_end":249957,"line_start":923,"line_end":923,"column_start":9,"column_end":92}},{"value":"/ coordinates it is quite important.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249966,"byte_end":250004,"line_start":924,"line_end":924,"column_start":9,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":250083,"byte_end":250093,"line_start":926,"line_end":926,"column_start":9,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":2837},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":262889,"byte_end":262894,"line_start":1353,"line_end":1353,"column_start":8,"column_end":13},"name":"Vec4i","qualname":"::int::Vec4i","value":"Vec4i { x, y, z, w }","parent":null,"children":[{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841}],"decl_id":null,"docs":" A set of four coordinates which may be interpreted as a point or vector in 4d space,\n or as a homogeneous 3d vector or point.","sig":null,"attributes":[{"value":"/ A set of four coordinates which may be interpreted as a point or vector in 4d space,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249612,"byte_end":249700,"line_start":919,"line_end":919,"column_start":9,"column_end":97}},{"value":"/ or as a homogeneous 3d vector or point.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249709,"byte_end":249752,"line_start":920,"line_end":920,"column_start":9,"column_end":52}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249761,"byte_end":249764,"line_start":921,"line_end":921,"column_start":9,"column_end":12}},{"value":"/ Generally this distinction between a point and vector is more of a pain than it is worth","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249773,"byte_end":249865,"line_start":922,"line_end":922,"column_start":9,"column_end":101}},{"value":"/ to distinguish on a type level, however when converting to and from homogeneous","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249874,"byte_end":249957,"line_start":923,"line_end":923,"column_start":9,"column_end":92}},{"value":"/ coordinates it is quite important.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":249966,"byte_end":250004,"line_start":924,"line_end":924,"column_start":9,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":250083,"byte_end":250093,"line_start":926,"line_end":926,"column_start":9,"column_end":19}}]},{"kind":"Mod","id":{"krate":0,"index":227},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geometry","qualname":"::geometry","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":2859},{"krate":0,"index":2865},{"krate":0,"index":2864},{"krate":0,"index":2862},{"krate":0,"index":2867},{"krate":0,"index":2873},{"krate":0,"index":2872},{"krate":0,"index":2870},{"krate":0,"index":2875},{"krate":0,"index":2891},{"krate":0,"index":2890},{"krate":0,"index":2888},{"krate":0,"index":2885},{"krate":0,"index":2886},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2878},{"krate":0,"index":2893},{"krate":0,"index":2909},{"krate":0,"index":2908},{"krate":0,"index":2906},{"krate":0,"index":2903},{"krate":0,"index":2904},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2896},{"krate":0,"index":2911},{"krate":0,"index":2927},{"krate":0,"index":2926},{"krate":0,"index":2924},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2917},{"krate":0,"index":2918},{"krate":0,"index":2914},{"krate":0,"index":2929},{"krate":0,"index":2945},{"krate":0,"index":2944},{"krate":0,"index":2942},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2932},{"krate":0,"index":2947},{"krate":0,"index":2950},{"krate":0,"index":2965},{"krate":0,"index":2968},{"krate":0,"index":2983},{"krate":0,"index":2986},{"krate":0,"index":3001},{"krate":0,"index":3009},{"krate":0,"index":3007},{"krate":0,"index":3006},{"krate":0,"index":3004},{"krate":0,"index":3011},{"krate":0,"index":3029},{"krate":0,"index":3027},{"krate":0,"index":3026},{"krate":0,"index":3024},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3014},{"krate":0,"index":3031},{"krate":0,"index":3049},{"krate":0,"index":3047},{"krate":0,"index":3046},{"krate":0,"index":3044},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3037},{"krate":0,"index":3038},{"krate":0,"index":3034},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":3051},{"krate":0,"index":3058},{"krate":0,"index":3062},{"krate":0,"index":3064},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3076},{"krate":0,"index":3080},{"krate":0,"index":3082},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3094},{"krate":0,"index":3098},{"krate":0,"index":3100},{"krate":0,"index":3104}],"decl_id":null,"docs":"\n Geometry helper functionality.\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264465,"byte_end":264468,"line_start":1,"line_end":1,"column_start":1,"column_end":4}},{"value":"/ Geometry helper functionality.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264469,"byte_end":264503,"line_start":2,"line_end":2,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":2859},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264637,"byte_end":264642,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Plane","qualname":"::geometry::Plane","value":"Plane { normal, bias }","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":2861}],"decl_id":null,"docs":" A plane which can be intersected by a ray.\n","sig":null,"attributes":[{"value":"/ A plane which can be intersected by a ray.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264538,"byte_end":264584,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264615,"byte_end":264625,"line_start":7,"line_end":7,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2860},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264693,"byte_end":264699,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"normal","qualname":"::geometry::Plane::normal","value":"vec::Vec3","parent":{"krate":0,"index":2859},"children":[],"decl_id":null,"docs":" plane described as x,y,z normal\n","sig":null,"attributes":[{"value":"/ plane described as x,y,z normal","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264649,"byte_end":264684,"line_start":9,"line_end":9,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264793,"byte_end":264797,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"bias","qualname":"::geometry::Plane::bias","value":"f32","parent":{"krate":0,"index":2859},"children":[],"decl_id":null,"docs":" dot product of the point and normal, representing the plane position\n","sig":null,"attributes":[{"value":"/ dot product of the point and normal, representing the plane position","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264712,"byte_end":264784,"line_start":12,"line_end":12,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2867},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264971,"byte_end":264974,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"Ray","qualname":"::geometry::Ray","value":"Ray { origin, direction }","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2869}],"decl_id":null,"docs":" A Ray represents an infinite half-line starting at `origin` and going in specified unit length `direction`.\n","sig":null,"attributes":[{"value":"/ A Ray represents an infinite half-line starting at `origin` and going in specified unit length `direction`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264807,"byte_end":264918,"line_start":16,"line_end":16,"column_start":1,"column_end":112}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264949,"byte_end":264959,"line_start":18,"line_end":18,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2868},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265017,"byte_end":265023,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"name":"origin","qualname":"::geometry::Ray::origin","value":"vec::Vec3","parent":{"krate":0,"index":2867},"children":[],"decl_id":null,"docs":" origin point of the ray\n","sig":null,"attributes":[{"value":"/ origin point of the ray","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":264981,"byte_end":265008,"line_start":20,"line_end":20,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2869},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265087,"byte_end":265096,"line_start":24,"line_end":24,"column_start":9,"column_end":18},"name":"direction","qualname":"::geometry::Ray::direction","value":"vec::Vec3","parent":{"krate":0,"index":2867},"children":[],"decl_id":null,"docs":" normalized direction vector of the ray\n","sig":null,"attributes":[{"value":"/ normalized direction vector of the ray","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265036,"byte_end":265078,"line_start":23,"line_end":23,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2875},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265227,"byte_end":265233,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"Planeu","qualname":"::geometry::Planeu","value":"Planeu { normal, bias }","parent":null,"children":[{"krate":0,"index":2876},{"krate":0,"index":2877}],"decl_id":null,"docs":" A plane which can be intersected by a ray.\n","sig":null,"attributes":[{"value":"/ A plane which can be intersected by a ray.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265107,"byte_end":265153,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265205,"byte_end":265215,"line_start":29,"line_end":29,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2876},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265284,"byte_end":265290,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"normal","qualname":"::geometry::Planeu::normal","value":"int::Vec3u","parent":{"krate":0,"index":2875},"children":[],"decl_id":null,"docs":" plane described as x,y,z normal\n","sig":null,"attributes":[{"value":"/ plane described as x,y,z normal","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265240,"byte_end":265275,"line_start":31,"line_end":31,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2877},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265385,"byte_end":265389,"line_start":35,"line_end":35,"column_start":9,"column_end":13},"name":"bias","qualname":"::geometry::Planeu::bias","value":"u32","parent":{"krate":0,"index":2875},"children":[],"decl_id":null,"docs":" dot product of the point and normal, representing the plane position\n","sig":null,"attributes":[{"value":"/ dot product of the point and normal, representing the plane position","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265304,"byte_end":265376,"line_start":34,"line_end":34,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2893},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265584,"byte_end":265588,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"Rayu","qualname":"::geometry::Rayu","value":"Rayu { origin, direction }","parent":null,"children":[{"krate":0,"index":2894},{"krate":0,"index":2895}],"decl_id":null,"docs":" A Ray represents an infinite half-line starting at `origin` and going in specified unit length `direction`.\n","sig":null,"attributes":[{"value":"/ A Ray represents an infinite half-line starting at `origin` and going in specified unit length `direction`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265399,"byte_end":265510,"line_start":38,"line_end":38,"column_start":1,"column_end":112}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265562,"byte_end":265572,"line_start":40,"line_end":40,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2894},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265631,"byte_end":265637,"line_start":43,"line_end":43,"column_start":9,"column_end":15},"name":"origin","qualname":"::geometry::Rayu::origin","value":"int::Vec3u","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" origin point of the ray\n","sig":null,"attributes":[{"value":"/ origin point of the ray","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265595,"byte_end":265622,"line_start":42,"line_end":42,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265702,"byte_end":265711,"line_start":46,"line_end":46,"column_start":9,"column_end":18},"name":"direction","qualname":"::geometry::Rayu::direction","value":"int::Vec3u","parent":{"krate":0,"index":2893},"children":[],"decl_id":null,"docs":" normalized direction vector of the ray\n","sig":null,"attributes":[{"value":"/ normalized direction vector of the ray","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265651,"byte_end":265693,"line_start":45,"line_end":45,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2911},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265843,"byte_end":265849,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"Planei","qualname":"::geometry::Planei","value":"Planei { normal, bias }","parent":null,"children":[{"krate":0,"index":2912},{"krate":0,"index":2913}],"decl_id":null,"docs":" A plane which can be intersected by a ray.\n","sig":null,"attributes":[{"value":"/ A plane which can be intersected by a ray.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265723,"byte_end":265769,"line_start":49,"line_end":49,"column_start":1,"column_end":47}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265821,"byte_end":265831,"line_start":51,"line_end":51,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2912},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265900,"byte_end":265906,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"normal","qualname":"::geometry::Planei::normal","value":"int::Vec3i","parent":{"krate":0,"index":2911},"children":[],"decl_id":null,"docs":" plane described as x,y,z normal\n","sig":null,"attributes":[{"value":"/ plane described as x,y,z normal","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265856,"byte_end":265891,"line_start":53,"line_end":53,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":266001,"byte_end":266005,"line_start":57,"line_end":57,"column_start":9,"column_end":13},"name":"bias","qualname":"::geometry::Planei::bias","value":"i32","parent":{"krate":0,"index":2911},"children":[],"decl_id":null,"docs":" dot product of the point and normal, representing the plane position\n","sig":null,"attributes":[{"value":"/ dot product of the point and normal, representing the plane position","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":265920,"byte_end":265992,"line_start":56,"line_end":56,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2929},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":266200,"byte_end":266204,"line_start":63,"line_end":63,"column_start":12,"column_end":16},"name":"Rayi","qualname":"::geometry::Rayi","value":"Rayi { origin, direction }","parent":null,"children":[{"krate":0,"index":2930},{"krate":0,"index":2931}],"decl_id":null,"docs":" A Ray represents an infinite half-line starting at `origin` and going in specified unit length `direction`.\n","sig":null,"attributes":[{"value":"/ A Ray represents an infinite half-line starting at `origin` and going in specified unit length `direction`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":266015,"byte_end":266126,"line_start":60,"line_end":60,"column_start":1,"column_end":112}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":266178,"byte_end":266188,"line_start":62,"line_end":62,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2930},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":266247,"byte_end":266253,"line_start":65,"line_end":65,"column_start":9,"column_end":15},"name":"origin","qualname":"::geometry::Rayi::origin","value":"int::Vec3i","parent":{"krate":0,"index":2929},"children":[],"decl_id":null,"docs":" origin point of the ray\n","sig":null,"attributes":[{"value":"/ origin point of the ray","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":266211,"byte_end":266238,"line_start":64,"line_end":64,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":266318,"byte_end":266327,"line_start":68,"line_end":68,"column_start":9,"column_end":18},"name":"direction","qualname":"::geometry::Rayi::direction","value":"int::Vec3i","parent":{"krate":0,"index":2929},"children":[],"decl_id":null,"docs":" normalized direction vector of the ray\n","sig":null,"attributes":[{"value":"/ normalized direction vector of the ray","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":266267,"byte_end":266309,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":3001},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":271969,"byte_end":271973,"line_start":203,"line_end":203,"column_start":12,"column_end":16},"name":"Aabb","qualname":"::geometry::Aabb","value":"Aabb { min, max }","parent":null,"children":[{"krate":0,"index":3002},{"krate":0,"index":3003}],"decl_id":null,"docs":" An axis-aligned bounding box\n","sig":null,"attributes":[{"value":"/ An axis-aligned bounding box","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":271875,"byte_end":271907,"line_start":200,"line_end":200,"column_start":1,"column_end":33}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":271947,"byte_end":271957,"line_start":202,"line_end":202,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3002},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":271984,"byte_end":271987,"line_start":204,"line_end":204,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Aabb::min","value":"vec::Vec3","parent":{"krate":0,"index":3001},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272003,"byte_end":272006,"line_start":205,"line_end":205,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Aabb::max","value":"vec::Vec3","parent":{"krate":0,"index":3001},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272132,"byte_end":272137,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"name":"Aabbu","qualname":"::geometry::Aabbu","value":"Aabbu { min, max }","parent":null,"children":[{"krate":0,"index":3012},{"krate":0,"index":3013}],"decl_id":null,"docs":" An axis-aligned bounding box\n","sig":null,"attributes":[{"value":"/ An axis-aligned bounding box","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272017,"byte_end":272049,"line_start":208,"line_end":208,"column_start":1,"column_end":33}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272110,"byte_end":272120,"line_start":210,"line_end":210,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3012},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272148,"byte_end":272151,"line_start":212,"line_end":212,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Aabbu::min","value":"int::Vec3u","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3013},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272168,"byte_end":272171,"line_start":213,"line_end":213,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Aabbu::max","value":"int::Vec3u","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272298,"byte_end":272303,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"Aabbi","qualname":"::geometry::Aabbi","value":"Aabbi { min, max }","parent":null,"children":[{"krate":0,"index":3032},{"krate":0,"index":3033}],"decl_id":null,"docs":" An axis-aligned bounding box\n","sig":null,"attributes":[{"value":"/ An axis-aligned bounding box","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272183,"byte_end":272215,"line_start":216,"line_end":216,"column_start":1,"column_end":33}},{"value":"repr(C)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272276,"byte_end":272286,"line_start":218,"line_end":218,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272314,"byte_end":272317,"line_start":220,"line_end":220,"column_start":9,"column_end":12},"name":"min","qualname":"::geometry::Aabbi::min","value":"int::Vec3i","parent":{"krate":0,"index":3031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":272334,"byte_end":272337,"line_start":221,"line_end":221,"column_start":9,"column_end":12},"name":"max","qualname":"::geometry::Aabbi::max","value":"int::Vec3i","parent":{"krate":0,"index":3031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276029,"byte_end":276033,"line_start":336,"line_end":336,"column_start":12,"column_end":16},"name":"iter","qualname":"<Aabb>::iter","value":"pub fn iter(&Self) -> AabbLinearIterator","parent":null,"children":[],"decl_id":null,"docs":" Same as iter_stride, but calls it with a stride of 1.0\n","sig":null,"attributes":[{"value":"/ Same as iter_stride, but calls it with a stride of 1.0","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":275929,"byte_end":275987,"line_start":333,"line_end":333,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":275992,"byte_end":276001,"line_start":334,"line_end":334,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276006,"byte_end":276017,"line_start":335,"line_end":335,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276221,"byte_end":276225,"line_start":345,"line_end":345,"column_start":12,"column_end":16},"name":"iter","qualname":"<Aabbu>::iter","value":"pub fn iter(&Self) -> AabbuLinearIterator","parent":null,"children":[],"decl_id":null,"docs":" Same as iter_stride, but calls it with a stride of 1.0\n","sig":null,"attributes":[{"value":"/ Same as iter_stride, but calls it with a stride of 1.0","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276121,"byte_end":276179,"line_start":342,"line_end":342,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276184,"byte_end":276193,"line_start":343,"line_end":343,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276198,"byte_end":276209,"line_start":344,"line_end":344,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276412,"byte_end":276416,"line_start":354,"line_end":354,"column_start":12,"column_end":16},"name":"iter","qualname":"<Aabbi>::iter","value":"pub fn iter(&Self) -> AabbiLinearIterator","parent":null,"children":[],"decl_id":null,"docs":" Same as iter_stride, but calls it with a stride of 1.0\n","sig":null,"attributes":[{"value":"/ Same as iter_stride, but calls it with a stride of 1.0","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276312,"byte_end":276370,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276375,"byte_end":276384,"line_start":352,"line_end":352,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276389,"byte_end":276400,"line_start":353,"line_end":353,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276503,"byte_end":276521,"line_start":359,"line_end":359,"column_start":18,"column_end":36},"name":"AabbLinearIterator","qualname":"::geometry::AabbLinearIterator","value":"AabbLinearIterator {  }","parent":null,"children":[{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3061}],"decl_id":null,"docs":" Linear iterator across a 3D coordinate space with the provided stride.\n This iterator is inclusive of minimum coordinates, and exclusive of maximum.\n","sig":null,"attributes":[{"value":"/ Linear iterator across a 3D coordinate space with the provided stride.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":274093,"byte_end":274167,"line_start":275,"line_end":275,"column_start":9,"column_end":83}},{"value":"/ This iterator is inclusive of minimum coordinates, and exclusive of maximum.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":274176,"byte_end":274256,"line_start":276,"line_end":276,"column_start":9,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276543,"byte_end":276562,"line_start":359,"line_end":359,"column_start":58,"column_end":77},"name":"AabbuLinearIterator","qualname":"::geometry::AabbuLinearIterator","value":"AabbuLinearIterator {  }","parent":null,"children":[{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079}],"decl_id":null,"docs":" Linear iterator across a 3D coordinate space with the provided stride.\n This iterator is inclusive of minimum coordinates, and exclusive of maximum.\n","sig":null,"attributes":[{"value":"/ Linear iterator across a 3D coordinate space with the provided stride.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":274093,"byte_end":274167,"line_start":275,"line_end":275,"column_start":9,"column_end":83}},{"value":"/ This iterator is inclusive of minimum coordinates, and exclusive of maximum.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":274176,"byte_end":274256,"line_start":276,"line_end":276,"column_start":9,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":3094},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276585,"byte_end":276604,"line_start":359,"line_end":359,"column_start":100,"column_end":119},"name":"AabbiLinearIterator","qualname":"::geometry::AabbiLinearIterator","value":"AabbiLinearIterator {  }","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097}],"decl_id":null,"docs":" Linear iterator across a 3D coordinate space with the provided stride.\n This iterator is inclusive of minimum coordinates, and exclusive of maximum.\n","sig":null,"attributes":[{"value":"/ Linear iterator across a 3D coordinate space with the provided stride.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":274093,"byte_end":274167,"line_start":275,"line_end":275,"column_start":9,"column_end":83}},{"value":"/ This iterator is inclusive of minimum coordinates, and exclusive of maximum.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":274176,"byte_end":274256,"line_start":276,"line_end":276,"column_start":9,"column_end":89}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/util.rs","byte_start":5980,"byte_end":5985,"line_start":7,"line_end":7,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":9}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":69200,"byte_end":69204,"line_start":1098,"line_end":1098,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":69586,"byte_end":69590,"line_start":1113,"line_end":1113,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182332,"byte_end":182336,"line_start":500,"line_end":500,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182594,"byte_end":182598,"line_start":510,"line_end":510,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182713,"byte_end":182717,"line_start":517,"line_end":517,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182817,"byte_end":182821,"line_start":524,"line_end":524,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183286,"byte_end":183290,"line_start":544,"line_end":544,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":201596,"byte_end":201600,"line_start":1124,"line_end":1124,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":201768,"byte_end":201772,"line_start":1135,"line_end":1135,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":201953,"byte_end":201957,"line_start":1146,"line_end":1146,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202127,"byte_end":202131,"line_start":1157,"line_end":1157,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202286,"byte_end":202290,"line_start":1168,"line_end":1168,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202755,"byte_end":202759,"line_start":1188,"line_end":1188,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":204187,"byte_end":204191,"line_start":1238,"line_end":1238,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":204573,"byte_end":204577,"line_start":1253,"line_end":1253,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219450,"byte_end":219454,"line_start":1737,"line_end":1737,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219644,"byte_end":219648,"line_start":1749,"line_end":1749,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219836,"byte_end":219840,"line_start":1761,"line_end":1761,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220305,"byte_end":220309,"line_start":1781,"line_end":1781,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":221270,"byte_end":221274,"line_start":1813,"line_end":1813,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":221718,"byte_end":221722,"line_start":1829,"line_end":1829,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":262940,"byte_end":262945,"line_start":1355,"line_end":1355,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263062,"byte_end":263067,"line_start":1362,"line_end":1362,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263257,"byte_end":263262,"line_start":1374,"line_end":1374,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263434,"byte_end":263439,"line_start":1385,"line_end":1385,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263556,"byte_end":263561,"line_start":1392,"line_end":1392,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263751,"byte_end":263756,"line_start":1404,"line_end":1404,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263931,"byte_end":263936,"line_start":1415,"line_end":1415,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":264210,"byte_end":264215,"line_start":1427,"line_end":1427,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":275918,"byte_end":275922,"line_start":332,"line_end":332,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276109,"byte_end":276114,"line_start":341,"line_end":341,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276300,"byte_end":276305,"line_start":350,"line_end":350,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5583,"byte_end":5588,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5598,"byte_end":5602,"line_start":76,"line_end":76,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":20}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5612,"byte_end":5615,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":29}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5625,"byte_end":5635,"line_start":78,"line_end":78,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":42}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70415,"byte_end":70423,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":43}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70433,"byte_end":70439,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":59}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70449,"byte_end":70457,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":75}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/projection.rs","byte_start":70467,"byte_end":70473,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":91}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5645,"byte_end":5650,"line_start":79,"line_end":79,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":108}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5660,"byte_end":5669,"line_start":80,"line_end":80,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":115}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5679,"byte_end":5682,"line_start":81,"line_end":81,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":120}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5692,"byte_end":5695,"line_start":82,"line_end":82,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":190}},{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/lib.rs","byte_start":5705,"byte_end":5713,"line_start":83,"line_end":83,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":227}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/util.rs","byte_start":5980,"byte_end":5985,"line_start":7,"line_end":7,"column_start":20,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":16,"index":1039},"to":{"krate":0,"index":6}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":69200,"byte_end":69204,"line_start":1098,"line_end":1098,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/mat.rs","byte_start":69586,"byte_end":69590,"line_start":1113,"line_end":1113,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":878},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182332,"byte_end":182336,"line_start":500,"line_end":500,"column_start":26,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1637},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182594,"byte_end":182598,"line_start":510,"line_end":510,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1627},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182713,"byte_end":182717,"line_start":517,"line_end":517,"column_start":21,"column_end":25},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1637},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":182817,"byte_end":182821,"line_start":524,"line_end":524,"column_start":6,"column_end":10},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":183286,"byte_end":183290,"line_start":544,"line_end":544,"column_start":6,"column_end":10},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":201596,"byte_end":201600,"line_start":1124,"line_end":1124,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1873},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":201768,"byte_end":201772,"line_start":1135,"line_end":1135,"column_start":21,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1884},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":201953,"byte_end":201957,"line_start":1146,"line_end":1146,"column_start":21,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1873},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202127,"byte_end":202131,"line_start":1157,"line_end":1157,"column_start":21,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1884},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202286,"byte_end":202290,"line_start":1168,"line_end":1168,"column_start":6,"column_end":10},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":202755,"byte_end":202759,"line_start":1188,"line_end":1188,"column_start":6,"column_end":10},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":204187,"byte_end":204191,"line_start":1238,"line_end":1238,"column_start":26,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1884},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":204573,"byte_end":204577,"line_start":1253,"line_end":1253,"column_start":26,"column_end":30},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1884},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219450,"byte_end":219454,"line_start":1737,"line_end":1737,"column_start":21,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2109},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219644,"byte_end":219648,"line_start":1749,"line_end":1749,"column_start":21,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2121},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":219836,"byte_end":219840,"line_start":1761,"line_end":1761,"column_start":6,"column_end":10},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":220305,"byte_end":220309,"line_start":1781,"line_end":1781,"column_start":6,"column_end":10},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":221270,"byte_end":221274,"line_start":1813,"line_end":1813,"column_start":26,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2121},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/vec.rs","byte_start":221718,"byte_end":221722,"line_start":1829,"line_end":1829,"column_start":26,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2121},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":262940,"byte_end":262945,"line_start":1355,"line_end":1355,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2232},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263062,"byte_end":263067,"line_start":1362,"line_end":1362,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2716},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263257,"byte_end":263262,"line_start":1374,"line_end":1374,"column_start":22,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2473},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263434,"byte_end":263439,"line_start":1385,"line_end":1385,"column_start":22,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2351},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263556,"byte_end":263561,"line_start":1392,"line_end":1392,"column_start":22,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2837},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263751,"byte_end":263756,"line_start":1404,"line_end":1404,"column_start":22,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2596},"to":{"krate":2,"index":1963}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":263931,"byte_end":263936,"line_start":1415,"line_end":1415,"column_start":25,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2596},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/int.rs","byte_start":264210,"byte_end":264215,"line_start":1427,"line_end":1427,"column_start":25,"column_end":30},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2473},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":275918,"byte_end":275922,"line_start":332,"line_end":332,"column_start":6,"column_end":10},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276109,"byte_end":276114,"line_start":341,"line_end":341,"column_start":6,"column_end":11},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/ultraviolet-0.4.6/src/geometry.rs","byte_start":276300,"byte_end":276305,"line_start":350,"line_end":350,"column_start":6,"column_end":11},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3031},"to":{"krate":4294967295,"index":4294967295}}]}