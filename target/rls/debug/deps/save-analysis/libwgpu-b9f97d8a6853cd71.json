{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2","program":"/Users/antonioramos/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","wgpu","--edition=2018","/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=b9f97d8a6853cd71","-C","extra-filename=-b9f97d8a6853cd71","--out-dir","/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps","-L","dependency=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps","--extern","arrayvec=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libarrayvec-410da0bcd6271b08.rmeta","--extern","futures=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libfutures-0b3d15cb04bc9767.rmeta","--extern","objc=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libobjc-10d5568034f5596b.rmeta","--extern","parking_lot=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libparking_lot-06d63835ee766c0f.rmeta","--extern","raw_window_handle=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libraw_window_handle-15208d3faaafa6a4.rmeta","--extern","smallvec=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libsmallvec-9c74e4674d33d1d5.rmeta","--extern","tracing=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libtracing-679c63fb7aa6bf9c.rmeta","--extern","typed_arena=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libtyped_arena-f668245a0871c14f.rmeta","--extern","wgc=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libwgpu_core-6c54a0a404a0943e.rmeta","--extern","wgt=/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libwgpu_types-918a3d75ba97ae1f.rmeta","--cap-lints","allow","-L","native=/Users/antonioramos/CS181/tictactoe/target/rls/debug/build/objc_exception-c89b124e5a5304d0/out","-L","native=/Users/antonioramos/CS181/tictactoe/target/rls/debug/build/spirv_cross-f118f923dbc50ccb/out","--error-format=json","--sysroot","/Users/antonioramos/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/antonioramos/CS181/tictactoe/target/rls/debug/deps/libwgpu-b9f97d8a6853cd71.rmeta"},"prelude":{"crate_id":{"name":"wgpu","disambiguator":[10554217493722325900,4303560404764011326]},"crate_root":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src","external_crates":[{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3710194649008989715,14559669089861450418]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9392975149979234998,17049149762166397483]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16512841426258775062,11665789721448774207]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10630307797325716480,16523273723520132349]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3264716338318844693,12681592148182797578]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[140397795414171834,1910274434865169512]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5557669672741662647,10322216614238315513]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14339503364484872598,13531520383629478599]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[14161909693946419124,17554770295131960960]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9716880057120631437,4575334529379688610]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[17190292700912465587,13293574150729131089]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[16973425767318922457,5762286362994384933]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[3049460603833016674,5895625007283919048]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[8971705811930800565,4802059752817986136]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[7414259369911982492,16117941559470048194]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":16,"id":{"name":"arrayvec","disambiguator":[5539411751077712848,8650827150853762111]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":17,"id":{"name":"futures","disambiguator":[1713219336666371201,10871186606648336576]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":18,"id":{"name":"futures_core","disambiguator":[2969652916743940601,2080988290908858223]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":19,"id":{"name":"futures_util","disambiguator":[7523278584229890922,6872996247197160546]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":20,"id":{"name":"pin_utils","disambiguator":[13711647010173505202,4541951311698546309]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":21,"id":{"name":"proc_macro_hack","disambiguator":[14994149165226609185,13764894071342261991]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":22,"id":{"name":"futures_task","disambiguator":[16818044931355452464,11985136792373909579]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":23,"id":{"name":"futures_sink","disambiguator":[2785026919249971606,7426636691961072093]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":24,"id":{"name":"pin_project_lite","disambiguator":[16702743115079456072,200694708816345942]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":25,"id":{"name":"futures_channel","disambiguator":[5907392795774352207,12423120853309733399]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":26,"id":{"name":"slab","disambiguator":[10122778492727048975,67471401287543704]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":27,"id":{"name":"futures_io","disambiguator":[13870528870224785434,2746595267713344074]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":28,"id":{"name":"futures_macro","disambiguator":[15425426553580879436,17237530361263047839]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":29,"id":{"name":"memchr","disambiguator":[11124775717868560201,12331019455913750728]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":30,"id":{"name":"futures_executor","disambiguator":[13019286882693600354,13936741447778713445]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":31,"id":{"name":"smallvec","disambiguator":[18200465377370406182,14733425022764129350]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":32,"id":{"name":"typed_arena","disambiguator":[13100183099758010067,15605886094860519015]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":33,"id":{"name":"wgpu_core","disambiguator":[2513568629384362519,10960065590687054245]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":34,"id":{"name":"gfx_backend_empty","disambiguator":[3211762785659860344,90329680928890651]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":35,"id":{"name":"gfx_hal","disambiguator":[5953115990823336795,6314969920521700168]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":36,"id":{"name":"bitflags","disambiguator":[622889312128496731,14058552020937752200]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":37,"id":{"name":"raw_window_handle","disambiguator":[3967827822235630183,15863857987543660822]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":38,"id":{"name":"libc","disambiguator":[7108443598228372490,3719214740063754336]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":39,"id":{"name":"log","disambiguator":[9296859664827610279,6775837141492413681]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":40,"id":{"name":"cfg_if","disambiguator":[4164838008399425541,17156835214731903611]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":41,"id":{"name":"gfx_backend_metal","disambiguator":[6907354888945028118,6942006277927476055]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":42,"id":{"name":"objc","disambiguator":[16565762902057410318,14855639747462519193]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":43,"id":{"name":"malloc_buf","disambiguator":[10631055618984806971,14326494203467151320]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":44,"id":{"name":"range_alloc","disambiguator":[9066241679768371880,47171916150167244]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":45,"id":{"name":"cocoa_foundation","disambiguator":[14819710905257695875,4828344876357341587]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":46,"id":{"name":"block","disambiguator":[8218297234091194713,13444460698380139972]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":47,"id":{"name":"core_foundation","disambiguator":[11043575529502182267,1706491797200533931]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":48,"id":{"name":"core_foundation_sys","disambiguator":[13163059284955857696,1477660798056370009]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":49,"id":{"name":"core_graphics_types","disambiguator":[2562646744689718809,1344288201114897273]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":50,"id":{"name":"foreign_types","disambiguator":[16907549090834574438,2351834470843257175]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":51,"id":{"name":"foreign_types_shared","disambiguator":[1422663638442865808,11046309428706519914]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":52,"id":{"name":"lazy_static","disambiguator":[8622471236171398951,7375813736511945278]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":53,"id":{"name":"metal","disambiguator":[15548922504174060030,16318937710934683546]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/native_gpu_future.rs","num":54,"id":{"name":"parking_lot","disambiguator":[8325638948828244904,16794068634889984565]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":55,"id":{"name":"instant","disambiguator":[13445658279258951655,3048678408934549062]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":56,"id":{"name":"lock_api","disambiguator":[15575325467868291627,5784296557655443267]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":57,"id":{"name":"scopeguard","disambiguator":[1862256896015051791,8867880041671314409]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":58,"id":{"name":"parking_lot_core","disambiguator":[2883627814119287337,8606912264569901594]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":59,"id":{"name":"gfx_auxil","disambiguator":[13052210431501263142,5175789945410630005]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":60,"id":{"name":"spirv_cross","disambiguator":[17823511455288917573,3128536801176401878]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":61,"id":{"name":"fxhash","disambiguator":[6910660990117678751,17367875895123839480]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":62,"id":{"name":"byteorder","disambiguator":[2470126068869369270,3118906432055358660]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":63,"id":{"name":"copyless","disambiguator":[2792785093999940830,3613768008565711645]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":64,"id":{"name":"storage_map","disambiguator":[9942897009899434035,15922699292472325291]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":65,"id":{"name":"gfx_descriptor","disambiguator":[10559813354461862197,14353722804623820200]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":66,"id":{"name":"thiserror","disambiguator":[613470437766525732,12163394795188437938]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":67,"id":{"name":"thiserror_impl","disambiguator":[1851250986235396947,15682832424011280780]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","num":68,"id":{"name":"wgpu_types","disambiguator":[3742780638629184025,6858986595727382145]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":69,"id":{"name":"gfx_memory","disambiguator":[6300987488840524774,2864923100510134183]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":70,"id":{"name":"bit_set","disambiguator":[14282188084664475152,4359688986954489941]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":71,"id":{"name":"bit_vec","disambiguator":[15280285000337557907,1332350671767550977]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":72,"id":{"name":"naga","disambiguator":[11284781309495294311,11679774475003092765]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":73,"id":{"name":"spirv_headers","disambiguator":[13815381059239044178,16769692984592565310]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":74,"id":{"name":"num_traits","disambiguator":[15951810133897235636,5635545674667325330]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-core-0.6.5/src/lib.rs","num":75,"id":{"name":"tracing","disambiguator":[2421809758064359912,12341249641581382551]}},{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","num":76,"id":{"name":"tracing_core","disambiguator":[11230762678751161169,11976955567525430559]}}],"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":0,"byte_end":92049,"line_start":1,"line_end":2592,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141053,"byte_end":141064,"line_start":11,"line_end":11,"column_start":15,"column_end":26},"alias_span":null,"name":"StagingBelt","value":"","parent":{"krate":0,"index":263}},{"kind":"Use","ref_id":{"krate":33,"index":4625},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":763,"byte_end":774,"line_start":33,"line_end":33,"column_start":25,"column_end":36},"alias_span":null,"name":"AdapterInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":33,"index":4666},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":776,"byte_end":786,"line_start":33,"line_end":33,"column_start":38,"column_end":48},"alias_span":null,"name":"DeviceType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1931},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":808,"byte_end":819,"line_start":35,"line_end":35,"column_start":5,"column_end":16},"alias_span":null,"name":"AddressMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":112},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":821,"byte_end":828,"line_start":35,"line_end":35,"column_start":18,"column_end":25},"alias_span":null,"name":"Backend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":172},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":830,"byte_end":840,"line_start":35,"line_end":35,"column_start":27,"column_end":37},"alias_span":null,"name":"BackendBit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":2107},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":842,"byte_end":862,"line_start":35,"line_end":35,"column_start":39,"column_end":59},"alias_span":null,"name":"BindGroupLayoutEntry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":2075},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":864,"byte_end":875,"line_start":35,"line_end":35,"column_start":61,"column_end":72},"alias_span":null,"name":"BindingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":752},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":877,"byte_end":892,"line_start":35,"line_end":35,"column_start":74,"column_end":89},"alias_span":null,"name":"BlendDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":668},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":898,"byte_end":909,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"alias_span":null,"name":"BlendFactor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":722},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":911,"byte_end":925,"line_start":36,"line_end":36,"column_start":18,"column_end":32},"alias_span":null,"name":"BlendOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":6},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":927,"byte_end":940,"line_start":36,"line_end":36,"column_start":34,"column_end":47},"alias_span":null,"name":"BufferAddress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":7},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":942,"byte_end":952,"line_start":36,"line_end":36,"column_start":49,"column_end":59},"alias_span":null,"name":"BufferSize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1465},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":954,"byte_end":965,"line_start":36,"line_end":36,"column_start":61,"column_end":72},"alias_span":null,"name":"BufferUsage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1805},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":967,"byte_end":972,"line_start":36,"line_end":36,"column_start":74,"column_end":79},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":770},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":978,"byte_end":998,"line_start":37,"line_end":37,"column_start":5,"column_end":25},"alias_span":null,"name":"ColorStateDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1052},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1000,"byte_end":1010,"line_start":37,"line_end":37,"column_start":27,"column_end":37},"alias_span":null,"name":"ColorWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1993},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1012,"byte_end":1035,"line_start":37,"line_end":37,"column_start":39,"column_end":62},"alias_span":null,"name":"CommandBufferDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1282},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1037,"byte_end":1052,"line_start":37,"line_end":37,"column_start":64,"column_end":79},"alias_span":null,"name":"CompareFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":840},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1054,"byte_end":1062,"line_start":37,"line_end":37,"column_start":81,"column_end":89},"alias_span":null,"name":"CullMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1184},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1068,"byte_end":1095,"line_start":38,"line_end":38,"column_start":5,"column_end":32},"alias_span":null,"name":"DepthStencilStateDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":530},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1097,"byte_end":1113,"line_start":38,"line_end":38,"column_start":34,"column_end":50},"alias_span":null,"name":"DeviceDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":9},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1115,"byte_end":1128,"line_start":38,"line_end":38,"column_start":52,"column_end":65},"alias_span":null,"name":"DynamicOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1861},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1130,"byte_end":1138,"line_start":38,"line_end":38,"column_start":67,"column_end":75},"alias_span":null,"name":"Extent3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":318},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1140,"byte_end":1148,"line_start":38,"line_end":38,"column_start":77,"column_end":85},"alias_span":null,"name":"Features","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1955},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1150,"byte_end":1160,"line_start":38,"line_end":38,"column_start":87,"column_end":97},"alias_span":null,"name":"FilterMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":819},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1166,"byte_end":1175,"line_start":39,"line_end":39,"column_start":5,"column_end":14},"alias_span":null,"name":"FrontFace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1203},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1177,"byte_end":1188,"line_start":39,"line_end":39,"column_start":16,"column_end":27},"alias_span":null,"name":"IndexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1321},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1190,"byte_end":1203,"line_start":39,"line_end":39,"column_start":29,"column_end":42},"alias_span":null,"name":"InputStepMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":461},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1205,"byte_end":1211,"line_start":39,"line_end":39,"column_start":44,"column_end":50},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1842},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1213,"byte_end":1221,"line_start":39,"line_end":39,"column_start":52,"column_end":60},"alias_span":null,"name":"Origin3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":148},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1223,"byte_end":1238,"line_start":39,"line_end":39,"column_start":62,"column_end":77},"alias_span":null,"name":"PowerPreference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1642},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1240,"byte_end":1251,"line_start":39,"line_end":39,"column_start":79,"column_end":90},"alias_span":null,"name":"PresentMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":789},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1257,"byte_end":1274,"line_start":40,"line_end":40,"column_start":5,"column_end":22},"alias_span":null,"name":"PrimitiveTopology","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1976},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1276,"byte_end":1293,"line_start":40,"line_end":40,"column_start":24,"column_end":41},"alias_span":null,"name":"PushConstantRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":864},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1295,"byte_end":1323,"line_start":40,"line_end":40,"column_start":43,"column_end":71},"alias_span":null,"name":"RasterizationStateDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":8},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1325,"byte_end":1339,"line_start":40,"line_end":40,"column_start":73,"column_end":87},"alias_span":null,"name":"ShaderLocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":540},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1345,"byte_end":1356,"line_start":41,"line_end":41,"column_start":5,"column_end":16},"alias_span":null,"name":"ShaderStage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1224},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1358,"byte_end":1374,"line_start":41,"line_end":41,"column_start":18,"column_end":34},"alias_span":null,"name":"StencilOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1163},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1376,"byte_end":1398,"line_start":41,"line_end":41,"column_start":36,"column_end":58},"alias_span":null,"name":"StencilStateDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1263},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1400,"byte_end":1426,"line_start":41,"line_end":41,"column_start":60,"column_end":86},"alias_span":null,"name":"StencilStateFaceDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1772},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1432,"byte_end":1451,"line_start":42,"line_end":42,"column_start":5,"column_end":24},"alias_span":null,"name":"SwapChainDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1792},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1453,"byte_end":1468,"line_start":42,"line_end":42,"column_start":26,"column_end":41},"alias_span":null,"name":"SwapChainStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1910},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1470,"byte_end":1483,"line_start":42,"line_end":42,"column_start":43,"column_end":56},"alias_span":null,"name":"TextureAspect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":2044},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1485,"byte_end":1505,"line_start":42,"line_end":42,"column_start":58,"column_end":78},"alias_span":null,"name":"TextureComponentType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":2065},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1507,"byte_end":1524,"line_start":42,"line_end":42,"column_start":80,"column_end":97},"alias_span":null,"name":"TextureDataLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1821},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1530,"byte_end":1546,"line_start":43,"line_end":43,"column_start":5,"column_end":21},"alias_span":null,"name":"TextureDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":881},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1548,"byte_end":1561,"line_start":43,"line_end":43,"column_start":23,"column_end":36},"alias_span":null,"name":"TextureFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1666},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1563,"byte_end":1575,"line_start":43,"line_end":43,"column_start":38,"column_end":50},"alias_span":null,"name":"TextureUsage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":641},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1577,"byte_end":1597,"line_start":43,"line_end":43,"column_start":52,"column_end":72},"alias_span":null,"name":"TextureViewDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1342},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1599,"byte_end":1624,"line_start":43,"line_end":43,"column_start":74,"column_end":99},"alias_span":null,"name":"VertexAttributeDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":1360},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1630,"byte_end":1642,"line_start":44,"line_end":44,"column_start":5,"column_end":17},"alias_span":null,"name":"VertexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":11},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1644,"byte_end":1665,"line_start":44,"line_end":44,"column_start":19,"column_end":40},"alias_span":null,"name":"BIND_BUFFER_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":12},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1667,"byte_end":1688,"line_start":44,"line_end":44,"column_start":42,"column_end":63},"alias_span":null,"name":"COPY_BUFFER_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":10},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1690,"byte_end":1718,"line_start":44,"line_end":44,"column_start":65,"column_end":93},"alias_span":null,"name":"COPY_BYTES_PER_ROW_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":14},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":1724,"byte_end":1747,"line_start":45,"line_end":45,"column_start":5,"column_end":28},"alias_span":null,"name":"PUSH_CONSTANT_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":293},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30289,"byte_end":30310,"line_start":933,"line_end":933,"column_start":14,"column_end":35},"alias_span":null,"name":"RequestAdapterOptionsBase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":2126},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40805,"byte_end":40819,"line_start":1162,"line_end":1162,"column_start":14,"column_end":28},"alias_span":null,"name":"BufferCopyViewBase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":68,"index":2136},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40985,"byte_end":41000,"line_start":1166,"line_end":1166,"column_start":14,"column_end":29},"alias_span":null,"name":"TextureCopyViewBase","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":0,"byte_end":92049,"line_start":1,"line_end":2592,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":263},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":1658},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":1664},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":408},{"krate":0,"index":423},{"krate":0,"index":435},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":838},{"krate":0,"index":837},{"krate":0,"index":835},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":840},{"krate":0,"index":844},{"krate":0,"index":523},{"krate":0,"index":846},{"krate":0,"index":851},{"krate":0,"index":853},{"krate":0,"index":864},{"krate":0,"index":861},{"krate":0,"index":858},{"krate":0,"index":866},{"krate":0,"index":870},{"krate":0,"index":872},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":529},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":531},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":533},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":535},{"krate":0,"index":537},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":545},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":555},{"krate":0,"index":927},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":557},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":966},{"krate":0,"index":983},{"krate":0,"index":980},{"krate":0,"index":986},{"krate":0,"index":1014},{"krate":0,"index":1011},{"krate":0,"index":1008},{"krate":0,"index":1004},{"krate":0,"index":999},{"krate":0,"index":1001},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":559},{"krate":0,"index":1016},{"krate":0,"index":1041},{"krate":0,"index":1038},{"krate":0,"index":1035},{"krate":0,"index":1031},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":562},{"krate":0,"index":1043},{"krate":0,"index":1051},{"krate":0,"index":1048},{"krate":0,"index":1054},{"krate":0,"index":1062},{"krate":0,"index":1059},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":1065},{"krate":0,"index":1089},{"krate":0,"index":1086},{"krate":0,"index":1080},{"krate":0,"index":1082},{"krate":0,"index":1075},{"krate":0,"index":1077},{"krate":0,"index":1071},{"krate":0,"index":1092},{"krate":0,"index":1116},{"krate":0,"index":1113},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1098},{"krate":0,"index":1095},{"krate":0,"index":1119},{"krate":0,"index":1143},{"krate":0,"index":1140},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1129},{"krate":0,"index":1131},{"krate":0,"index":1125},{"krate":0,"index":1122},{"krate":0,"index":1146},{"krate":0,"index":1173},{"krate":0,"index":1170},{"krate":0,"index":1164},{"krate":0,"index":1166},{"krate":0,"index":1159},{"krate":0,"index":1161},{"krate":0,"index":1155},{"krate":0,"index":1176},{"krate":0,"index":1198},{"krate":0,"index":1195},{"krate":0,"index":1192},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1201},{"krate":0,"index":1209},{"krate":0,"index":1206},{"krate":0,"index":1212},{"krate":0,"index":1234},{"krate":0,"index":1231},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":568},{"krate":0,"index":1237},{"krate":0,"index":1244},{"krate":0,"index":1241},{"krate":0,"index":1247},{"krate":0,"index":1255},{"krate":0,"index":1252},{"krate":0,"index":1258},{"krate":0,"index":1265},{"krate":0,"index":1262},{"krate":0,"index":1268},{"krate":0,"index":1281},{"krate":0,"index":1277},{"krate":0,"index":1273},{"krate":0,"index":1285},{"krate":0,"index":1302},{"krate":0,"index":1299},{"krate":0,"index":1305},{"krate":0,"index":1313},{"krate":0,"index":1310},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":1316},{"krate":0,"index":1323},{"krate":0,"index":1320},{"krate":0,"index":1326},{"krate":0,"index":1349},{"krate":0,"index":1346},{"krate":0,"index":1342},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1352},{"krate":0,"index":1374},{"krate":0,"index":1371},{"krate":0,"index":1367},{"krate":0,"index":1362},{"krate":0,"index":1364},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1377},{"krate":0,"index":1404},{"krate":0,"index":1401},{"krate":0,"index":1398},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1383},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1417},{"krate":0,"index":1434},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1426},{"krate":0,"index":576},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":591},{"krate":0,"index":599},{"krate":0,"index":615},{"krate":0,"index":1436},{"krate":0,"index":1446},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1438},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":1448},{"krate":0,"index":1458},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1450},{"krate":0,"index":620},{"krate":0,"index":622},{"krate":0,"index":1460},{"krate":0,"index":1471},{"krate":0,"index":1469},{"krate":0,"index":1468},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":623},{"krate":0,"index":1473},{"krate":0,"index":1477},{"krate":0,"index":1480},{"krate":0,"index":1485},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":633},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":641},{"krate":0,"index":647},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":667},{"krate":0,"index":687},{"krate":0,"index":691},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":727},{"krate":0,"index":730},{"krate":0,"index":736},{"krate":0,"index":738}],"decl_id":null,"docs":" A cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).","sig":null,"attributes":[{"value":"/ A cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":0,"byte_end":102,"line_start":1,"line_end":1,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":103,"byte_end":106,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ To start using the API, create an [`Instance`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":107,"byte_end":158,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":252,"byte_end":274,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":263},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":784},{"krate":0,"index":807},{"krate":0,"index":804},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":793},{"krate":0,"index":795},{"krate":0,"index":789}],"decl_id":null,"docs":" Utility structures and functions.\n","sig":null,"attributes":[{"value":"/ Utility structures and functions.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":140897,"byte_end":140934,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145269,"byte_end":145280,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"StagingBelt","qualname":"::util::belt::StagingBelt","value":"StagingBelt {  }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"decl_id":null,"docs":" Staging belt is a machine that uploads data.","sig":null,"attributes":[{"value":"/ Staging belt is a machine that uploads data.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":144729,"byte_end":144777,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":144778,"byte_end":144781,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Internally it uses a ring-buffer of staging buffers that are sub-allocated.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":144782,"byte_end":144861,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ It has an advantage over `Queue.write_buffer` in a way that it returns a mutable slice,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":144862,"byte_end":144953,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ which you can fill to avoid an extra data copy.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":144954,"byte_end":145005,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145006,"byte_end":145009,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Using a staging belt is slightly complicated, and generally goes as follows:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145010,"byte_end":145090,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ - Write to buffers that need writing to using `write_buffer`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145091,"byte_end":145156,"line_start":21,"line_end":21,"column_start":1,"column_end":66}},{"value":"/ - Call `finish`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145157,"byte_end":145177,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/ - Submit all command encoders used with `write_buffer`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145178,"byte_end":145237,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/ - Call `recall`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145238,"byte_end":145257,"line_start":24,"line_end":24,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145948,"byte_end":145951,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<StagingBelt>::new","value":"pub fn new(BufferAddress) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new staging belt.","sig":null,"attributes":[{"value":"/ Create a new staging belt.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145699,"byte_end":145729,"line_start":38,"line_end":38,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145734,"byte_end":145737,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The `chunk_size` is the unit of internal buffer allocation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145742,"byte_end":145805,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"/ It's better when it's big, but ideally still 1-4 times less than","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145810,"byte_end":145878,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/ the total amount of data uploaded per submission.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145883,"byte_end":145936,"line_start":42,"line_end":42,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":146565,"byte_end":146577,"line_start":60,"line_end":60,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<StagingBelt>::write_buffer","value":"pub fn write_buffer(&mut Self, &mut CommandEncoder, &Buffer, BufferAddress,\n                    BufferSize, &Device) -> BufferViewMut","parent":null,"children":[],"decl_id":null,"docs":" Allocate the staging belt slice of `size` to be uploaded into the `target` buffer\n at the specified offset.","sig":null,"attributes":[{"value":"/ Allocate the staging belt slice of `size` to be uploaded into the `target` buffer","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":146263,"byte_end":146348,"line_start":55,"line_end":55,"column_start":5,"column_end":90}},{"value":"/ at the specified offset.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":146353,"byte_end":146381,"line_start":56,"line_end":56,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":146386,"byte_end":146389,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The upload will be placed into the provided command encoder. This encoder","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":146394,"byte_end":146471,"line_start":58,"line_end":58,"column_start":5,"column_end":82}},{"value":"/ must be submitted after `finish` is called and before `recall` is called.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":146476,"byte_end":146553,"line_start":59,"line_end":59,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":148554,"byte_end":148560,"line_start":117,"line_end":117,"column_start":12,"column_end":18},"name":"finish","qualname":"<StagingBelt>::finish","value":"pub fn finish(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prepare currently mapped buffers for use in a submission.","sig":null,"attributes":[{"value":"/ Prepare currently mapped buffers for use in a submission.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":148342,"byte_end":148403,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":148408,"byte_end":148411,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ At this point, all the partially used staging buffers are closed until","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":148416,"byte_end":148490,"line_start":115,"line_end":115,"column_start":5,"column_end":79}},{"value":"/ the GPU is done copying the data from them.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":148495,"byte_end":148542,"line_start":116,"line_end":116,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":148998,"byte_end":149004,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"recall","qualname":"<StagingBelt>::recall","value":"pub fn recall(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recall all of the closed buffers back to be reused.","sig":null,"attributes":[{"value":"/ Recall all of the closed buffers back to be reused.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":148825,"byte_end":148880,"line_start":127,"line_end":127,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":148885,"byte_end":148888,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This has to be called after the command encoders written to `write_buffer` are submitted!","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":148893,"byte_end":148986,"line_start":129,"line_end":129,"column_start":5,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":311},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141347,"byte_end":141357,"line_start":23,"line_end":23,"column_start":8,"column_end":18},"name":"make_spirv","qualname":"::util::make_spirv","value":"pub fn make_spirv<'a>(&'a [u8]) -> super::ShaderModuleSource","parent":null,"children":[],"decl_id":null,"docs":" Treat the given byte slice as a SPIR-V module.","sig":null,"attributes":[{"value":"/ Treat the given byte slice as a SPIR-V module.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141087,"byte_end":141137,"line_start":14,"line_end":14,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141138,"byte_end":141141,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Panic","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141142,"byte_end":141153,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141154,"byte_end":141157,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function panics if:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141158,"byte_end":141186,"line_start":18,"line_end":18,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141187,"byte_end":141190,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - Input length isn't multiple of 4","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141191,"byte_end":141229,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/ - Input is longer than [`usize::max_value`]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141230,"byte_end":141277,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/ - SPIR-V magic number is missing from beginning of stream","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":141278,"byte_end":141339,"line_start":22,"line_end":22,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":314},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":142458,"byte_end":142467,"line_start":56,"line_end":56,"column_start":11,"column_end":20},"name":"DeviceExt","qualname":"::util::DeviceExt","value":"DeviceExt","parent":null,"children":[{"krate":0,"index":315}],"decl_id":null,"docs":" Utility methods not meant to be in the main API.\n","sig":null,"attributes":[{"value":"/ Utility methods not meant to be in the main API.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":142395,"byte_end":142447,"line_start":55,"line_end":55,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":142534,"byte_end":142552,"line_start":58,"line_end":58,"column_start":8,"column_end":26},"name":"create_buffer_init","qualname":"::util::DeviceExt::create_buffer_init","value":"pub fn create_buffer_init(&Self, &BufferInitDescriptor) -> crate::Buffer","parent":{"krate":0,"index":314},"children":[],"decl_id":null,"docs":" Creates a [`Buffer`] with data to initialize it.\n","sig":null,"attributes":[{"value":"/ Creates a [`Buffer`] with data to initialize it.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":142474,"byte_end":142526,"line_start":57,"line_end":57,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":784},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":144030,"byte_end":144050,"line_start":98,"line_end":98,"column_start":12,"column_end":32},"name":"BufferInitDescriptor","qualname":"::util::BufferInitDescriptor","value":"BufferInitDescriptor { label, contents, usage }","parent":null,"children":[{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788}],"decl_id":null,"docs":" Describes a [`Buffer`] when allocating.\n","sig":null,"attributes":[{"value":"/ Describes a [`Buffer`] when allocating.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":143930,"byte_end":143973,"line_start":96,"line_end":96,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":786},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":144163,"byte_end":144168,"line_start":100,"line_end":100,"column_start":9,"column_end":14},"name":"label","qualname":"::util::BufferInitDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":" Debug label of a buffer. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of a buffer. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":144061,"byte_end":144154,"line_start":99,"line_end":99,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":787},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":144237,"byte_end":144245,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"name":"contents","qualname":"::util::BufferInitDescriptor::contents","value":"&'a [u8]","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":" Contents of a buffer on creation.\n","sig":null,"attributes":[{"value":"/ Contents of a buffer on creation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":144191,"byte_end":144228,"line_start":101,"line_end":101,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":788},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":144387,"byte_end":144392,"line_start":105,"line_end":105,"column_start":9,"column_end":14},"name":"usage","qualname":"::util::BufferInitDescriptor::usage","value":"wgpu_types::BufferUsage","parent":{"krate":0,"index":784},"children":[],"decl_id":null,"docs":" Usages of a buffer. If the buffer is used in any way that isn't specified here, the operation\n will panic.\n","sig":null,"attributes":[{"value":"/ Usages of a buffer. If the buffer is used in any way that isn't specified here, the operation","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":144261,"byte_end":144358,"line_start":103,"line_end":103,"column_start":5,"column_end":102}},{"value":"/ will panic.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":144363,"byte_end":144378,"line_start":104,"line_end":104,"column_start":5,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":436},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5028,"byte_end":5037,"line_start":153,"line_end":153,"column_start":10,"column_end":19},"name":"AdapterId","qualname":"::Context::AdapterId","value":"type AdapterId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":437},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5079,"byte_end":5087,"line_start":154,"line_end":154,"column_start":10,"column_end":18},"name":"DeviceId","qualname":"::Context::DeviceId","value":"type DeviceId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":438},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5129,"byte_end":5136,"line_start":155,"line_end":155,"column_start":10,"column_end":17},"name":"QueueId","qualname":"::Context::QueueId","value":"type QueueId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":439},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5178,"byte_end":5192,"line_start":156,"line_end":156,"column_start":10,"column_end":24},"name":"ShaderModuleId","qualname":"::Context::ShaderModuleId","value":"type ShaderModuleId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":440},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5234,"byte_end":5251,"line_start":157,"line_end":157,"column_start":10,"column_end":27},"name":"BindGroupLayoutId","qualname":"::Context::BindGroupLayoutId","value":"type BindGroupLayoutId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":441},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5293,"byte_end":5304,"line_start":158,"line_end":158,"column_start":10,"column_end":21},"name":"BindGroupId","qualname":"::Context::BindGroupId","value":"type BindGroupId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":442},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5346,"byte_end":5359,"line_start":159,"line_end":159,"column_start":10,"column_end":23},"name":"TextureViewId","qualname":"::Context::TextureViewId","value":"type TextureViewId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":443},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5401,"byte_end":5410,"line_start":160,"line_end":160,"column_start":10,"column_end":19},"name":"SamplerId","qualname":"::Context::SamplerId","value":"type SamplerId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":444},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5452,"byte_end":5460,"line_start":161,"line_end":161,"column_start":10,"column_end":18},"name":"BufferId","qualname":"::Context::BufferId","value":"type BufferId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":445},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5502,"byte_end":5511,"line_start":162,"line_end":162,"column_start":10,"column_end":19},"name":"TextureId","qualname":"::Context::TextureId","value":"type TextureId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":446},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5553,"byte_end":5569,"line_start":163,"line_end":163,"column_start":10,"column_end":26},"name":"PipelineLayoutId","qualname":"::Context::PipelineLayoutId","value":"type PipelineLayoutId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":447},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5611,"byte_end":5627,"line_start":164,"line_end":164,"column_start":10,"column_end":26},"name":"RenderPipelineId","qualname":"::Context::RenderPipelineId","value":"type RenderPipelineId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":448},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5669,"byte_end":5686,"line_start":165,"line_end":165,"column_start":10,"column_end":27},"name":"ComputePipelineId","qualname":"::Context::ComputePipelineId","value":"type ComputePipelineId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":449},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5728,"byte_end":5744,"line_start":166,"line_end":166,"column_start":10,"column_end":26},"name":"CommandEncoderId","qualname":"::Context::CommandEncoderId","value":"type CommandEncoderId: Debug;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":450},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5762,"byte_end":5775,"line_start":167,"line_end":167,"column_start":10,"column_end":23},"name":"ComputePassId","qualname":"::Context::ComputePassId","value":"type ComputePassId: Debug + ComputePassInner<Self>;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":451},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5818,"byte_end":5830,"line_start":168,"line_end":168,"column_start":10,"column_end":22},"name":"RenderPassId","qualname":"::Context::RenderPassId","value":"type RenderPassId: Debug + RenderPassInner<Self>;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":452},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5872,"byte_end":5887,"line_start":169,"line_end":169,"column_start":10,"column_end":25},"name":"CommandBufferId","qualname":"::Context::CommandBufferId","value":"type CommandBufferId: Debug + Send + Sync;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":453},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5919,"byte_end":5940,"line_start":170,"line_end":170,"column_start":10,"column_end":31},"name":"RenderBundleEncoderId","qualname":"::Context::RenderBundleEncoderId","value":"type RenderBundleEncoderId: Debug + RenderInner<Self>;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":454},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5978,"byte_end":5992,"line_start":171,"line_end":171,"column_start":10,"column_end":24},"name":"RenderBundleId","qualname":"::Context::RenderBundleId","value":"type RenderBundleId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":455},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":6034,"byte_end":6043,"line_start":172,"line_end":172,"column_start":10,"column_end":19},"name":"SurfaceId","qualname":"::Context::SurfaceId","value":"type SurfaceId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":456},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":6085,"byte_end":6096,"line_start":173,"line_end":173,"column_start":10,"column_end":21},"name":"SwapChainId","qualname":"::Context::SwapChainId","value":"type SwapChainId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":457},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":6139,"byte_end":6160,"line_start":175,"line_end":175,"column_start":10,"column_end":31},"name":"SwapChainOutputDetail","qualname":"::Context::SwapChainOutputDetail","value":"type SwapChainOutputDetail: Send;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":458},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":6178,"byte_end":6198,"line_start":177,"line_end":177,"column_start":10,"column_end":30},"name":"RequestAdapterFuture","qualname":"::Context::RequestAdapterFuture","value":"type RequestAdapterFuture: Future<Output = Option<Self::AdapterId>> + Send;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":459},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":6258,"byte_end":6277,"line_start":178,"line_end":178,"column_start":10,"column_end":29},"name":"RequestDeviceFuture","qualname":"::Context::RequestDeviceFuture","value":"type RequestDeviceFuture: Future<Output = Result<(Self::DeviceId, Self::QueueId), RequestDeviceError>>\n        + Send;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":460},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":6381,"byte_end":6395,"line_start":180,"line_end":180,"column_start":10,"column_end":24},"name":"MapAsyncFuture","qualname":"::Context::MapAsyncFuture","value":"type MapAsyncFuture: Future<Output = Result<(), BufferAsyncError>> + Send;","parent":{"krate":0,"index":435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":810},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14257,"byte_end":14265,"line_start":413,"line_end":413,"column_start":12,"column_end":20},"name":"Instance","qualname":"::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":811}],"decl_id":null,"docs":" Context for all other wgpu objects. Instance of wgpu.","sig":null,"attributes":[{"value":"/ Context for all other wgpu objects. Instance of wgpu.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14007,"byte_end":14064,"line_start":406,"line_end":406,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14065,"byte_end":14068,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ This is the first thing you create when using wgpu.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14069,"byte_end":14124,"line_start":408,"line_end":408,"column_start":1,"column_end":56}},{"value":"/ Its primary use is to create [`Adapter`]s and [`Surface`]s.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14125,"byte_end":14188,"line_start":409,"line_end":409,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14189,"byte_end":14192,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ Does not have to be kept alive.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14193,"byte_end":14228,"line_start":411,"line_end":411,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":814},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14560,"byte_end":14567,"line_start":424,"line_end":424,"column_start":12,"column_end":19},"name":"Adapter","qualname":"::Adapter","value":"Adapter {  }","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"decl_id":null,"docs":" Handle to a physical graphics and/or compute device.","sig":null,"attributes":[{"value":"/ Handle to a physical graphics and/or compute device.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14292,"byte_end":14348,"line_start":417,"line_end":417,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14349,"byte_end":14352,"line_start":418,"line_end":418,"column_start":1,"column_end":4}},{"value":"/ Adapters can be used to open a connection to the corresponding [`Device`]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14353,"byte_end":14430,"line_start":419,"line_end":419,"column_start":1,"column_end":78}},{"value":"/ on the host system by using [`Adapter::request_device`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14431,"byte_end":14491,"line_start":420,"line_end":420,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14492,"byte_end":14495,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ Does not have to be kept alive.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14496,"byte_end":14531,"line_start":422,"line_end":422,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":819},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14949,"byte_end":14955,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"name":"Device","qualname":"::Device","value":"Device {  }","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821}],"decl_id":null,"docs":" Open connection to a graphics and/or compute device.","sig":null,"attributes":[{"value":"/ Open connection to a graphics and/or compute device.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14629,"byte_end":14685,"line_start":429,"line_end":429,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14686,"byte_end":14689,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ Responsible for the creation of most rendering and compute resources.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14690,"byte_end":14763,"line_start":431,"line_end":431,"column_start":1,"column_end":74}},{"value":"/ These are then used in commands, which are submitted to a [`Queue`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14764,"byte_end":14836,"line_start":432,"line_end":432,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14837,"byte_end":14840,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ A device may be requested from an adapter with [`Adapter::request_device`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":14841,"byte_end":14920,"line_start":434,"line_end":434,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":825},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":15203,"byte_end":15207,"line_start":446,"line_end":446,"column_start":5,"column_end":9},"name":"Wait","qualname":"::Maintain::Wait","value":"Maintain::Wait","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Block\n","sig":null,"attributes":[{"value":"/ Block","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":15189,"byte_end":15198,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":827},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":15233,"byte_end":15237,"line_start":448,"line_end":448,"column_start":5,"column_end":9},"name":"Poll","qualname":"::Maintain::Poll","value":"Maintain::Poll","parent":{"krate":0,"index":824},"children":[],"decl_id":null,"docs":" Don't block\n","sig":null,"attributes":[{"value":"/ Don't block","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":15213,"byte_end":15228,"line_start":447,"line_end":447,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":824},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":15174,"byte_end":15182,"line_start":444,"line_end":444,"column_start":10,"column_end":18},"name":"Maintain","qualname":"::Maintain","value":"pub enum Maintain {\n\n    /// Block\n    Wait,\n\n    /// Don't block\n    Poll,\n}","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":827}],"decl_id":null,"docs":" Passed to [`Device::poll`] to control if it should block or not. This has no effect on\n the web.\n","sig":null,"attributes":[{"value":"/ Passed to [`Device::poll`] to control if it should block or not. This has no effect on","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":15016,"byte_end":15106,"line_start":441,"line_end":441,"column_start":1,"column_end":91}},{"value":"/ the web.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":15107,"byte_end":15119,"line_start":442,"line_end":442,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17204,"byte_end":17210,"line_start":516,"line_end":516,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850}],"decl_id":null,"docs":" Handle to a GPU-accessible buffer.","sig":null,"attributes":[{"value":"/ Handle to a GPU-accessible buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17056,"byte_end":17094,"line_start":512,"line_end":512,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17095,"byte_end":17098,"line_start":513,"line_end":513,"column_start":1,"column_end":4}},{"value":"/ Created with [`Device::create_buffer`] or [`Device::create_buffer_init`]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17099,"byte_end":17175,"line_start":514,"line_end":514,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":853},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17526,"byte_end":17537,"line_start":529,"line_end":529,"column_start":12,"column_end":23},"name":"BufferSlice","qualname":"::BufferSlice","value":"BufferSlice {  }","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857}],"decl_id":null,"docs":" Slice into a [`Buffer`].","sig":null,"attributes":[{"value":"/ Slice into a [`Buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17331,"byte_end":17359,"line_start":523,"line_end":523,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17360,"byte_end":17363,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ Created by calling [`Buffer::slice`]. To use the whole buffer, call with unbounded slice:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17364,"byte_end":17457,"line_start":525,"line_end":525,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17458,"byte_end":17461,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ `buffer.slice(..)`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17462,"byte_end":17484,"line_start":527,"line_end":527,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":866},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17746,"byte_end":17753,"line_start":539,"line_end":539,"column_start":12,"column_end":19},"name":"Texture","qualname":"::Texture","value":"Texture {  }","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"decl_id":null,"docs":" Handle to a texture on the GPU.","sig":null,"attributes":[{"value":"/ Handle to a texture on the GPU.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17628,"byte_end":17663,"line_start":535,"line_end":535,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17664,"byte_end":17667,"line_start":536,"line_end":536,"column_start":1,"column_end":4}},{"value":"/ Created by calling [`Device::create_texture`]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17668,"byte_end":17717,"line_start":537,"line_end":537,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":872},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18018,"byte_end":18029,"line_start":550,"line_end":550,"column_start":12,"column_end":23},"name":"TextureView","qualname":"::TextureView","value":"TextureView {  }","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875}],"decl_id":null,"docs":" Handle to a texture view.","sig":null,"attributes":[{"value":"/ Handle to a texture view.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17832,"byte_end":17861,"line_start":545,"line_end":545,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17862,"byte_end":17865,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ A `TextureView` object describes a texture and associated metadata needed by a","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17866,"byte_end":17948,"line_start":547,"line_end":547,"column_start":1,"column_end":83}},{"value":"/ [`RenderPipeline`] or [`BindGroup`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":17949,"byte_end":17989,"line_start":548,"line_end":548,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":878},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18432,"byte_end":18439,"line_start":562,"line_end":562,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::Sampler","value":"Sampler {  }","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":880}],"decl_id":null,"docs":" Handle to a sampler.","sig":null,"attributes":[{"value":"/ Handle to a sampler.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18112,"byte_end":18136,"line_start":556,"line_end":556,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18137,"byte_end":18140,"line_start":557,"line_end":557,"column_start":1,"column_end":4}},{"value":"/ A `Sampler` object defines how a pipeline will sample from a [`TextureView`]. Samplers define","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18141,"byte_end":18238,"line_start":558,"line_end":558,"column_start":1,"column_end":98}},{"value":"/ image filters (including anisotropy) and address (wrapping) modes, among other things. See","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18239,"byte_end":18333,"line_start":559,"line_end":559,"column_start":1,"column_end":95}},{"value":"/ the documentation for [`SamplerDescriptor`] for more information.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18334,"byte_end":18403,"line_start":560,"line_end":560,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":883},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18923,"byte_end":18930,"line_start":580,"line_end":580,"column_start":12,"column_end":19},"name":"Surface","qualname":"::Surface","value":"Surface {  }","parent":null,"children":[{"krate":0,"index":884}],"decl_id":null,"docs":" Handle to a presentable surface.","sig":null,"attributes":[{"value":"/ Handle to a presentable surface.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18652,"byte_end":18688,"line_start":575,"line_end":575,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18689,"byte_end":18692,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ A `Surface` represents a platform-specific surface (e.g. a window) onto which rendered images may","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18693,"byte_end":18794,"line_start":577,"line_end":577,"column_start":1,"column_end":102}},{"value":"/ be presented. A `Surface` may be created with the unsafe function [`Instance::create_surface`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18795,"byte_end":18894,"line_start":578,"line_end":578,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":887},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19200,"byte_end":19209,"line_start":589,"line_end":589,"column_start":12,"column_end":21},"name":"SwapChain","qualname":"::SwapChain","value":"SwapChain {  }","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"decl_id":null,"docs":" Handle to a swap chain.","sig":null,"attributes":[{"value":"/ Handle to a swap chain.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18971,"byte_end":18998,"line_start":584,"line_end":584,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18999,"byte_end":19002,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ A `SwapChain` represents the image or series of images that will be presented to a [`Surface`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19003,"byte_end":19102,"line_start":586,"line_end":586,"column_start":1,"column_end":100}},{"value":"/ A `SwapChain` may be created with [`Device::create_swap_chain`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19103,"byte_end":19171,"line_start":587,"line_end":587,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19728,"byte_end":19743,"line_start":601,"line_end":601,"column_start":12,"column_end":27},"name":"BindGroupLayout","qualname":"::BindGroupLayout","value":"BindGroupLayout {  }","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894}],"decl_id":null,"docs":" Handle to a binding group layout.","sig":null,"attributes":[{"value":"/ Handle to a binding group layout.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19273,"byte_end":19310,"line_start":594,"line_end":594,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19311,"byte_end":19314,"line_start":595,"line_end":595,"column_start":1,"column_end":4}},{"value":"/ A `BindGroupLayout` is a handle to the GPU-side layout of a binding group. It can be used to","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19315,"byte_end":19411,"line_start":596,"line_end":596,"column_start":1,"column_end":97}},{"value":"/ create a [`BindGroupDescriptor`] object, which in turn can be used to create a [`BindGroup`]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19412,"byte_end":19508,"line_start":597,"line_end":597,"column_start":1,"column_end":97}},{"value":"/ object with [`Device::create_bind_group`]. A series of `BindGroupLayout`s can also be used to","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19509,"byte_end":19606,"line_start":598,"line_end":598,"column_start":1,"column_end":98}},{"value":"/ create a [`PipelineLayoutDescriptor`], which can be used to create a [`PipelineLayout`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19607,"byte_end":19699,"line_start":599,"line_end":599,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":897},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20376,"byte_end":20385,"line_start":621,"line_end":621,"column_start":12,"column_end":21},"name":"BindGroup","qualname":"::BindGroup","value":"BindGroup {  }","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"decl_id":null,"docs":" Handle to a binding group.","sig":null,"attributes":[{"value":"/ Handle to a binding group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19982,"byte_end":20012,"line_start":614,"line_end":614,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20013,"byte_end":20016,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ A `BindGroup` represents the set of resources bound to the bindings described by a","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20017,"byte_end":20103,"line_start":616,"line_end":616,"column_start":1,"column_end":87}},{"value":"/ [`BindGroupLayout`]. It can be created with [`Device::create_bind_group`]. A `BindGroup` can","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20104,"byte_end":20200,"line_start":617,"line_end":617,"column_start":1,"column_end":97}},{"value":"/ be bound to a particular [`RenderPass`] with [`RenderPass::set_bind_group`], or to a","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20201,"byte_end":20289,"line_start":618,"line_end":618,"column_start":1,"column_end":89}},{"value":"/ [`ComputePass`] with [`ComputePass::set_bind_group`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20290,"byte_end":20347,"line_start":619,"line_end":619,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":902},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20914,"byte_end":20926,"line_start":640,"line_end":640,"column_start":12,"column_end":24},"name":"ShaderModule","qualname":"::ShaderModule","value":"ShaderModule {  }","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"decl_id":null,"docs":" Handle to a compiled shader module.","sig":null,"attributes":[{"value":"/ Handle to a compiled shader module.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20605,"byte_end":20644,"line_start":634,"line_end":634,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20645,"byte_end":20648,"line_start":635,"line_end":635,"column_start":1,"column_end":4}},{"value":"/ A `ShaderModule` represents a compiled shader module on the GPU. It can be created by passing","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20649,"byte_end":20746,"line_start":636,"line_end":636,"column_start":1,"column_end":98}},{"value":"/ valid SPIR-V source code to [`Device::create_shader_module`]. Shader modules are used to define","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20747,"byte_end":20846,"line_start":637,"line_end":637,"column_start":1,"column_end":100}},{"value":"/ programmable stages of a pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20847,"byte_end":20885,"line_start":638,"line_end":638,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":539},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21428,"byte_end":21433,"line_start":659,"line_end":659,"column_start":5,"column_end":10},"name":"SpirV","qualname":"::ShaderModuleSource::SpirV","value":"ShaderModuleSource::SpirV(Cow)","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" SPIR-V module represented as a slice of words.","sig":null,"attributes":[{"value":"/ SPIR-V module represented as a slice of words.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21224,"byte_end":21274,"line_start":655,"line_end":655,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21279,"byte_end":21282,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ wgpu will attempt to parse and validate it, but the original binary","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21287,"byte_end":21358,"line_start":657,"line_end":657,"column_start":5,"column_end":76}},{"value":"/ is passed to `gfx-rs` and `spirv_cross` for translation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21363,"byte_end":21423,"line_start":658,"line_end":658,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":542},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21697,"byte_end":21701,"line_start":666,"line_end":666,"column_start":5,"column_end":9},"name":"Wgsl","qualname":"::ShaderModuleSource::Wgsl","value":"ShaderModuleSource::Wgsl(Cow)","parent":{"krate":0,"index":537},"children":[],"decl_id":null,"docs":" WGSL module as a string slice.","sig":null,"attributes":[{"value":"/ WGSL module as a string slice.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21455,"byte_end":21489,"line_start":660,"line_end":660,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21494,"byte_end":21497,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ wgpu-rs will parse it and use for validation. It will attempt","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21502,"byte_end":21567,"line_start":662,"line_end":662,"column_start":5,"column_end":70}},{"value":"/ to build a SPIR-V module internally and panic otherwise.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21572,"byte_end":21632,"line_start":663,"line_end":663,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21637,"byte_end":21640,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ Note: WGSL is not yet supported on the Web.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21645,"byte_end":21692,"line_start":665,"line_end":665,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":537},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21195,"byte_end":21213,"line_start":654,"line_end":654,"column_start":10,"column_end":28},"name":"ShaderModuleSource","qualname":"::ShaderModuleSource","value":"pub enum ShaderModuleSource<'a> {\n\n    /// SPIR-V module represented as a slice of words.\n    ///\n    /// wgpu will attempt to parse and validate it, but the original binary\n    /// is passed to `gfx-rs` and `spirv_cross` for translation.\n    SpirV(Cow),\n\n    /// WGSL module as a string slice.\n    ///\n    /// wgpu-rs will parse it and use for validation. It will attempt\n    /// to build a SPIR-V module internally and panic otherwise.\n    ///\n    /// Note: WGSL is not yet supported on the Web.\n    Wgsl(Cow),\n}","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":542}],"decl_id":null,"docs":" Source of a shader module.\n","sig":null,"attributes":[{"value":"/ Source of a shader module.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21155,"byte_end":21185,"line_start":653,"line_end":653,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":907},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21869,"byte_end":21883,"line_start":673,"line_end":673,"column_start":12,"column_end":26},"name":"PipelineLayout","qualname":"::PipelineLayout","value":"PipelineLayout {  }","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"decl_id":null,"docs":" Handle to a pipeline layout.","sig":null,"attributes":[{"value":"/ Handle to a pipeline layout.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21720,"byte_end":21752,"line_start":669,"line_end":669,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21753,"byte_end":21756,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayout` object describes the available binding groups of a pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21757,"byte_end":21840,"line_start":671,"line_end":671,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":912},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22391,"byte_end":22405,"line_start":691,"line_end":691,"column_start":12,"column_end":26},"name":"RenderPipeline","qualname":"::RenderPipeline","value":"RenderPipeline {  }","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914}],"decl_id":null,"docs":" Handle to a rendering (graphics) pipeline.","sig":null,"attributes":[{"value":"/ Handle to a rendering (graphics) pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22118,"byte_end":22164,"line_start":686,"line_end":686,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22165,"byte_end":22168,"line_start":687,"line_end":687,"column_start":1,"column_end":4}},{"value":"/ A `RenderPipeline` object represents a graphics pipeline and its stages, bindings, vertex","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22169,"byte_end":22262,"line_start":688,"line_end":688,"column_start":1,"column_end":94}},{"value":"/ buffers and targets. A `RenderPipeline` may be created with [`Device::create_render_pipeline`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22263,"byte_end":22362,"line_start":689,"line_end":689,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22748,"byte_end":22769,"line_start":706,"line_end":706,"column_start":12,"column_end":33},"name":"get_bind_group_layout","qualname":"<RenderPipeline>::get_bind_group_layout","value":"pub fn get_bind_group_layout(&Self, u32) -> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Get an object representing the bind group layout at a given index.\n","sig":null,"attributes":[{"value":"/ Get an object representing the bind group layout at a given index.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22666,"byte_end":22736,"line_start":705,"line_end":705,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":917},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23281,"byte_end":23296,"line_start":722,"line_end":722,"column_start":12,"column_end":27},"name":"ComputePipeline","qualname":"::ComputePipeline","value":"ComputePipeline {  }","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919}],"decl_id":null,"docs":" Handle to a compute pipeline.","sig":null,"attributes":[{"value":"/ Handle to a compute pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23044,"byte_end":23077,"line_start":717,"line_end":717,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23078,"byte_end":23081,"line_start":718,"line_end":718,"column_start":1,"column_end":4}},{"value":"/ A `ComputePipeline` object represents a compute pipeline and its single shader stage.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23082,"byte_end":23171,"line_start":719,"line_end":719,"column_start":1,"column_end":90}},{"value":"/ A `ComputePipeline` may be created with [`Device::create_compute_pipeline`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23172,"byte_end":23252,"line_start":720,"line_end":720,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23643,"byte_end":23664,"line_start":737,"line_end":737,"column_start":12,"column_end":33},"name":"get_bind_group_layout","qualname":"<ComputePipeline>::get_bind_group_layout","value":"pub fn get_bind_group_layout(&Self, u32) -> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Get an object representing the bind group layout at a given index.\n","sig":null,"attributes":[{"value":"/ Get an object representing the bind group layout at a given index.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23561,"byte_end":23631,"line_start":736,"line_end":736,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24286,"byte_end":24299,"line_start":754,"line_end":754,"column_start":12,"column_end":25},"name":"CommandBuffer","qualname":"::CommandBuffer","value":"CommandBuffer {  }","parent":null,"children":[{"krate":0,"index":923},{"krate":0,"index":924}],"decl_id":null,"docs":" Handle to a command buffer on the GPU.","sig":null,"attributes":[{"value":"/ Handle to a command buffer on the GPU.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23940,"byte_end":23982,"line_start":748,"line_end":748,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23983,"byte_end":23986,"line_start":749,"line_end":749,"column_start":1,"column_end":4}},{"value":"/ A `CommandBuffer` represents a complete sequence of commands that may be submitted to a command","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23987,"byte_end":24086,"line_start":750,"line_end":750,"column_start":1,"column_end":100}},{"value":"/ queue with [`Queue::submit`]. A `CommandBuffer` is obtained by recording a series of commands to","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24087,"byte_end":24187,"line_start":751,"line_end":751,"column_start":1,"column_end":101}},{"value":"/ a [`CommandEncoder`] and then calling [`CommandEncoder::finish`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24188,"byte_end":24257,"line_start":752,"line_end":752,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":927},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24970,"byte_end":24984,"line_start":777,"line_end":777,"column_start":12,"column_end":26},"name":"CommandEncoder","qualname":"::CommandEncoder","value":"CommandEncoder {  }","parent":null,"children":[{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"decl_id":null,"docs":" Encodes a series of GPU operations.","sig":null,"attributes":[{"value":"/ Encodes a series of GPU operations.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24595,"byte_end":24634,"line_start":769,"line_end":769,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24635,"byte_end":24638,"line_start":770,"line_end":770,"column_start":1,"column_end":4}},{"value":"/ A command encoder can record [`RenderPass`]es, [`ComputePass`]es,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24639,"byte_end":24708,"line_start":771,"line_end":771,"column_start":1,"column_end":70}},{"value":"/ and transfer operations between driver-managed resources like [`Buffer`]s and [`Texture`]s.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24709,"byte_end":24804,"line_start":772,"line_end":772,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24805,"byte_end":24808,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ When finished recording, call [`CommandEncoder::finish`] to obtain a [`CommandBuffer`] which may","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24809,"byte_end":24909,"line_start":774,"line_end":774,"column_start":1,"column_end":101}},{"value":"/ be submitted for execution.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24910,"byte_end":24941,"line_start":775,"line_end":775,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":933},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25275,"byte_end":25285,"line_start":787,"line_end":787,"column_start":12,"column_end":22},"name":"RenderPass","qualname":"::RenderPass","value":"RenderPass {  }","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936}],"decl_id":null,"docs":" In-progress recording of a render pass.\n","sig":null,"attributes":[{"value":"/ In-progress recording of a render pass.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25203,"byte_end":25246,"line_start":785,"line_end":785,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":940},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25442,"byte_end":25453,"line_start":794,"line_end":794,"column_start":12,"column_end":23},"name":"ComputePass","qualname":"::ComputePass","value":"ComputePass {  }","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943}],"decl_id":null,"docs":" In-progress recording of a compute pass.\n","sig":null,"attributes":[{"value":"/ In-progress recording of a compute pass.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25369,"byte_end":25413,"line_start":792,"line_end":792,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":947},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25932,"byte_end":25951,"line_start":806,"line_end":806,"column_start":12,"column_end":31},"name":"RenderBundleEncoder","qualname":"::RenderBundleEncoder","value":"RenderBundleEncoder {  }","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952}],"decl_id":null,"docs":" Encodes a series of GPU operations into a reusable \"render bundle\".","sig":null,"attributes":[{"value":"/ Encodes a series of GPU operations into a reusable \"render bundle\".","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25538,"byte_end":25609,"line_start":799,"line_end":799,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25610,"byte_end":25613,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ It only supports a handful of render commands, but it makes them reusable. [`RenderBundle`]s","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25614,"byte_end":25710,"line_start":801,"line_end":801,"column_start":1,"column_end":97}},{"value":"/ can be executed onto a [`CommandEncoder`] using [`RenderPass::execute_bundles`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25711,"byte_end":25795,"line_start":802,"line_end":802,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25796,"byte_end":25799,"line_start":803,"line_end":803,"column_start":1,"column_end":4}},{"value":"/ Executing a [`RenderBundle`] is often more efficient then issuing the underlying commands manually.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":25800,"byte_end":25903,"line_start":804,"line_end":804,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":956},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26578,"byte_end":26590,"line_start":822,"line_end":822,"column_start":12,"column_end":24},"name":"RenderBundle","qualname":"::RenderBundle","value":"RenderBundle {  }","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958}],"decl_id":null,"docs":" Pre-prepared reusable bundle of GPU operations.","sig":null,"attributes":[{"value":"/ Pre-prepared reusable bundle of GPU operations.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26204,"byte_end":26255,"line_start":815,"line_end":815,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26256,"byte_end":26259,"line_start":816,"line_end":816,"column_start":1,"column_end":4}},{"value":"/ It only supports a handful of render commands, but it makes them reusable. [`RenderBundle`]s","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26260,"byte_end":26356,"line_start":817,"line_end":817,"column_start":1,"column_end":97}},{"value":"/ can be executed onto a [`CommandEncoder`] using [`RenderPass::execute_bundles`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26357,"byte_end":26441,"line_start":818,"line_end":818,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26442,"byte_end":26445,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ Executing a [`RenderBundle`] is often more efficient then issuing the underlying commands manually.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26446,"byte_end":26549,"line_start":820,"line_end":820,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":961},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27073,"byte_end":27078,"line_start":840,"line_end":840,"column_start":12,"column_end":17},"name":"Queue","qualname":"::Queue","value":"Queue {  }","parent":null,"children":[{"krate":0,"index":962},{"krate":0,"index":963}],"decl_id":null,"docs":" Handle to a command queue on a device.","sig":null,"attributes":[{"value":"/ Handle to a command queue on a device.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26819,"byte_end":26861,"line_start":835,"line_end":835,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26862,"byte_end":26865,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ A `Queue` executes recorded [`CommandBuffer`] objects and provides convenience methods","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26866,"byte_end":26956,"line_start":837,"line_end":837,"column_start":1,"column_end":91}},{"value":"/ for writing to [buffers](Queue::write_buffer) and [textures](Queue::write_texture).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26957,"byte_end":27044,"line_start":838,"line_end":838,"column_start":1,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":968},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27455,"byte_end":27461,"line_start":853,"line_end":853,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::BindingResource::Buffer","value":"BindingResource::Buffer(BufferSlice)","parent":{"krate":0,"index":966},"children":[],"decl_id":null,"docs":" Binding is backed by a buffer.","sig":null,"attributes":[{"value":"/ Binding is backed by a buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27261,"byte_end":27295,"line_start":849,"line_end":849,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27300,"byte_end":27303,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`BindingType::UniformBuffer`] and [`BindingType::StorageBuffer`]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27308,"byte_end":27392,"line_start":851,"line_end":851,"column_start":5,"column_end":89}},{"value":"/ with [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27397,"byte_end":27450,"line_start":852,"line_end":852,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":971},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27620,"byte_end":27627,"line_start":857,"line_end":857,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::BindingResource::Sampler","value":"BindingResource::Sampler(&'a Sampler)","parent":{"krate":0,"index":966},"children":[],"decl_id":null,"docs":" Binding is a sampler.","sig":null,"attributes":[{"value":"/ Binding is a sampler.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27484,"byte_end":27509,"line_start":854,"line_end":854,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27514,"byte_end":27517,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`BindingType::Sampler`] with [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27522,"byte_end":27615,"line_start":856,"line_end":856,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":974},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27843,"byte_end":27854,"line_start":862,"line_end":862,"column_start":5,"column_end":16},"name":"TextureView","qualname":"::BindingResource::TextureView","value":"BindingResource::TextureView(&'a TextureView)","parent":{"krate":0,"index":966},"children":[],"decl_id":null,"docs":" Binding is backed by a texture.","sig":null,"attributes":[{"value":"/ Binding is backed by a texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27646,"byte_end":27681,"line_start":858,"line_end":858,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27686,"byte_end":27689,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`BindingType::SampledTexture`] and [`BindingType::StorageTexture`] with","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27694,"byte_end":27785,"line_start":860,"line_end":860,"column_start":5,"column_end":96}},{"value":"/ [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27790,"byte_end":27838,"line_start":861,"line_end":861,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":977},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28184,"byte_end":28200,"line_start":869,"line_end":869,"column_start":5,"column_end":21},"name":"TextureViewArray","qualname":"::BindingResource::TextureViewArray","value":"BindingResource::TextureViewArray(&'a [TextureView])","parent":{"krate":0,"index":966},"children":[],"decl_id":null,"docs":" Binding is backed by an array of textures.","sig":null,"attributes":[{"value":"/ Binding is backed by an array of textures.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27877,"byte_end":27923,"line_start":863,"line_end":863,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27928,"byte_end":27931,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ [`Features::SAMPLED_TEXTURE_BINDING_ARRAY`] must be supported to use this feature.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27936,"byte_end":28022,"line_start":865,"line_end":865,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28027,"byte_end":28030,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`BindingType::SampledTexture`] and [`BindingType::StorageTexture`] with","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28035,"byte_end":28126,"line_start":867,"line_end":867,"column_start":5,"column_end":96}},{"value":"/ [`BindGroupLayoutEntry::count`] set to Some.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28131,"byte_end":28179,"line_start":868,"line_end":868,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":966},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27235,"byte_end":27250,"line_start":848,"line_end":848,"column_start":10,"column_end":25},"name":"BindingResource","qualname":"::BindingResource","value":"pub enum BindingResource<'a> {\n\n    /// Binding is backed by a buffer.\n    ///\n    /// Corresponds to [`BindingType::UniformBuffer`] and [`BindingType::StorageBuffer`]\n    /// with [`BindGroupLayoutEntry::count`] set to None.\n    Buffer(BufferSlice),\n\n    /// Binding is a sampler.\n    ///\n    /// Corresponds to [`BindingType::Sampler`] with [`BindGroupLayoutEntry::count`] set to None.\n    Sampler(&'a Sampler),\n\n    /// Binding is backed by a texture.\n    ///\n    /// Corresponds to [`BindingType::SampledTexture`] and [`BindingType::StorageTexture`] with\n    /// [`BindGroupLayoutEntry::count`] set to None.\n    TextureView(&'a TextureView),\n\n    /// Binding is backed by an array of textures.\n    ///\n    /// [`Features::SAMPLED_TEXTURE_BINDING_ARRAY`] must be supported to use this feature.\n    ///\n    /// Corresponds to [`BindingType::SampledTexture`] and [`BindingType::StorageTexture`] with\n    /// [`BindGroupLayoutEntry::count`] set to Some.\n    TextureViewArray(&'a [TextureView]),\n}","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977}],"decl_id":null,"docs":" Resource that can be bound to a pipeline.\n","sig":null,"attributes":[{"value":"/ Resource that can be bound to a pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27138,"byte_end":27183,"line_start":845,"line_end":845,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":27184,"byte_end":27201,"line_start":846,"line_end":846,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":988},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28521,"byte_end":28526,"line_start":878,"line_end":878,"column_start":5,"column_end":10},"name":"Clear","qualname":"::LoadOp::Clear","value":"LoadOp::Clear(V)","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Clear with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear with a specified value.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28483,"byte_end":28516,"line_start":877,"line_end":877,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":991},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28561,"byte_end":28565,"line_start":880,"line_end":880,"column_start":5,"column_end":9},"name":"Load","qualname":"::LoadOp::Load","value":"LoadOp::Load","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Load from memory.\n","sig":null,"attributes":[{"value":"/ Load from memory.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28535,"byte_end":28556,"line_start":879,"line_end":879,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":986},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28467,"byte_end":28473,"line_start":876,"line_end":876,"column_start":10,"column_end":16},"name":"LoadOp","qualname":"::LoadOp","value":"pub enum LoadOp<V> {\n\n    /// Clear with a specified value.\n    Clear(V),\n\n    /// Load from memory.\n    Load,\n}","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":991}],"decl_id":null,"docs":" Operation to perform to the output attachment at the start of a renderpass.\n","sig":null,"attributes":[{"value":"/ Operation to perform to the output attachment at the start of a renderpass.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28224,"byte_end":28303,"line_start":872,"line_end":872,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28916,"byte_end":28926,"line_start":893,"line_end":893,"column_start":12,"column_end":22},"name":"Operations","qualname":"::Operations","value":"Operations { load, store }","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"decl_id":null,"docs":" Pair of load and store operations for an attachment aspect.\n","sig":null,"attributes":[{"value":"/ Pair of load and store operations for an attachment aspect.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28687,"byte_end":28750,"line_start":889,"line_end":889,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28997,"byte_end":29001,"line_start":895,"line_end":895,"column_start":9,"column_end":13},"name":"load","qualname":"::Operations::load","value":"LoadOp<V>","parent":{"krate":0,"index":1016},"children":[],"decl_id":null,"docs":" How data should be read through this attachment.\n","sig":null,"attributes":[{"value":"/ How data should be read through this attachment.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28936,"byte_end":28988,"line_start":894,"line_end":894,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29087,"byte_end":29092,"line_start":897,"line_end":897,"column_start":9,"column_end":14},"name":"store","qualname":"::Operations::store","value":"bool","parent":{"krate":0,"index":1016},"children":[],"decl_id":null,"docs":" Whether data will be written to through this attachment.\n","sig":null,"attributes":[{"value":"/ Whether data will be written to through this attachment.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29018,"byte_end":29078,"line_start":896,"line_end":896,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29361,"byte_end":29396,"line_start":911,"line_end":911,"column_start":12,"column_end":47},"name":"RenderPassColorAttachmentDescriptor","qualname":"::RenderPassColorAttachmentDescriptor","value":"RenderPassColorAttachmentDescriptor { attachment, resolve_target, ops }","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047}],"decl_id":null,"docs":" Describes a color attachment to a [`RenderPass`].\n","sig":null,"attributes":[{"value":"/ Describes a color attachment to a [`RenderPass`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29272,"byte_end":29325,"line_start":909,"line_end":909,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29453,"byte_end":29463,"line_start":913,"line_end":913,"column_start":9,"column_end":19},"name":"attachment","qualname":"::RenderPassColorAttachmentDescriptor::attachment","value":"&'a TextureView","parent":{"krate":0,"index":1043},"children":[],"decl_id":null,"docs":" The view to use as an attachment.\n","sig":null,"attributes":[{"value":"/ The view to use as an attachment.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29407,"byte_end":29444,"line_start":912,"line_end":912,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29571,"byte_end":29585,"line_start":915,"line_end":915,"column_start":9,"column_end":23},"name":"resolve_target","qualname":"::RenderPassColorAttachmentDescriptor::resolve_target","value":"std::option::Option<&'a TextureView>","parent":{"krate":0,"index":1043},"children":[],"decl_id":null,"docs":" The view that will receive the resolved output if multisampling is used.\n","sig":null,"attributes":[{"value":"/ The view that will receive the resolved output if multisampling is used.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29486,"byte_end":29562,"line_start":914,"line_end":914,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29688,"byte_end":29691,"line_start":917,"line_end":917,"column_start":9,"column_end":12},"name":"ops","qualname":"::RenderPassColorAttachmentDescriptor::ops","value":"Operations<wgpu_types::Color>","parent":{"krate":0,"index":1043},"children":[],"decl_id":null,"docs":" What operations will be performed on this color attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on this color attachment.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29616,"byte_end":29679,"line_start":916,"line_end":916,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29812,"byte_end":29854,"line_start":922,"line_end":922,"column_start":12,"column_end":54},"name":"RenderPassDepthStencilAttachmentDescriptor","qualname":"::RenderPassDepthStencilAttachmentDescriptor","value":"RenderPassDepthStencilAttachmentDescriptor { attachment, depth_ops, stencil_ops }","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058}],"decl_id":null,"docs":" Describes a depth/stencil attachment to a [`RenderPass`].\n","sig":null,"attributes":[{"value":"/ Describes a depth/stencil attachment to a [`RenderPass`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29715,"byte_end":29776,"line_start":920,"line_end":920,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29911,"byte_end":29921,"line_start":924,"line_end":924,"column_start":9,"column_end":19},"name":"attachment","qualname":"::RenderPassDepthStencilAttachmentDescriptor::attachment","value":"&'a TextureView","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" The view to use as an attachment.\n","sig":null,"attributes":[{"value":"/ The view to use as an attachment.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29865,"byte_end":29902,"line_start":923,"line_end":923,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30027,"byte_end":30036,"line_start":926,"line_end":926,"column_start":9,"column_end":18},"name":"depth_ops","qualname":"::RenderPassDepthStencilAttachmentDescriptor::depth_ops","value":"std::option::Option<Operations<f32>>","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" What operations will be performed on the depth part of the attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on the depth part of the attachment.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29944,"byte_end":30018,"line_start":925,"line_end":925,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30152,"byte_end":30163,"line_start":928,"line_end":928,"column_start":9,"column_end":20},"name":"stencil_ops","qualname":"::RenderPassDepthStencilAttachmentDescriptor::stencil_ops","value":"std::option::Option<Operations<u32>>","parent":{"krate":0,"index":1054},"children":[],"decl_id":null,"docs":" What operations will be performed on the stencil part of the attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on the stencil part of the attachment.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30067,"byte_end":30143,"line_start":927,"line_end":927,"column_start":5,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":566},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30414,"byte_end":30435,"line_start":935,"line_end":935,"column_start":10,"column_end":31},"name":"RequestAdapterOptions","qualname":"::RequestAdapterOptions","value":"RequestAdapterOptionsBase<&'a Surface>","parent":null,"children":[],"decl_id":null,"docs":" Additional information required when requesting an adapter.\n","sig":null,"attributes":[{"value":"/ Additional information required when requesting an adapter.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30341,"byte_end":30404,"line_start":934,"line_end":934,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30567,"byte_end":30583,"line_start":939,"line_end":939,"column_start":12,"column_end":28},"name":"BufferDescriptor","qualname":"::BufferDescriptor","value":"BufferDescriptor { label, size, usage, mapped_at_creation }","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"decl_id":null,"docs":" Describes a [`Buffer`].\n","sig":null,"attributes":[{"value":"/ Describes a [`Buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30483,"byte_end":30510,"line_start":937,"line_end":937,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30696,"byte_end":30701,"line_start":941,"line_end":941,"column_start":9,"column_end":14},"name":"label","qualname":"::BufferDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Debug label of a buffer. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of a buffer. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30594,"byte_end":30687,"line_start":940,"line_end":940,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30754,"byte_end":30758,"line_start":943,"line_end":943,"column_start":9,"column_end":13},"name":"size","qualname":"::BufferDescriptor::size","value":"u64","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Size of a buffer.\n","sig":null,"attributes":[{"value":"/ Size of a buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30724,"byte_end":30745,"line_start":942,"line_end":942,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30905,"byte_end":30910,"line_start":946,"line_end":946,"column_start":9,"column_end":14},"name":"usage","qualname":"::BufferDescriptor::usage","value":"wgpu_types::BufferUsage","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Usages of a buffer. If the buffer is used in any way that isn't specified here, the operation\n will panic.\n","sig":null,"attributes":[{"value":"/ Usages of a buffer. If the buffer is used in any way that isn't specified here, the operation","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30779,"byte_end":30876,"line_start":944,"line_end":944,"column_start":5,"column_end":102}},{"value":"/ will panic.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30881,"byte_end":30896,"line_start":945,"line_end":945,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31141,"byte_end":31159,"line_start":949,"line_end":949,"column_start":9,"column_end":27},"name":"mapped_at_creation","qualname":"::BufferDescriptor::mapped_at_creation","value":"bool","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":" Allows a buffer to be mapped immediately after they are made. It does not have to be [`BufferUsage::MAP_READ`] or\n [`BufferUsage::MAP_WRITE`], all buffers are allowed to be mapped at creation.\n","sig":null,"attributes":[{"value":"/ Allows a buffer to be mapped immediately after they are made. It does not have to be [`BufferUsage::MAP_READ`] or","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":30929,"byte_end":31046,"line_start":947,"line_end":947,"column_start":5,"column_end":122}},{"value":"/ [`BufferUsage::MAP_WRITE`], all buffers are allowed to be mapped at creation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31051,"byte_end":31132,"line_start":948,"line_end":948,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31271,"byte_end":31295,"line_start":954,"line_end":954,"column_start":12,"column_end":36},"name":"CommandEncoderDescriptor","qualname":"::CommandEncoderDescriptor","value":"CommandEncoderDescriptor { label }","parent":null,"children":[{"krate":0,"index":1094}],"decl_id":null,"docs":" Describes a [`CommandEncoder`].\n","sig":null,"attributes":[{"value":"/ Describes a [`CommandEncoder`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31170,"byte_end":31205,"line_start":952,"line_end":952,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31420,"byte_end":31425,"line_start":956,"line_end":956,"column_start":9,"column_end":14},"name":"label","qualname":"::CommandEncoderDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1092},"children":[],"decl_id":null,"docs":" Debug label for the command encoder. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label for the command encoder. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31306,"byte_end":31411,"line_start":955,"line_end":955,"column_start":5,"column_end":110}}]},{"kind":"Struct","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31546,"byte_end":31568,"line_start":961,"line_end":961,"column_start":12,"column_end":34},"name":"RenderBundleDescriptor","qualname":"::RenderBundleDescriptor","value":"RenderBundleDescriptor { label }","parent":null,"children":[{"krate":0,"index":1121}],"decl_id":null,"docs":" Describes a [`RenderBundle`].\n","sig":null,"attributes":[{"value":"/ Describes a [`RenderBundle`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31447,"byte_end":31480,"line_start":959,"line_end":959,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31698,"byte_end":31703,"line_start":963,"line_end":963,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderBundleDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1119},"children":[],"decl_id":null,"docs":" Debug label of the render bundle encoder. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the render bundle encoder. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31579,"byte_end":31689,"line_start":962,"line_end":962,"column_start":5,"column_end":115}}]},{"kind":"Struct","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31810,"byte_end":31827,"line_start":968,"line_end":968,"column_start":12,"column_end":29},"name":"TextureDescriptor","qualname":"::TextureDescriptor","value":"TextureDescriptor { label, size, mip_level_count, sample_count, dimension, format, usage }","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154}],"decl_id":null,"docs":" Describes a [`Texture`].\n","sig":null,"attributes":[{"value":"/ Describes a [`Texture`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31725,"byte_end":31753,"line_start":966,"line_end":966,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31943,"byte_end":31948,"line_start":970,"line_end":970,"column_start":9,"column_end":14},"name":"label","qualname":"::TextureDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1146},"children":[],"decl_id":null,"docs":" Debug label of the texture. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the texture. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31838,"byte_end":31934,"line_start":969,"line_end":969,"column_start":5,"column_end":101}}]},{"kind":"Field","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32137,"byte_end":32141,"line_start":973,"line_end":973,"column_start":9,"column_end":13},"name":"size","qualname":"::TextureDescriptor::size","value":"wgpu_types::Extent3d","parent":{"krate":0,"index":1146},"children":[],"decl_id":null,"docs":" Size of the texture. For a regular 1D/2D texture, the unused sizes will be 1. For 2DArray textures, Z is the\n number of 2D textures in that array.\n","sig":null,"attributes":[{"value":"/ Size of the texture. For a regular 1D/2D texture, the unused sizes will be 1. For 2DArray textures, Z is the","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":31971,"byte_end":32083,"line_start":971,"line_end":971,"column_start":5,"column_end":117}},{"value":"/ number of 2D textures in that array.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32088,"byte_end":32128,"line_start":972,"line_end":972,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32241,"byte_end":32256,"line_start":975,"line_end":975,"column_start":9,"column_end":24},"name":"mip_level_count","qualname":"::TextureDescriptor::mip_level_count","value":"u32","parent":{"krate":0,"index":1146},"children":[],"decl_id":null,"docs":" Mip count of texture. For a texture with no extra mips, this must be 1.\n","sig":null,"attributes":[{"value":"/ Mip count of texture. For a texture with no extra mips, this must be 1.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32157,"byte_end":32232,"line_start":974,"line_end":974,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32399,"byte_end":32411,"line_start":977,"line_end":977,"column_start":9,"column_end":21},"name":"sample_count","qualname":"::TextureDescriptor::sample_count","value":"u32","parent":{"krate":0,"index":1146},"children":[],"decl_id":null,"docs":" Sample count of texture. If this is not 1, texture must have [`BindingType::SampledTexture::multisampled`] set to true.\n","sig":null,"attributes":[{"value":"/ Sample count of texture. If this is not 1, texture must have [`BindingType::SampledTexture::multisampled`] set to true.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32267,"byte_end":32390,"line_start":976,"line_end":976,"column_start":5,"column_end":128}}]},{"kind":"Field","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32461,"byte_end":32470,"line_start":979,"line_end":979,"column_start":9,"column_end":18},"name":"dimension","qualname":"::TextureDescriptor::dimension","value":"wgpu_types::TextureDimension","parent":{"krate":0,"index":1146},"children":[],"decl_id":null,"docs":" Dimensions of the texture.\n","sig":null,"attributes":[{"value":"/ Dimensions of the texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32422,"byte_end":32452,"line_start":978,"line_end":978,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32529,"byte_end":32535,"line_start":981,"line_end":981,"column_start":9,"column_end":15},"name":"format","qualname":"::TextureDescriptor::format","value":"wgpu_types::TextureFormat","parent":{"krate":0,"index":1146},"children":[],"decl_id":null,"docs":" Format of the texture.\n","sig":null,"attributes":[{"value":"/ Format of the texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32494,"byte_end":32520,"line_start":980,"line_end":980,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32648,"byte_end":32653,"line_start":983,"line_end":983,"column_start":9,"column_end":14},"name":"usage","qualname":"::TextureDescriptor::usage","value":"wgpu_types::TextureUsage","parent":{"krate":0,"index":1146},"children":[],"decl_id":null,"docs":" Allowed usages of the texture. If used in other ways, the operation will panic.\n","sig":null,"attributes":[{"value":"/ Allowed usages of the texture. If used in other ways, the operation will panic.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32556,"byte_end":32639,"line_start":982,"line_end":982,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32760,"byte_end":32781,"line_start":988,"line_end":988,"column_start":12,"column_end":33},"name":"TextureViewDescriptor","qualname":"::TextureViewDescriptor","value":"TextureViewDescriptor { label, format, dimension, aspect, base_mip_level, level_count, base_array_layer, array_layer_count }","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185}],"decl_id":null,"docs":" Describes a [`TextureView`].\n","sig":null,"attributes":[{"value":"/ Describes a [`TextureView`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32672,"byte_end":32704,"line_start":986,"line_end":986,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32902,"byte_end":32907,"line_start":990,"line_end":990,"column_start":9,"column_end":14},"name":"label","qualname":"::TextureViewDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Debug label of the texture view. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the texture view. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32792,"byte_end":32893,"line_start":989,"line_end":989,"column_start":5,"column_end":106}}]},{"kind":"Field","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33045,"byte_end":33051,"line_start":992,"line_end":992,"column_start":9,"column_end":15},"name":"format","qualname":"::TextureViewDescriptor::format","value":"std::option::Option<wgpu_types::TextureFormat>","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Format of the texture view. At this time, it must be the same as the underlying format of the texture.\n","sig":null,"attributes":[{"value":"/ Format of the texture view. At this time, it must be the same as the underlying format of the texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":32930,"byte_end":33036,"line_start":991,"line_end":991,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33279,"byte_end":33288,"line_start":995,"line_end":995,"column_start":9,"column_end":18},"name":"dimension","qualname":"::TextureViewDescriptor::dimension","value":"std::option::Option<wgpu_types::TextureViewDimension>","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" The dimension of the texture view. For 1D textures, this must be `1D`. For 2D textures it must be one of\n `D2`, `D2Array`, `Cube`, and `CubeArray`. For 3D textures it must be `3D`\n","sig":null,"attributes":[{"value":"/ The dimension of the texture view. For 1D textures, this must be `1D`. For 2D textures it must be one of","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33080,"byte_end":33188,"line_start":993,"line_end":993,"column_start":5,"column_end":113}},{"value":"/ `D2`, `D2Array`, `Cube`, and `CubeArray`. For 3D textures it must be `3D`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33193,"byte_end":33270,"line_start":994,"line_end":994,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33406,"byte_end":33412,"line_start":997,"line_end":997,"column_start":9,"column_end":15},"name":"aspect","qualname":"::TextureViewDescriptor::aspect","value":"wgpu_types::TextureAspect","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Aspect of the texture. Color textures must be [`TextureAspect::All`].\n","sig":null,"attributes":[{"value":"/ Aspect of the texture. Color textures must be [`TextureAspect::All`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33324,"byte_end":33397,"line_start":996,"line_end":996,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33461,"byte_end":33475,"line_start":999,"line_end":999,"column_start":9,"column_end":23},"name":"base_mip_level","qualname":"::TextureViewDescriptor::base_mip_level","value":"u32","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Base mip level.\n","sig":null,"attributes":[{"value":"/ Base mip level.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33433,"byte_end":33452,"line_start":998,"line_end":998,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33718,"byte_end":33729,"line_start":1003,"line_end":1003,"column_start":9,"column_end":20},"name":"level_count","qualname":"::TextureViewDescriptor::level_count","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Mip level count.\n If `Some(count)`, `base_mip_level + count` must be less or equal to underlying texture mip count.\n If `None`, considered to include the rest of the mipmap levels, but at least 1 in total.\n","sig":null,"attributes":[{"value":"/ Mip level count.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33486,"byte_end":33506,"line_start":1000,"line_end":1000,"column_start":5,"column_end":25}},{"value":"/ If `Some(count)`, `base_mip_level + count` must be less or equal to underlying texture mip count.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33511,"byte_end":33612,"line_start":1001,"line_end":1001,"column_start":5,"column_end":106}},{"value":"/ If `None`, considered to include the rest of the mipmap levels, but at least 1 in total.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33617,"byte_end":33709,"line_start":1002,"line_end":1002,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33785,"byte_end":33801,"line_start":1005,"line_end":1005,"column_start":9,"column_end":25},"name":"base_array_layer","qualname":"::TextureViewDescriptor::base_array_layer","value":"u32","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Base array layer.\n","sig":null,"attributes":[{"value":"/ Base array layer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33755,"byte_end":33776,"line_start":1004,"line_end":1004,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34039,"byte_end":34056,"line_start":1009,"line_end":1009,"column_start":9,"column_end":26},"name":"array_layer_count","qualname":"::TextureViewDescriptor::array_layer_count","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":1176},"children":[],"decl_id":null,"docs":" Layer count.\n If `Some(count)`, `base_array_layer + count` must be less or equal to the underlying array count.\n If `None`, considered to include the rest of the array layers, but at least 1 in total.\n","sig":null,"attributes":[{"value":"/ Layer count.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33812,"byte_end":33828,"line_start":1006,"line_end":1006,"column_start":5,"column_end":21}},{"value":"/ If `Some(count)`, `base_array_layer + count` must be less or equal to the underlying array count.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33833,"byte_end":33934,"line_start":1007,"line_end":1007,"column_start":5,"column_end":106}},{"value":"/ If `None`, considered to include the rest of the array layers, but at least 1 in total.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":33939,"byte_end":34030,"line_start":1008,"line_end":1008,"column_start":5,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34227,"byte_end":34251,"line_start":1016,"line_end":1016,"column_start":12,"column_end":36},"name":"PipelineLayoutDescriptor","qualname":"::PipelineLayoutDescriptor","value":"PipelineLayoutDescriptor { label, bind_group_layouts, push_constant_ranges }","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":1205}],"decl_id":null,"docs":" Describes a pipeline layout.","sig":null,"attributes":[{"value":"/ Describes a pipeline layout.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34081,"byte_end":34113,"line_start":1012,"line_end":1012,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34114,"byte_end":34117,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayoutDescriptor` can be used to create a pipeline layout.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34118,"byte_end":34191,"line_start":1014,"line_end":1014,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34375,"byte_end":34380,"line_start":1018,"line_end":1018,"column_start":9,"column_end":14},"name":"label","qualname":"::PipelineLayoutDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" Debug label of the pipeline layout. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline layout. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34262,"byte_end":34366,"line_start":1017,"line_end":1017,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34583,"byte_end":34601,"line_start":1021,"line_end":1021,"column_start":9,"column_end":27},"name":"bind_group_layouts","qualname":"::PipelineLayoutDescriptor::bind_group_layouts","value":"&'a [&'a BindGroupLayout]","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" Bind groups that this pipeline uses. The first entry will provide all the bindings for\n \"set = 0\", second entry will provide all the bindings for \"set = 1\" etc.\n","sig":null,"attributes":[{"value":"/ Bind groups that this pipeline uses. The first entry will provide all the bindings for","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34403,"byte_end":34493,"line_start":1019,"line_end":1019,"column_start":5,"column_end":95}},{"value":"/ \"set = 0\", second entry will provide all the bindings for \"set = 1\" etc.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34498,"byte_end":34574,"line_start":1020,"line_end":1020,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34963,"byte_end":34983,"line_start":1027,"line_end":1027,"column_start":9,"column_end":29},"name":"push_constant_ranges","qualname":"::PipelineLayoutDescriptor::push_constant_ranges","value":"&'a [wgpu_types::PushConstantRange]","parent":{"krate":0,"index":1201},"children":[],"decl_id":null,"docs":" Set of push constant ranges this pipeline uses. Each shader stage that uses push constants\n must define the range in push constant memory that corresponds to its single `layout(push_constant)`\n uniform block.","sig":null,"attributes":[{"value":"/ Set of push constant ranges this pipeline uses. Each shader stage that uses push constants","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34634,"byte_end":34728,"line_start":1022,"line_end":1022,"column_start":5,"column_end":99}},{"value":"/ must define the range in push constant memory that corresponds to its single `layout(push_constant)`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34733,"byte_end":34837,"line_start":1023,"line_end":1023,"column_start":5,"column_end":109}},{"value":"/ uniform block.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34842,"byte_end":34860,"line_start":1024,"line_end":1024,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34865,"byte_end":34868,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ If this array is non-empty, the [`Features::PUSH_CONSTANTS`] must be enabled.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":34873,"byte_end":34954,"line_start":1026,"line_end":1026,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35087,"byte_end":35104,"line_start":1032,"line_end":1032,"column_start":12,"column_end":29},"name":"SamplerDescriptor","qualname":"::SamplerDescriptor","value":"SamplerDescriptor { label, address_mode_u, address_mode_v, address_mode_w, mag_filter, min_filter, mipmap_filter, lod_min_clamp, lod_max_clamp, compare, anisotropy_clamp }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"decl_id":null,"docs":" Describes a [`Sampler`]\n","sig":null,"attributes":[{"value":"/ Describes a [`Sampler`]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35013,"byte_end":35040,"line_start":1030,"line_end":1030,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35220,"byte_end":35225,"line_start":1034,"line_end":1034,"column_start":9,"column_end":14},"name":"label","qualname":"::SamplerDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Debug label of the sampler. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the sampler. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35115,"byte_end":35211,"line_start":1033,"line_end":1033,"column_start":5,"column_end":101}}]},{"kind":"Field","id":{"krate":0,"index":1215},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35328,"byte_end":35342,"line_start":1036,"line_end":1036,"column_start":9,"column_end":23},"name":"address_mode_u","qualname":"::SamplerDescriptor::address_mode_u","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the u (i.e. x) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the u (i.e. x) direction","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35248,"byte_end":35319,"line_start":1035,"line_end":1035,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35441,"byte_end":35455,"line_start":1038,"line_end":1038,"column_start":9,"column_end":23},"name":"address_mode_v","qualname":"::SamplerDescriptor::address_mode_v","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the v (i.e. y) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the v (i.e. y) direction","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35361,"byte_end":35432,"line_start":1037,"line_end":1037,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35554,"byte_end":35568,"line_start":1040,"line_end":1040,"column_start":9,"column_end":23},"name":"address_mode_w","qualname":"::SamplerDescriptor::address_mode_w","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the w (i.e. z) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the w (i.e. z) direction","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35474,"byte_end":35545,"line_start":1039,"line_end":1039,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35669,"byte_end":35679,"line_start":1042,"line_end":1042,"column_start":9,"column_end":19},"name":"mag_filter","qualname":"::SamplerDescriptor::mag_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" How to filter the texture when it needs to be magnified (made larger)\n","sig":null,"attributes":[{"value":"/ How to filter the texture when it needs to be magnified (made larger)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35587,"byte_end":35660,"line_start":1041,"line_end":1041,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35779,"byte_end":35789,"line_start":1044,"line_end":1044,"column_start":9,"column_end":19},"name":"min_filter","qualname":"::SamplerDescriptor::min_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" How to filter the texture when it needs to be minified (made smaller)\n","sig":null,"attributes":[{"value":"/ How to filter the texture when it needs to be minified (made smaller)","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35697,"byte_end":35770,"line_start":1043,"line_end":1043,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35856,"byte_end":35869,"line_start":1046,"line_end":1046,"column_start":9,"column_end":22},"name":"mipmap_filter","qualname":"::SamplerDescriptor::mipmap_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" How to filter between mip map levels\n","sig":null,"attributes":[{"value":"/ How to filter between mip map levels","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35807,"byte_end":35847,"line_start":1045,"line_end":1045,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1221},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35947,"byte_end":35960,"line_start":1048,"line_end":1048,"column_start":9,"column_end":22},"name":"lod_min_clamp","qualname":"::SamplerDescriptor::lod_min_clamp","value":"f32","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Minimum level of detail (i.e. mip level) to use\n","sig":null,"attributes":[{"value":"/ Minimum level of detail (i.e. mip level) to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35887,"byte_end":35938,"line_start":1047,"line_end":1047,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":36031,"byte_end":36044,"line_start":1050,"line_end":1050,"column_start":9,"column_end":22},"name":"lod_max_clamp","qualname":"::SamplerDescriptor::lod_max_clamp","value":"f32","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Maximum level of detail (i.e. mip level) to use\n","sig":null,"attributes":[{"value":"/ Maximum level of detail (i.e. mip level) to use","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":35971,"byte_end":36022,"line_start":1049,"line_end":1049,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":36153,"byte_end":36160,"line_start":1052,"line_end":1052,"column_start":9,"column_end":16},"name":"compare","qualname":"::SamplerDescriptor::compare","value":"std::option::Option<wgpu_types::CompareFunction>","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" If this is enabled, this is a comparison sampler using the given comparison function.\n","sig":null,"attributes":[{"value":"/ If this is enabled, this is a comparison sampler using the given comparison function.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":36055,"byte_end":36144,"line_start":1051,"line_end":1051,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":36237,"byte_end":36253,"line_start":1054,"line_end":1054,"column_start":9,"column_end":25},"name":"anisotropy_clamp","qualname":"::SamplerDescriptor::anisotropy_clamp","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":1212},"children":[],"decl_id":null,"docs":" Valid values: 1, 2, 4, 8, and 16.\n","sig":null,"attributes":[{"value":"/ Valid values: 1, 2, 4, 8, and 16.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":36191,"byte_end":36228,"line_start":1053,"line_end":1053,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":36905,"byte_end":36919,"line_start":1077,"line_end":1077,"column_start":12,"column_end":26},"name":"BindGroupEntry","qualname":"::BindGroupEntry","value":"BindGroupEntry { binding, resource }","parent":null,"children":[{"krate":0,"index":1239},{"krate":0,"index":1240}],"decl_id":null,"docs":" Bindable resource and the slot to bind it to.\n","sig":null,"attributes":[{"value":"/ Bindable resource and the slot to bind it to.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":36820,"byte_end":36869,"line_start":1075,"line_end":1075,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37080,"byte_end":37087,"line_start":1080,"line_end":1080,"column_start":9,"column_end":16},"name":"binding","qualname":"::BindGroupEntry::binding","value":"u32","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" Slot for which binding provides resource. Corresponds to an entry of the same\n binding index in the [`BindGroupLayoutDescriptor`].\n","sig":null,"attributes":[{"value":"/ Slot for which binding provides resource. Corresponds to an entry of the same","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":36930,"byte_end":37011,"line_start":1078,"line_end":1078,"column_start":5,"column_end":86}},{"value":"/ binding index in the [`BindGroupLayoutDescriptor`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37016,"byte_end":37071,"line_start":1079,"line_end":1079,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37144,"byte_end":37152,"line_start":1082,"line_end":1082,"column_start":9,"column_end":17},"name":"resource","qualname":"::BindGroupEntry::resource","value":"BindingResource<'a>","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" Resource to attach to the binding\n","sig":null,"attributes":[{"value":"/ Resource to attach to the binding","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37098,"byte_end":37135,"line_start":1081,"line_end":1081,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37278,"byte_end":37297,"line_start":1087,"line_end":1087,"column_start":12,"column_end":31},"name":"BindGroupDescriptor","qualname":"::BindGroupDescriptor","value":"BindGroupDescriptor { label, layout, entries }","parent":null,"children":[{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251}],"decl_id":null,"docs":" Describes a group of bindings and the resources to be bound.\n","sig":null,"attributes":[{"value":"/ Describes a group of bindings and the resources to be bound.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37178,"byte_end":37242,"line_start":1085,"line_end":1085,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37416,"byte_end":37421,"line_start":1089,"line_end":1089,"column_start":9,"column_end":14},"name":"label","qualname":"::BindGroupDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1247},"children":[],"decl_id":null,"docs":" Debug label of the bind group. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the bind group. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37308,"byte_end":37407,"line_start":1088,"line_end":1088,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37517,"byte_end":37523,"line_start":1091,"line_end":1091,"column_start":9,"column_end":15},"name":"layout","qualname":"::BindGroupDescriptor::layout","value":"&'a BindGroupLayout","parent":{"krate":0,"index":1247},"children":[],"decl_id":null,"docs":" The [`BindGroupLayout`] that corresponds to this bind group.\n","sig":null,"attributes":[{"value":"/ The [`BindGroupLayout`] that corresponds to this bind group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37444,"byte_end":37508,"line_start":1090,"line_end":1090,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37604,"byte_end":37611,"line_start":1093,"line_end":1093,"column_start":9,"column_end":16},"name":"entries","qualname":"::BindGroupDescriptor::entries","value":"&'a [BindGroupEntry<'a>]","parent":{"krate":0,"index":1247},"children":[],"decl_id":null,"docs":" The resources to bind to this bind group.\n","sig":null,"attributes":[{"value":"/ The resources to bind to this bind group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37550,"byte_end":37595,"line_start":1092,"line_end":1092,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37722,"byte_end":37749,"line_start":1098,"line_end":1098,"column_start":12,"column_end":39},"name":"ProgrammableStageDescriptor","qualname":"::ProgrammableStageDescriptor","value":"ProgrammableStageDescriptor { module, entry_point }","parent":null,"children":[{"krate":0,"index":1260},{"krate":0,"index":1261}],"decl_id":null,"docs":" Describes a programmable pipeline stage.\n","sig":null,"attributes":[{"value":"/ Describes a programmable pipeline stage.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37642,"byte_end":37686,"line_start":1096,"line_end":1096,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37815,"byte_end":37821,"line_start":1100,"line_end":1100,"column_start":9,"column_end":15},"name":"module","qualname":"::ProgrammableStageDescriptor::module","value":"&'a ShaderModule","parent":{"krate":0,"index":1258},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37760,"byte_end":37806,"line_start":1099,"line_end":1099,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37990,"byte_end":38001,"line_start":1103,"line_end":1103,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::ProgrammableStageDescriptor::entry_point","value":"&'a str","parent":{"krate":0,"index":1258},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader. There must be a function that returns\n void with this name in the shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader. There must be a function that returns","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37845,"byte_end":37938,"line_start":1101,"line_end":1101,"column_start":5,"column_end":98}},{"value":"/ void with this name in the shader.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":37943,"byte_end":37981,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38107,"byte_end":38127,"line_start":1108,"line_end":1108,"column_start":12,"column_end":32},"name":"RenderPassDescriptor","qualname":"::RenderPassDescriptor","value":"RenderPassDescriptor { color_attachments, depth_stencil_attachment }","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272}],"decl_id":null,"docs":" Describes the attachments of a render pass.\n","sig":null,"attributes":[{"value":"/ Describes the attachments of a render pass.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38015,"byte_end":38062,"line_start":1106,"line_end":1106,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38196,"byte_end":38213,"line_start":1110,"line_end":1110,"column_start":9,"column_end":26},"name":"color_attachments","qualname":"::RenderPassDescriptor::color_attachments","value":"&'b [RenderPassColorAttachmentDescriptor<'a>]","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The color attachments of the render pass.\n","sig":null,"attributes":[{"value":"/ The color attachments of the render pass.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38142,"byte_end":38187,"line_start":1109,"line_end":1109,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38339,"byte_end":38363,"line_start":1112,"line_end":1112,"column_start":9,"column_end":33},"name":"depth_stencil_attachment","qualname":"::RenderPassDescriptor::depth_stencil_attachment","value":"std::option::Option<RenderPassDepthStencilAttachmentDescriptor<'a>>","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The depth and stencil attachment of the render pass, if any.\n","sig":null,"attributes":[{"value":"/ The depth and stencil attachment of the render pass, if any.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38266,"byte_end":38330,"line_start":1111,"line_end":1111,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38503,"byte_end":38527,"line_start":1117,"line_end":1117,"column_start":12,"column_end":36},"name":"RenderPipelineDescriptor","qualname":"::RenderPipelineDescriptor","value":"RenderPipelineDescriptor { label, layout, vertex_stage, fragment_stage, rasterization_state, primitive_topology, color_states, depth_stencil_state, vertex_state, sample_count, sample_mask, alpha_to_coverage_enabled }","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298}],"decl_id":null,"docs":" Describes a render (graphics) pipeline.\n","sig":null,"attributes":[{"value":"/ Describes a render (graphics) pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38424,"byte_end":38467,"line_start":1115,"line_end":1115,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38644,"byte_end":38649,"line_start":1119,"line_end":1119,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderPipelineDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" Debug label of the pipeline. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38538,"byte_end":38635,"line_start":1118,"line_end":1118,"column_start":5,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38729,"byte_end":38735,"line_start":1121,"line_end":1121,"column_start":9,"column_end":15},"name":"layout","qualname":"::RenderPipelineDescriptor::layout","value":"std::option::Option<&'a PipelineLayout>","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38672,"byte_end":38720,"line_start":1120,"line_end":1120,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38828,"byte_end":38840,"line_start":1123,"line_end":1123,"column_start":9,"column_end":21},"name":"vertex_stage","qualname":"::RenderPipelineDescriptor::vertex_stage","value":"ProgrammableStageDescriptor<'a>","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The compiled vertex stage and its entry point.\n","sig":null,"attributes":[{"value":"/ The compiled vertex stage and its entry point.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38769,"byte_end":38819,"line_start":1122,"line_end":1122,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38948,"byte_end":38962,"line_start":1125,"line_end":1125,"column_start":9,"column_end":23},"name":"fragment_stage","qualname":"::RenderPipelineDescriptor::fragment_stage","value":"std::option::Option<ProgrammableStageDescriptor<'a>>","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The compiled fragment stage and its entry point, if any.\n","sig":null,"attributes":[{"value":"/ The compiled fragment stage and its entry point, if any.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":38879,"byte_end":38939,"line_start":1124,"line_end":1124,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39066,"byte_end":39085,"line_start":1127,"line_end":1127,"column_start":9,"column_end":28},"name":"rasterization_state","qualname":"::RenderPipelineDescriptor::rasterization_state","value":"std::option::Option<wgpu_types::RasterizationStateDescriptor>","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The rasterization process for this pipeline.\n","sig":null,"attributes":[{"value":"/ The rasterization process for this pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39009,"byte_end":39057,"line_start":1126,"line_end":1126,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39192,"byte_end":39210,"line_start":1129,"line_end":1129,"column_start":9,"column_end":27},"name":"primitive_topology","qualname":"::RenderPipelineDescriptor::primitive_topology","value":"wgpu_types::PrimitiveTopology","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The primitive topology used to interpret vertices.\n","sig":null,"attributes":[{"value":"/ The primitive topology used to interpret vertices.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39129,"byte_end":39183,"line_start":1128,"line_end":1128,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39314,"byte_end":39326,"line_start":1131,"line_end":1131,"column_start":9,"column_end":21},"name":"color_states","qualname":"::RenderPipelineDescriptor::color_states","value":"&'a [wgpu_types::ColorStateDescriptor]","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The effect of draw calls on the color aspect of the output target.\n","sig":null,"attributes":[{"value":"/ The effect of draw calls on the color aspect of the output target.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39235,"byte_end":39305,"line_start":1130,"line_end":1130,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39460,"byte_end":39479,"line_start":1133,"line_end":1133,"column_start":9,"column_end":28},"name":"depth_stencil_state","qualname":"::RenderPipelineDescriptor::depth_stencil_state","value":"std::option::Option<wgpu_types::DepthStencilStateDescriptor>","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The effect of draw calls on the depth and stencil aspects of the output target, if any.\n","sig":null,"attributes":[{"value":"/ The effect of draw calls on the depth and stencil aspects of the output target, if any.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39360,"byte_end":39451,"line_start":1132,"line_end":1132,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39576,"byte_end":39588,"line_start":1135,"line_end":1135,"column_start":9,"column_end":21},"name":"vertex_state","qualname":"::RenderPipelineDescriptor::vertex_state","value":"VertexStateDescriptor<'a>","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The vertex input state for this pipeline.\n","sig":null,"attributes":[{"value":"/ The vertex input state for this pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39522,"byte_end":39567,"line_start":1134,"line_end":1134,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1296},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39746,"byte_end":39758,"line_start":1138,"line_end":1138,"column_start":9,"column_end":21},"name":"sample_count","qualname":"::RenderPipelineDescriptor::sample_count","value":"u32","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" The number of samples calculated per pixel (for MSAA). For non-multisampled textures,\n this should be `1`\n","sig":null,"attributes":[{"value":"/ The number of samples calculated per pixel (for MSAA). For non-multisampled textures,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39621,"byte_end":39710,"line_start":1136,"line_end":1136,"column_start":5,"column_end":94}},{"value":"/ this should be `1`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39715,"byte_end":39737,"line_start":1137,"line_end":1137,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39910,"byte_end":39921,"line_start":1141,"line_end":1141,"column_start":9,"column_end":20},"name":"sample_mask","qualname":"::RenderPipelineDescriptor::sample_mask","value":"u32","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" Bitmask that restricts the samples of a pixel modified by this pipeline. All samples\n can be enabled using the value `!0`\n","sig":null,"attributes":[{"value":"/ Bitmask that restricts the samples of a pixel modified by this pipeline. All samples","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39769,"byte_end":39857,"line_start":1139,"line_end":1139,"column_start":5,"column_end":93}},{"value":"/ can be enabled using the value `!0`","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39862,"byte_end":39901,"line_start":1140,"line_end":1140,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40309,"byte_end":40334,"line_start":1148,"line_end":1148,"column_start":9,"column_end":34},"name":"alpha_to_coverage_enabled","qualname":"::RenderPipelineDescriptor::alpha_to_coverage_enabled","value":"bool","parent":{"krate":0,"index":1285},"children":[],"decl_id":null,"docs":" When enabled, produces another sample mask per pixel based on the alpha output value, that\n is ANDed with the sample_mask and the primitive coverage to restrict the set of samples\n affected by a primitive.","sig":null,"attributes":[{"value":"/ When enabled, produces another sample mask per pixel based on the alpha output value, that","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":39932,"byte_end":40026,"line_start":1142,"line_end":1142,"column_start":5,"column_end":99}},{"value":"/ is ANDed with the sample_mask and the primitive coverage to restrict the set of samples","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40031,"byte_end":40122,"line_start":1143,"line_end":1143,"column_start":5,"column_end":96}},{"value":"/ affected by a primitive.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40127,"byte_end":40155,"line_start":1144,"line_end":1144,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40160,"byte_end":40163,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ The implicit mask produced for alpha of zero is guaranteed to be zero, and for alpha of one","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40168,"byte_end":40263,"line_start":1146,"line_end":1146,"column_start":5,"column_end":100}},{"value":"/ is guaranteed to be all 1-s.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40268,"byte_end":40300,"line_start":1147,"line_end":1147,"column_start":5,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40414,"byte_end":40439,"line_start":1153,"line_end":1153,"column_start":12,"column_end":37},"name":"ComputePipelineDescriptor","qualname":"::ComputePipelineDescriptor","value":"ComputePipelineDescriptor { label, layout, compute_stage }","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309}],"decl_id":null,"docs":" Describes a compute pipeline.\n","sig":null,"attributes":[{"value":"/ Describes a compute pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40345,"byte_end":40378,"line_start":1151,"line_end":1151,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40556,"byte_end":40561,"line_start":1155,"line_end":1155,"column_start":9,"column_end":14},"name":"label","qualname":"::ComputePipelineDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" Debug label of the pipeline. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40450,"byte_end":40547,"line_start":1154,"line_end":1154,"column_start":5,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40641,"byte_end":40647,"line_start":1157,"line_end":1157,"column_start":9,"column_end":15},"name":"layout","qualname":"::ComputePipelineDescriptor::layout","value":"std::option::Option<&'a PipelineLayout>","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40584,"byte_end":40632,"line_start":1156,"line_end":1156,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40741,"byte_end":40754,"line_start":1159,"line_end":1159,"column_start":9,"column_end":22},"name":"compute_stage","qualname":"::ComputePipelineDescriptor::compute_stage","value":"ProgrammableStageDescriptor<'a>","parent":{"krate":0,"index":1305},"children":[],"decl_id":null,"docs":" The compiled compute stage and its entry point.\n","sig":null,"attributes":[{"value":"/ The compiled compute stage and its entry point.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40681,"byte_end":40732,"line_start":1158,"line_end":1158,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":571},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40918,"byte_end":40932,"line_start":1164,"line_end":1164,"column_start":10,"column_end":24},"name":"BufferCopyView","qualname":"::BufferCopyView","value":"BufferCopyViewBase<&'a Buffer>","parent":null,"children":[],"decl_id":null,"docs":" View of a buffer which can be used to copy to/from a texture.\n","sig":null,"attributes":[{"value":"/ View of a buffer which can be used to copy to/from a texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":40843,"byte_end":40908,"line_start":1163,"line_end":1163,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":574},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41108,"byte_end":41123,"line_start":1168,"line_end":1168,"column_start":10,"column_end":25},"name":"TextureCopyView","qualname":"::TextureCopyView","value":"TextureCopyViewBase<&'a Texture>","parent":null,"children":[],"decl_id":null,"docs":" View of a texture which can be used to copy to/from a buffer/texture.\n","sig":null,"attributes":[{"value":"/ View of a texture which can be used to copy to/from a buffer/texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41025,"byte_end":41098,"line_start":1167,"line_end":1167,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41237,"byte_end":41262,"line_start":1172,"line_end":1172,"column_start":12,"column_end":37},"name":"BindGroupLayoutDescriptor","qualname":"::BindGroupLayoutDescriptor","value":"BindGroupLayoutDescriptor { label, entries }","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319}],"decl_id":null,"docs":" Describes a [`BindGroupLayout`].\n","sig":null,"attributes":[{"value":"/ Describes a [`BindGroupLayout`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41165,"byte_end":41201,"line_start":1170,"line_end":1170,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41388,"byte_end":41393,"line_start":1174,"line_end":1174,"column_start":9,"column_end":14},"name":"label","qualname":"::BindGroupLayoutDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1316},"children":[],"decl_id":null,"docs":" Debug label of the bind group layout. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the bind group layout. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41273,"byte_end":41379,"line_start":1173,"line_end":1173,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41470,"byte_end":41477,"line_start":1177,"line_end":1177,"column_start":9,"column_end":16},"name":"entries","qualname":"::BindGroupLayoutDescriptor::entries","value":"&'a [wgpu_types::BindGroupLayoutEntry]","parent":{"krate":0,"index":1316},"children":[],"decl_id":null,"docs":" Array of entries in this BindGroupLayout\n","sig":null,"attributes":[{"value":"/ Array of entries in this BindGroupLayout","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41417,"byte_end":41461,"line_start":1176,"line_end":1176,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41618,"byte_end":41640,"line_start":1182,"line_end":1182,"column_start":12,"column_end":34},"name":"VertexBufferDescriptor","qualname":"::VertexBufferDescriptor","value":"VertexBufferDescriptor { stride, step_mode, attributes }","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329},{"krate":0,"index":1330}],"decl_id":null,"docs":" Describes how the vertex buffer is interpreted.\n","sig":null,"attributes":[{"value":"/ Describes how the vertex buffer is interpreted.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41510,"byte_end":41561,"line_start":1180,"line_end":1180,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41718,"byte_end":41724,"line_start":1184,"line_end":1184,"column_start":9,"column_end":15},"name":"stride","qualname":"::VertexBufferDescriptor::stride","value":"u64","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":" The stride, in bytes, between elements of this buffer.\n","sig":null,"attributes":[{"value":"/ The stride, in bytes, between elements of this buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41651,"byte_end":41709,"line_start":1183,"line_end":1183,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41808,"byte_end":41817,"line_start":1186,"line_end":1186,"column_start":9,"column_end":18},"name":"step_mode","qualname":"::VertexBufferDescriptor::step_mode","value":"wgpu_types::InputStepMode","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":" How often this vertex buffer is \"stepped\" forward.\n","sig":null,"attributes":[{"value":"/ How often this vertex buffer is \"stepped\" forward.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41745,"byte_end":41799,"line_start":1185,"line_end":1185,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41905,"byte_end":41915,"line_start":1188,"line_end":1188,"column_start":9,"column_end":19},"name":"attributes","qualname":"::VertexBufferDescriptor::attributes","value":"&'a [wgpu_types::VertexAttributeDescriptor]","parent":{"krate":0,"index":1326},"children":[],"decl_id":null,"docs":" The list of attributes which comprise a single vertex.\n","sig":null,"attributes":[{"value":"/ The list of attributes which comprise a single vertex.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41838,"byte_end":41896,"line_start":1187,"line_end":1187,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42065,"byte_end":42086,"line_start":1193,"line_end":1193,"column_start":12,"column_end":33},"name":"VertexStateDescriptor","qualname":"::VertexStateDescriptor","value":"VertexStateDescriptor { index_format, vertex_buffers }","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355}],"decl_id":null,"docs":" Describes vertex input state for a render pipeline.\n","sig":null,"attributes":[{"value":"/ Describes vertex input state for a render pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":41953,"byte_end":42008,"line_start":1191,"line_end":1191,"column_start":1,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42166,"byte_end":42178,"line_start":1195,"line_end":1195,"column_start":9,"column_end":21},"name":"index_format","qualname":"::VertexStateDescriptor::index_format","value":"wgpu_types::IndexFormat","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" The format of any index buffers used with this pipeline.\n","sig":null,"attributes":[{"value":"/ The format of any index buffers used with this pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42097,"byte_end":42157,"line_start":1194,"line_end":1194,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42267,"byte_end":42281,"line_start":1197,"line_end":1197,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::VertexStateDescriptor::vertex_buffers","value":"&'a [VertexBufferDescriptor<'a>]","parent":{"krate":0,"index":1352},"children":[],"decl_id":null,"docs":" The format of any vertex buffers used with this pipeline.\n","sig":null,"attributes":[{"value":"/ The format of any vertex buffers used with this pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42197,"byte_end":42258,"line_start":1196,"line_end":1196,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42426,"byte_end":42455,"line_start":1202,"line_end":1202,"column_start":12,"column_end":41},"name":"RenderBundleEncoderDescriptor","qualname":"::RenderBundleEncoderDescriptor","value":"RenderBundleEncoderDescriptor { label, color_formats, depth_stencil_format, sample_count }","parent":null,"children":[{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382}],"decl_id":null,"docs":" Describes a [`RenderBundleEncoder`].\n","sig":null,"attributes":[{"value":"/ Describes a [`RenderBundleEncoder`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42320,"byte_end":42360,"line_start":1200,"line_end":1200,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42585,"byte_end":42590,"line_start":1204,"line_end":1204,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderBundleEncoderDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1377},"children":[],"decl_id":null,"docs":" Debug label of the render bundle encoder. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the render bundle encoder. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42466,"byte_end":42576,"line_start":1203,"line_end":1203,"column_start":5,"column_end":115}}]},{"kind":"Field","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42828,"byte_end":42841,"line_start":1207,"line_end":1207,"column_start":9,"column_end":22},"name":"color_formats","qualname":"::RenderBundleEncoderDescriptor::color_formats","value":"&'a [wgpu_types::TextureFormat]","parent":{"krate":0,"index":1377},"children":[],"decl_id":null,"docs":" The formats of the color attachments that this render bundle is capable to rendering to. This\n must match the formats of the color attachments in the renderpass this render bundle is executed in.\n","sig":null,"attributes":[{"value":"/ The formats of the color attachments that this render bundle is capable to rendering to. This","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42613,"byte_end":42710,"line_start":1205,"line_end":1205,"column_start":5,"column_end":102}},{"value":"/ must match the formats of the color attachments in the renderpass this render bundle is executed in.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42715,"byte_end":42819,"line_start":1206,"line_end":1206,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43082,"byte_end":43102,"line_start":1210,"line_end":1210,"column_start":9,"column_end":29},"name":"depth_stencil_format","qualname":"::RenderBundleEncoderDescriptor::depth_stencil_format","value":"std::option::Option<wgpu_types::TextureFormat>","parent":{"krate":0,"index":1377},"children":[],"decl_id":null,"docs":" The formats of the depth attachment that this render bundle is capable to rendering to. This\n must match the formats of the depth attachments in the renderpass this render bundle is executed in.\n","sig":null,"attributes":[{"value":"/ The formats of the depth attachment that this render bundle is capable to rendering to. This","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42868,"byte_end":42964,"line_start":1208,"line_end":1208,"column_start":5,"column_end":101}},{"value":"/ must match the formats of the depth attachments in the renderpass this render bundle is executed in.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":42969,"byte_end":43073,"line_start":1209,"line_end":1209,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43277,"byte_end":43289,"line_start":1213,"line_end":1213,"column_start":9,"column_end":21},"name":"sample_count","qualname":"::RenderBundleEncoderDescriptor::sample_count","value":"u32","parent":{"krate":0,"index":1377},"children":[],"decl_id":null,"docs":" Sample count this render bundle is capable of rendering to. This must match the pipelines and\n the renderpasses it is used in.\n","sig":null,"attributes":[{"value":"/ Sample count this render bundle is capable of rendering to. This must match the pipelines and","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43131,"byte_end":43228,"line_start":1211,"line_end":1211,"column_start":5,"column_end":102}},{"value":"/ the renderpasses it is used in.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43233,"byte_end":43268,"line_start":1212,"line_end":1212,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43373,"byte_end":43389,"line_start":1218,"line_end":1218,"column_start":12,"column_end":28},"name":"SwapChainTexture","qualname":"::SwapChainTexture","value":"SwapChainTexture { view }","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"decl_id":null,"docs":" Swap chain image that can be rendered to.\n","sig":null,"attributes":[{"value":"/ Swap chain image that can be rendered to.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43299,"byte_end":43344,"line_start":1216,"line_end":1216,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43438,"byte_end":43442,"line_start":1220,"line_end":1220,"column_start":9,"column_end":13},"name":"view","qualname":"::SwapChainTexture::view","value":"TextureView","parent":{"krate":0,"index":1407},"children":[],"decl_id":null,"docs":" Accessible view of the frame.\n","sig":null,"attributes":[{"value":"/ Accessible view of the frame.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43396,"byte_end":43429,"line_start":1219,"line_end":1219,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43608,"byte_end":43622,"line_start":1226,"line_end":1226,"column_start":12,"column_end":26},"name":"SwapChainFrame","qualname":"::SwapChainFrame","value":"SwapChainFrame { output, suboptimal }","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"decl_id":null,"docs":" Result of a successful call to [`SwapChain::get_current_frame`].\n","sig":null,"attributes":[{"value":"/ Result of a successful call to [`SwapChain::get_current_frame`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43511,"byte_end":43579,"line_start":1224,"line_end":1224,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43699,"byte_end":43705,"line_start":1228,"line_end":1228,"column_start":9,"column_end":15},"name":"output","qualname":"::SwapChainFrame::output","value":"SwapChainTexture","parent":{"krate":0,"index":1412},"children":[],"decl_id":null,"docs":" The texture into which the next frame should be rendered.\n","sig":null,"attributes":[{"value":"/ The texture into which the next frame should be rendered.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43629,"byte_end":43690,"line_start":1227,"line_end":1227,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43861,"byte_end":43871,"line_start":1231,"line_end":1231,"column_start":9,"column_end":19},"name":"suboptimal","qualname":"::SwapChainFrame::suboptimal","value":"bool","parent":{"krate":0,"index":1412},"children":[],"decl_id":null,"docs":" `true` if the acquired buffer can still be used for rendering,\n but should be recreated for maximum performance.\n","sig":null,"attributes":[{"value":"/ `true` if the acquired buffer can still be used for rendering,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43729,"byte_end":43795,"line_start":1229,"line_end":1229,"column_start":5,"column_end":71}},{"value":"/ but should be recreated for maximum performance.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43800,"byte_end":43852,"line_start":1230,"line_end":1230,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44097,"byte_end":44104,"line_start":1238,"line_end":1238,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::SwapChainError::Timeout","value":"SwapChainError::Timeout","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" A timeout was encountered while trying to acquire the next frame.\n","sig":null,"attributes":[{"value":"/ A timeout was encountered while trying to acquire the next frame.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44023,"byte_end":44092,"line_start":1237,"line_end":1237,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44200,"byte_end":44208,"line_start":1240,"line_end":1240,"column_start":5,"column_end":13},"name":"Outdated","qualname":"::SwapChainError::Outdated","value":"SwapChainError::Outdated","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" The underlying surface has changed, and therefore the swap chain must be updated.\n","sig":null,"attributes":[{"value":"/ The underlying surface has changed, and therefore the swap chain must be updated.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44110,"byte_end":44195,"line_start":1239,"line_end":1239,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44278,"byte_end":44282,"line_start":1242,"line_end":1242,"column_start":5,"column_end":9},"name":"Lost","qualname":"::SwapChainError::Lost","value":"SwapChainError::Lost","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" The swap chain has been lost and needs to be recreated.\n","sig":null,"attributes":[{"value":"/ The swap chain has been lost and needs to be recreated.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44214,"byte_end":44273,"line_start":1241,"line_end":1241,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44350,"byte_end":44361,"line_start":1244,"line_end":1244,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::SwapChainError::OutOfMemory","value":"SwapChainError::OutOfMemory","parent":{"krate":0,"index":1417},"children":[],"decl_id":null,"docs":" There is no more memory left to allocate a new frame.\n","sig":null,"attributes":[{"value":"/ There is no more memory left to allocate a new frame.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44288,"byte_end":44345,"line_start":1243,"line_end":1243,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44002,"byte_end":44016,"line_start":1236,"line_end":1236,"column_start":10,"column_end":24},"name":"SwapChainError","qualname":"::SwapChainError","value":"pub enum SwapChainError {\n\n    /// A timeout was encountered while trying to acquire the next frame.\n    Timeout,\n\n    /// The underlying surface has changed, and therefore the swap chain must be updated.\n    Outdated,\n\n    /// The swap chain has been lost and needs to be recreated.\n    Lost,\n\n    /// There is no more memory left to allocate a new frame.\n    OutOfMemory,\n}","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1420},{"krate":0,"index":1422},{"krate":0,"index":1424}],"decl_id":null,"docs":" Result of an unsuccessful call to [`SwapChain::get_current_frame`].\n","sig":null,"attributes":[{"value":"/ Result of an unsuccessful call to [`SwapChain::get_current_frame`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":43882,"byte_end":43953,"line_start":1234,"line_end":1234,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45167,"byte_end":45170,"line_start":1267,"line_end":1267,"column_start":12,"column_end":15},"name":"new","qualname":"<Instance>::new","value":"pub fn new(BackendBit) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an new instance of wgpu.","sig":null,"attributes":[{"value":"/ Create an new instance of wgpu.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44969,"byte_end":45004,"line_start":1261,"line_end":1261,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45009,"byte_end":45012,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45017,"byte_end":45032,"line_start":1263,"line_end":1263,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45037,"byte_end":45040,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ - `backends` - Controls from which [backends][BackendBit] wgpu will choose","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45045,"byte_end":45123,"line_start":1265,"line_end":1265,"column_start":5,"column_end":83}},{"value":"/   during instantiation.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45128,"byte_end":45155,"line_start":1266,"line_end":1266,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45524,"byte_end":45542,"line_start":1279,"line_end":1279,"column_start":12,"column_end":30},"name":"enumerate_adapters","qualname":"<Instance>::enumerate_adapters","value":"pub fn enumerate_adapters(&Self, BackendBit) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves all available [`Adapter`]s that match the given [`BackendBit`].","sig":null,"attributes":[{"value":"/ Retrieves all available [`Adapter`]s that match the given [`BackendBit`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45293,"byte_end":45370,"line_start":1273,"line_end":1273,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45375,"byte_end":45378,"line_start":1274,"line_end":1274,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45383,"byte_end":45398,"line_start":1275,"line_end":1275,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45403,"byte_end":45406,"line_start":1276,"line_end":1276,"column_start":5,"column_end":8}},{"value":"/ - `backends` - Backends from which to enumerate adapters.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45411,"byte_end":45472,"line_start":1277,"line_end":1277,"column_start":5,"column_end":66}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45477,"byte_end":45512,"line_start":1278,"line_end":1278,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46159,"byte_end":46174,"line_start":1295,"line_end":1295,"column_start":12,"column_end":27},"name":"request_adapter","qualname":"<Instance>::request_adapter","value":"pub fn request_adapter(&Self, &RequestAdapterOptions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an [`Adapter`] which matches the given [`RequestAdapterOptions`].","sig":null,"attributes":[{"value":"/ Retrieves an [`Adapter`] which matches the given [`RequestAdapterOptions`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45881,"byte_end":45960,"line_start":1290,"line_end":1290,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45965,"byte_end":45968,"line_start":1291,"line_end":1291,"column_start":5,"column_end":8}},{"value":"/ Some options are \"soft\", so treated as non-mandatory. Others are \"hard\".","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":45973,"byte_end":46049,"line_start":1292,"line_end":1292,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46054,"byte_end":46057,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ If no adapters are found that suffice all the \"hard\" options, `None` is returned.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46062,"byte_end":46147,"line_start":1294,"line_end":1294,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46660,"byte_end":46674,"line_start":1310,"line_end":1310,"column_start":19,"column_end":33},"name":"create_surface","qualname":"<Instance>::create_surface","value":"pub unsafe fn create_surface<W: raw_window_handle::HasRawWindowHandle>(&Self,\n                                                                       &W)\n-> Surface","parent":null,"children":[],"decl_id":null,"docs":" Creates a surface from a raw window handle.","sig":null,"attributes":[{"value":"/ Creates a surface from a raw window handle.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46484,"byte_end":46531,"line_start":1305,"line_end":1305,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46536,"byte_end":46539,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46544,"byte_end":46556,"line_start":1307,"line_end":1307,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46561,"byte_end":46564,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ - Raw Window Handle must be a valid object to create a surface upon.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46569,"byte_end":46641,"line_start":1309,"line_end":1309,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47106,"byte_end":47146,"line_start":1325,"line_end":1325,"column_start":19,"column_end":59},"name":"create_surface_from_core_animation_layer","qualname":"<Instance>::create_surface_from_core_animation_layer","value":"pub unsafe fn create_surface_from_core_animation_layer(&Self,\n                                                       *mut std::ffi::c_void)\n-> Surface","parent":null,"children":[],"decl_id":null,"docs":" Creates a surface from `CoreAnimationLayer`.","sig":null,"attributes":[{"value":"/ Creates a surface from `CoreAnimationLayer`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46885,"byte_end":46933,"line_start":1319,"line_end":1319,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46938,"byte_end":46941,"line_start":1320,"line_end":1320,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46946,"byte_end":46958,"line_start":1321,"line_end":1321,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46963,"byte_end":46966,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ - layer must be a valid object to create a surface upon.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":46971,"byte_end":47031,"line_start":1323,"line_end":1323,"column_start":5,"column_end":65}},{"value":"cfg(any(target_os = \"ios\", target_os = \"macos\"))","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47036,"byte_end":47087,"line_start":1324,"line_end":1324,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":48082,"byte_end":48096,"line_start":1350,"line_end":1350,"column_start":12,"column_end":26},"name":"request_device","qualname":"<Adapter>::request_device","value":"pub fn request_device(&Self, &DeviceDescriptor, Option<&std::path::Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Requests a connection to a physical device, creating a logical device.","sig":null,"attributes":[{"value":"/ Requests a connection to a physical device, creating a logical device.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47317,"byte_end":47391,"line_start":1334,"line_end":1334,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47396,"byte_end":47399,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ Returns the [`Device`] together with a [`Queue`] that executes command buffers.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47404,"byte_end":47487,"line_start":1336,"line_end":1336,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47492,"byte_end":47495,"line_start":1337,"line_end":1337,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47500,"byte_end":47515,"line_start":1338,"line_end":1338,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47520,"byte_end":47523,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8}},{"value":"/ - `desc` - Description of the features and limits requested from the given device.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47528,"byte_end":47614,"line_start":1340,"line_end":1340,"column_start":5,"column_end":91}},{"value":"/ - `trace_path` - Can be used for API call tracing, if that feature is","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47619,"byte_end":47692,"line_start":1341,"line_end":1341,"column_start":5,"column_end":78}},{"value":"/   enabled in `wgpu-core`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47697,"byte_end":47726,"line_start":1342,"line_end":1342,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47731,"byte_end":47734,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47739,"byte_end":47751,"line_start":1344,"line_end":1344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47756,"byte_end":47759,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ - Features specified by `desc` are not supported by this adapter.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47764,"byte_end":47833,"line_start":1346,"line_end":1346,"column_start":5,"column_end":74}},{"value":"/ - Unsafe features were requested but not enabled when requesting the adapter.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47838,"byte_end":47919,"line_start":1347,"line_end":1347,"column_start":5,"column_end":86}},{"value":"/ - Limits requested exceed the values provided by the adapter.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47924,"byte_end":47989,"line_start":1348,"line_end":1348,"column_start":5,"column_end":70}},{"value":"/ - Adapter does not support all features wgpu requires to safely operate.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47994,"byte_end":48070,"line_start":1349,"line_end":1349,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49000,"byte_end":49008,"line_start":1376,"line_end":1376,"column_start":12,"column_end":20},"name":"features","qualname":"<Adapter>::features","value":"pub fn features(&Self) -> Features","parent":null,"children":[],"decl_id":null,"docs":" List all features that are supported with this adapter.","sig":null,"attributes":[{"value":"/ List all features that are supported with this adapter.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":48814,"byte_end":48873,"line_start":1372,"line_end":1372,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":48878,"byte_end":48881,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ Features must be explicitly requested in [`Adapter::request_device`] in order","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":48886,"byte_end":48967,"line_start":1374,"line_end":1374,"column_start":5,"column_end":86}},{"value":"/ to use them.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":48972,"byte_end":48988,"line_start":1375,"line_end":1375,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49313,"byte_end":49319,"line_start":1384,"line_end":1384,"column_start":12,"column_end":18},"name":"limits","qualname":"<Adapter>::limits","value":"pub fn limits(&Self) -> Limits","parent":null,"children":[],"decl_id":null,"docs":" List the \"best\" limits that are supported by this adapter.","sig":null,"attributes":[{"value":"/ List the \"best\" limits that are supported by this adapter.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49101,"byte_end":49163,"line_start":1380,"line_end":1380,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49168,"byte_end":49171,"line_start":1381,"line_end":1381,"column_start":5,"column_end":8}},{"value":"/ Limits must be explicitly requested in [`Adapter::request_device`] to set","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49176,"byte_end":49253,"line_start":1382,"line_end":1382,"column_start":5,"column_end":82}},{"value":"/ the values that you are allowed to use.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49258,"byte_end":49301,"line_start":1383,"line_end":1383,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49498,"byte_end":49506,"line_start":1390,"line_end":1390,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Adapter>::get_info","value":"pub fn get_info(&Self) -> AdapterInfo","parent":null,"children":[],"decl_id":null,"docs":" Get info about the adapter itself.\n","sig":null,"attributes":[{"value":"/ Get info about the adapter itself.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49408,"byte_end":49446,"line_start":1388,"line_end":1388,"column_start":5,"column_end":43}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49451,"byte_end":49486,"line_start":1389,"line_end":1389,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49737,"byte_end":49741,"line_start":1399,"line_end":1399,"column_start":12,"column_end":16},"name":"poll","qualname":"<Device>::poll","value":"pub fn poll(&Self, Maintain)","parent":null,"children":[],"decl_id":null,"docs":" Check for resource cleanups and mapping callbacks.","sig":null,"attributes":[{"value":"/ Check for resource cleanups and mapping callbacks.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49605,"byte_end":49659,"line_start":1396,"line_end":1396,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49664,"byte_end":49667,"line_start":1397,"line_end":1397,"column_start":5,"column_end":8}},{"value":"/ no-op on the web, device is automatically polled.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49672,"byte_end":49725,"line_start":1398,"line_end":1398,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49985,"byte_end":49993,"line_start":1406,"line_end":1406,"column_start":12,"column_end":20},"name":"features","qualname":"<Device>::features","value":"pub fn features(&Self) -> Features","parent":null,"children":[],"decl_id":null,"docs":" List all features that may be used with this device.","sig":null,"attributes":[{"value":"/ List all features that may be used with this device.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49848,"byte_end":49904,"line_start":1403,"line_end":1403,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49909,"byte_end":49912,"line_start":1404,"line_end":1404,"column_start":5,"column_end":8}},{"value":"/ Functions may panic if you use unsupported features.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49917,"byte_end":49973,"line_start":1405,"line_end":1405,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":50226,"byte_end":50232,"line_start":1413,"line_end":1413,"column_start":12,"column_end":18},"name":"limits","qualname":"<Device>::limits","value":"pub fn limits(&Self) -> Limits","parent":null,"children":[],"decl_id":null,"docs":" List all limits that were requested of this device.","sig":null,"attributes":[{"value":"/ List all limits that were requested of this device.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":50085,"byte_end":50140,"line_start":1410,"line_end":1410,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":50145,"byte_end":50148,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ If any of these limits are exceeded, functions may panic.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":50153,"byte_end":50214,"line_start":1412,"line_end":1412,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":50399,"byte_end":50419,"line_start":1418,"line_end":1418,"column_start":12,"column_end":32},"name":"create_shader_module","qualname":"<Device>::create_shader_module","value":"pub fn create_shader_module(&Self, ShaderModuleSource) -> ShaderModule","parent":null,"children":[],"decl_id":null,"docs":" Creates a shader module from either SPIR-V or WGSL source code.\n","sig":null,"attributes":[{"value":"/ Creates a shader module from either SPIR-V or WGSL source code.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":50320,"byte_end":50387,"line_start":1417,"line_end":1417,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":50705,"byte_end":50727,"line_start":1426,"line_end":1426,"column_start":12,"column_end":34},"name":"create_command_encoder","qualname":"<Device>::create_command_encoder","value":"pub fn create_command_encoder(&Self, &CommandEncoderDescriptor)\n-> CommandEncoder","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty [`CommandEncoder`].\n","sig":null,"attributes":[{"value":"/ Creates an empty [`CommandEncoder`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":50653,"byte_end":50693,"line_start":1425,"line_end":1425,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":51063,"byte_end":51091,"line_start":1435,"line_end":1435,"column_start":12,"column_end":40},"name":"create_render_bundle_encoder","qualname":"<Device>::create_render_bundle_encoder","value":"pub fn create_render_bundle_encoder(&Self, &RenderBundleEncoderDescriptor)\n-> RenderBundleEncoder","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty [`RenderBundleEncoder`].\n","sig":null,"attributes":[{"value":"/ Creates an empty [`RenderBundleEncoder`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":51006,"byte_end":51051,"line_start":1434,"line_end":1434,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":51485,"byte_end":51502,"line_start":1448,"line_end":1448,"column_start":12,"column_end":29},"name":"create_bind_group","qualname":"<Device>::create_bind_group","value":"pub fn create_bind_group(&Self, &BindGroupDescriptor) -> BindGroup","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`BindGroup`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`BindGroup`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":51441,"byte_end":51473,"line_start":1447,"line_end":1447,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":51771,"byte_end":51795,"line_start":1456,"line_end":1456,"column_start":12,"column_end":36},"name":"create_bind_group_layout","qualname":"<Device>::create_bind_group_layout","value":"pub fn create_bind_group_layout(&Self, &BindGroupLayoutDescriptor)\n-> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`BindGroupLayout`].\n","sig":null,"attributes":[{"value":"/ Creates a [`BindGroupLayout`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":51725,"byte_end":51759,"line_start":1455,"line_end":1455,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":52088,"byte_end":52110,"line_start":1464,"line_end":1464,"column_start":12,"column_end":34},"name":"create_pipeline_layout","qualname":"<Device>::create_pipeline_layout","value":"pub fn create_pipeline_layout(&Self, &PipelineLayoutDescriptor)\n-> PipelineLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`PipelineLayout`].\n","sig":null,"attributes":[{"value":"/ Creates a [`PipelineLayout`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":52043,"byte_end":52076,"line_start":1463,"line_end":1463,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":52398,"byte_end":52420,"line_start":1472,"line_end":1472,"column_start":12,"column_end":34},"name":"create_render_pipeline","qualname":"<Device>::create_render_pipeline","value":"pub fn create_render_pipeline(&Self, &RenderPipelineDescriptor)\n-> RenderPipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`RenderPipeline`].\n","sig":null,"attributes":[{"value":"/ Creates a [`RenderPipeline`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":52353,"byte_end":52386,"line_start":1471,"line_end":1471,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":52709,"byte_end":52732,"line_start":1480,"line_end":1480,"column_start":12,"column_end":35},"name":"create_compute_pipeline","qualname":"<Device>::create_compute_pipeline","value":"pub fn create_compute_pipeline(&Self, &ComputePipelineDescriptor)\n-> ComputePipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`ComputePipeline`].\n","sig":null,"attributes":[{"value":"/ Creates a [`ComputePipeline`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":52663,"byte_end":52697,"line_start":1479,"line_end":1479,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":53016,"byte_end":53029,"line_start":1488,"line_end":1488,"column_start":12,"column_end":25},"name":"create_buffer","qualname":"<Device>::create_buffer","value":"pub fn create_buffer(&Self, &BufferDescriptor) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Buffer`].\n","sig":null,"attributes":[{"value":"/ Creates a [`Buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":52979,"byte_end":53004,"line_start":1487,"line_end":1487,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":53589,"byte_end":53603,"line_start":1504,"line_end":1504,"column_start":12,"column_end":26},"name":"create_texture","qualname":"<Device>::create_texture","value":"pub fn create_texture(&Self, &TextureDescriptor) -> Texture","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Texture`].","sig":null,"attributes":[{"value":"/ Creates a new [`Texture`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":53479,"byte_end":53509,"line_start":1501,"line_end":1501,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":53514,"byte_end":53517,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the general format of the texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":53522,"byte_end":53577,"line_start":1503,"line_end":1503,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":53946,"byte_end":53960,"line_start":1515,"line_end":1515,"column_start":12,"column_end":26},"name":"create_sampler","qualname":"<Device>::create_sampler","value":"pub fn create_sampler(&Self, &SamplerDescriptor) -> Sampler","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Sampler`].","sig":null,"attributes":[{"value":"/ Creates a new [`Sampler`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":53842,"byte_end":53872,"line_start":1512,"line_end":1512,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":53877,"byte_end":53880,"line_start":1513,"line_end":1513,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the behavior of the sampler.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":53885,"byte_end":53934,"line_start":1514,"line_end":1514,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54423,"byte_end":54440,"line_start":1528,"line_end":1528,"column_start":12,"column_end":29},"name":"create_swap_chain","qualname":"<Device>::create_swap_chain","value":"pub fn create_swap_chain(&Self, &Surface, &SwapChainDescriptor) -> SwapChain","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`SwapChain`] which targets `surface`.","sig":null,"attributes":[{"value":"/ Create a new [`SwapChain`] which targets `surface`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54174,"byte_end":54229,"line_start":1522,"line_end":1522,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54234,"byte_end":54237,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54242,"byte_end":54254,"line_start":1524,"line_end":1524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54259,"byte_end":54262,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ - A old [`SwapChainFrame`] is still alive referencing an old swapchain.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54267,"byte_end":54342,"line_start":1526,"line_end":1526,"column_start":5,"column_end":80}},{"value":"/ - Texture format requested is unsupported on the swap chain.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54347,"byte_end":54411,"line_start":1527,"line_end":1527,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54924,"byte_end":54942,"line_start":1546,"line_end":1546,"column_start":12,"column_end":30},"name":"RequestDeviceError","qualname":"::RequestDeviceError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Requesting a device failed.\n","sig":null,"attributes":[{"value":"/ Requesting a device failed.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54842,"byte_end":54873,"line_start":1544,"line_end":1544,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55255,"byte_end":55271,"line_start":1558,"line_end":1558,"column_start":12,"column_end":28},"name":"BufferAsyncError","qualname":"::BufferAsyncError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error occurred when trying to async map a buffer.\n","sig":null,"attributes":[{"value":"/ Error occurred when trying to async map a buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55151,"byte_end":55204,"line_start":1556,"line_end":1556,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55619,"byte_end":55623,"line_start":1572,"line_end":1572,"column_start":5,"column_end":9},"name":"Read","qualname":"::MapMode::Read","value":"MapMode::Read","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":" Map only for reading\n","sig":null,"attributes":[{"value":"/ Map only for reading","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55590,"byte_end":55614,"line_start":1571,"line_end":1571,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55658,"byte_end":55663,"line_start":1574,"line_end":1574,"column_start":5,"column_end":10},"name":"Write","qualname":"::MapMode::Write","value":"MapMode::Write","parent":{"krate":0,"index":1460},"children":[],"decl_id":null,"docs":" Map only for writing\n","sig":null,"attributes":[{"value":"/ Map only for writing","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55629,"byte_end":55653,"line_start":1573,"line_end":1573,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":1460},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55576,"byte_end":55583,"line_start":1570,"line_end":1570,"column_start":10,"column_end":17},"name":"MapMode","qualname":"::MapMode","value":"pub enum MapMode {\n\n    /// Map only for reading\n    Read,\n\n    /// Map only for writing\n    Write,\n}","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1463}],"decl_id":null,"docs":" Type of buffer mapping.\n","sig":null,"attributes":[{"value":"/ Type of buffer mapping.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55498,"byte_end":55525,"line_start":1568,"line_end":1568,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1473},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":56269,"byte_end":56279,"line_start":1596,"line_end":1596,"column_start":12,"column_end":22},"name":"BufferView","qualname":"::BufferView","value":"BufferView {  }","parent":null,"children":[{"krate":0,"index":1475},{"krate":0,"index":1476}],"decl_id":null,"docs":" Read only view into a mapped buffer.\n","sig":null,"attributes":[{"value":"/ Read only view into a mapped buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":56200,"byte_end":56240,"line_start":1594,"line_end":1594,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":56405,"byte_end":56418,"line_start":1603,"line_end":1603,"column_start":12,"column_end":25},"name":"BufferViewMut","qualname":"::BufferViewMut","value":"BufferViewMut {  }","parent":null,"children":[{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484}],"decl_id":null,"docs":" Write only view into mapped buffer.\n","sig":null,"attributes":[{"value":"/ Write only view into mapped buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":56337,"byte_end":56376,"line_start":1601,"line_end":1601,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":57673,"byte_end":57678,"line_start":1659,"line_end":1659,"column_start":12,"column_end":17},"name":"slice","qualname":"<Buffer>::slice","value":"pub fn slice<S: RangeBounds<BufferAddress>>(&Self, S) -> BufferSlice","parent":null,"children":[],"decl_id":null,"docs":" Use only a portion of this Buffer for a given operation. Choosing a range with no end\n will use the rest of the buffer. Using a totally unbounded range will use the entire buffer.\n","sig":null,"attributes":[{"value":"/ Use only a portion of this Buffer for a given operation. Choosing a range with no end","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":57471,"byte_end":57560,"line_start":1657,"line_end":1657,"column_start":5,"column_end":94}},{"value":"/ will use the rest of the buffer. Using a totally unbounded range will use the entire buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":57565,"byte_end":57661,"line_start":1658,"line_end":1658,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58003,"byte_end":58008,"line_start":1669,"line_end":1669,"column_start":12,"column_end":17},"name":"unmap","qualname":"<Buffer>::unmap","value":"pub fn unmap(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flushes any pending write operations and unmaps the buffer from host memory.\n","sig":null,"attributes":[{"value":"/ Flushes any pending write operations and unmaps the buffer from host memory.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":57911,"byte_end":57991,"line_start":1668,"line_end":1668,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58716,"byte_end":58725,"line_start":1686,"line_end":1686,"column_start":12,"column_end":21},"name":"map_async","qualname":"<BufferSlice>::map_async","value":"pub fn map_async(&Self, MapMode) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Map the buffer. Buffer is ready to map once the future is resolved.","sig":null,"attributes":[{"value":"/ Map the buffer. Buffer is ready to map once the future is resolved.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58193,"byte_end":58264,"line_start":1678,"line_end":1678,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58269,"byte_end":58272,"line_start":1679,"line_end":1679,"column_start":5,"column_end":8}},{"value":"/ For the future to complete, `device.poll(...)` must be called elsewhere in the runtime, possibly integrated","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58277,"byte_end":58388,"line_start":1680,"line_end":1680,"column_start":5,"column_end":116}},{"value":"/ into an event loop, run on a separate thread, or continually polled in the same task runtime that this","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58393,"byte_end":58499,"line_start":1681,"line_end":1681,"column_start":5,"column_end":111}},{"value":"/ future will be run on.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58504,"byte_end":58530,"line_start":1682,"line_end":1682,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58535,"byte_end":58538,"line_start":1683,"line_end":1683,"column_start":5,"column_end":8}},{"value":"/ It's expected that wgpu will eventually supply its own event loop infrastructure that will be easy to integrate","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58543,"byte_end":58658,"line_start":1684,"line_end":1684,"column_start":5,"column_end":120}},{"value":"/ into other event loops, like winit's.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58663,"byte_end":58704,"line_start":1685,"line_end":1685,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":59687,"byte_end":59703,"line_start":1715,"line_end":1715,"column_start":12,"column_end":28},"name":"get_mapped_range","qualname":"<BufferSlice>::get_mapped_range","value":"pub fn get_mapped_range(&Self) -> BufferView","parent":null,"children":[],"decl_id":null,"docs":" Synchronously and immediately map a buffer for reading. If the buffer is not immediately mappable\n through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.\n","sig":null,"attributes":[{"value":"/ Synchronously and immediately map a buffer for reading. If the buffer is not immediately mappable","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":59474,"byte_end":59575,"line_start":1713,"line_end":1713,"column_start":5,"column_end":106}},{"value":"/ through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":59580,"byte_end":59675,"line_start":1714,"line_end":1714,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":60233,"byte_end":60253,"line_start":1727,"line_end":1727,"column_start":12,"column_end":32},"name":"get_mapped_range_mut","qualname":"<BufferSlice>::get_mapped_range_mut","value":"pub fn get_mapped_range_mut(&Self) -> BufferViewMut","parent":null,"children":[],"decl_id":null,"docs":" Synchronously and immediately map a buffer for writing. If the buffer is not immediately mappable\n through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.\n","sig":null,"attributes":[{"value":"/ Synchronously and immediately map a buffer for writing. If the buffer is not immediately mappable","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":60020,"byte_end":60121,"line_start":1725,"line_end":1725,"column_start":5,"column_end":106}},{"value":"/ through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":60126,"byte_end":60221,"line_start":1726,"line_end":1726,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":60899,"byte_end":60910,"line_start":1752,"line_end":1752,"column_start":12,"column_end":23},"name":"create_view","qualname":"<Texture>::create_view","value":"pub fn create_view(&Self, &TextureViewDescriptor) -> TextureView","parent":null,"children":[],"decl_id":null,"docs":" Creates a view of this texture.\n","sig":null,"attributes":[{"value":"/ Creates a view of this texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":60852,"byte_end":60887,"line_start":1751,"line_end":1751,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61625,"byte_end":61631,"line_start":1779,"line_end":1779,"column_start":12,"column_end":18},"name":"finish","qualname":"<CommandEncoder>::finish","value":"pub fn finish(Self) -> CommandBuffer","parent":null,"children":[],"decl_id":null,"docs":" Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.\n","sig":null,"attributes":[{"value":"/ Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61522,"byte_end":61613,"line_start":1778,"line_end":1778,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61979,"byte_end":61996,"line_start":1789,"line_end":1789,"column_start":12,"column_end":29},"name":"begin_render_pass","qualname":"<CommandEncoder>::begin_render_pass","value":"pub fn begin_render_pass<'a>(&'a mut Self, &RenderPassDescriptor)\n-> RenderPass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a render pass.","sig":null,"attributes":[{"value":"/ Begins recording of a render pass.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61831,"byte_end":61869,"line_start":1786,"line_end":1786,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61874,"byte_end":61877,"line_start":1787,"line_end":1787,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`RenderPass`] object which records a single render pass.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61882,"byte_end":61967,"line_start":1788,"line_end":1788,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62406,"byte_end":62424,"line_start":1802,"line_end":1802,"column_start":12,"column_end":30},"name":"begin_compute_pass","qualname":"<CommandEncoder>::begin_compute_pass","value":"pub fn begin_compute_pass(&mut Self) -> ComputePass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a compute pass.","sig":null,"attributes":[{"value":"/ Begins recording of a compute pass.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62255,"byte_end":62294,"line_start":1799,"line_end":1799,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62299,"byte_end":62302,"line_start":1800,"line_end":1800,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`ComputePass`] object which records a single compute pass.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62307,"byte_end":62394,"line_start":1801,"line_end":1801,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62815,"byte_end":62836,"line_start":1815,"line_end":1815,"column_start":12,"column_end":33},"name":"copy_buffer_to_buffer","qualname":"<CommandEncoder>::copy_buffer_to_buffer","value":"pub fn copy_buffer_to_buffer(&mut Self, &Buffer, BufferAddress, &Buffer,\n                             BufferAddress, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one buffer to another.","sig":null,"attributes":[{"value":"/ Copy data from one buffer to another.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62609,"byte_end":62650,"line_start":1809,"line_end":1809,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62655,"byte_end":62658,"line_start":1810,"line_end":1810,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62663,"byte_end":62675,"line_start":1811,"line_end":1811,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62680,"byte_end":62683,"line_start":1812,"line_end":1812,"column_start":5,"column_end":8}},{"value":"/ - Buffer offsets or copy size not a multiple of [`COPY_BUFFER_ALIGNMENT`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62688,"byte_end":62766,"line_start":1813,"line_end":1813,"column_start":5,"column_end":83}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":62771,"byte_end":62803,"line_start":1814,"line_end":1814,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63552,"byte_end":63574,"line_start":1841,"line_end":1841,"column_start":12,"column_end":34},"name":"copy_buffer_to_texture","qualname":"<CommandEncoder>::copy_buffer_to_texture","value":"pub fn copy_buffer_to_texture(&mut Self, BufferCopyView, TextureCopyView,\n                              Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a buffer to a texture.","sig":null,"attributes":[{"value":"/ Copy data from a buffer to a texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63298,"byte_end":63339,"line_start":1834,"line_end":1834,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63344,"byte_end":63347,"line_start":1835,"line_end":1835,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63352,"byte_end":63364,"line_start":1836,"line_end":1836,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63369,"byte_end":63372,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63377,"byte_end":63409,"line_start":1838,"line_end":1838,"column_start":5,"column_end":37}},{"value":"/ - Copy would overrun texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63414,"byte_end":63447,"line_start":1839,"line_end":1839,"column_start":5,"column_end":38}},{"value":"/ - `source.layout.bytes_per_row` isn't divisible by [`COPY_BYTES_PER_ROW_ALIGNMENT`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63452,"byte_end":63540,"line_start":1840,"line_end":1840,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64153,"byte_end":64175,"line_start":1863,"line_end":1863,"column_start":12,"column_end":34},"name":"copy_texture_to_buffer","qualname":"<CommandEncoder>::copy_texture_to_buffer","value":"pub fn copy_texture_to_buffer(&mut Self, TextureCopyView, BufferCopyView,\n                              Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a texture to a buffer.","sig":null,"attributes":[{"value":"/ Copy data from a texture to a buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63899,"byte_end":63940,"line_start":1856,"line_end":1856,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63945,"byte_end":63948,"line_start":1857,"line_end":1857,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63953,"byte_end":63965,"line_start":1858,"line_end":1858,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63970,"byte_end":63973,"line_start":1859,"line_end":1859,"column_start":5,"column_end":8}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":63978,"byte_end":64010,"line_start":1860,"line_end":1860,"column_start":5,"column_end":37}},{"value":"/ - Copy would overrun texture.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64015,"byte_end":64048,"line_start":1861,"line_end":1861,"column_start":5,"column_end":38}},{"value":"/ - `source.layout.bytes_per_row` isn't divisible by [`COPY_BYTES_PER_ROW_ALIGNMENT`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64053,"byte_end":64141,"line_start":1862,"line_end":1862,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64763,"byte_end":64786,"line_start":1885,"line_end":1885,"column_start":12,"column_end":35},"name":"copy_texture_to_texture","qualname":"<CommandEncoder>::copy_texture_to_texture","value":"pub fn copy_texture_to_texture(&mut Self, TextureCopyView, TextureCopyView,\n                               Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one texture to another.","sig":null,"attributes":[{"value":"/ Copy data from one texture to another.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64500,"byte_end":64542,"line_start":1878,"line_end":1878,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64547,"byte_end":64550,"line_start":1879,"line_end":1879,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64555,"byte_end":64567,"line_start":1880,"line_end":1880,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64572,"byte_end":64575,"line_start":1881,"line_end":1881,"column_start":5,"column_end":8}},{"value":"/ - Textures are not the same type","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64580,"byte_end":64616,"line_start":1882,"line_end":1882,"column_start":5,"column_end":41}},{"value":"/ - If a depth texture, or a multisampled texture, the entire texture must be copied","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64621,"byte_end":64707,"line_start":1883,"line_end":1883,"column_start":5,"column_end":91}},{"value":"/ - Copy would overrun either texture","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":64712,"byte_end":64751,"line_start":1884,"line_end":1884,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65150,"byte_end":65169,"line_start":1901,"line_end":1901,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<CommandEncoder>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65113,"byte_end":65138,"line_start":1900,"line_end":1900,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65369,"byte_end":65385,"line_start":1906,"line_end":1906,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<CommandEncoder>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65294,"byte_end":65357,"line_start":1905,"line_end":1905,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65571,"byte_end":65586,"line_start":1911,"line_end":1911,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<CommandEncoder>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65507,"byte_end":65559,"line_start":1910,"line_end":1910,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66019,"byte_end":66033,"line_start":1921,"line_end":1921,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<RenderPass>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65715,"byte_end":65797,"line_start":1917,"line_end":1917,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65802,"byte_end":65907,"line_start":1918,"line_end":1918,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65912,"byte_end":65915,"line_start":1919,"line_end":1919,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in order of their declaration.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65920,"byte_end":66007,"line_start":1920,"line_end":1920,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66380,"byte_end":66392,"line_start":1933,"line_end":1933,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<RenderPass>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66245,"byte_end":66281,"line_start":1930,"line_end":1930,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66286,"byte_end":66289,"line_start":1931,"line_end":1931,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66294,"byte_end":66368,"line_start":1932,"line_end":1932,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66656,"byte_end":66671,"line_start":1940,"line_end":1940,"column_start":12,"column_end":27},"name":"set_blend_color","qualname":"<RenderPass>::set_blend_color","value":"pub fn set_blend_color(&mut Self, Color)","parent":null,"children":[],"decl_id":null,"docs":" Sets the blend color as used by some of the blending modes.","sig":null,"attributes":[{"value":"/ Sets the blend color as used by some of the blending modes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66509,"byte_end":66572,"line_start":1937,"line_end":1937,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66577,"byte_end":66580,"line_start":1938,"line_end":1938,"column_start":5,"column_end":8}},{"value":"/ Subsequent blending tests will test against this value.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66585,"byte_end":66644,"line_start":1939,"line_end":1939,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66950,"byte_end":66966,"line_start":1948,"line_end":1948,"column_start":12,"column_end":28},"name":"set_index_buffer","qualname":"<RenderPass>::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66749,"byte_end":66782,"line_start":1944,"line_end":1944,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66787,"byte_end":66790,"line_start":1945,"line_end":1945,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderPass::draw_indexed) on this [`RenderPass`] will","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66795,"byte_end":66889,"line_start":1946,"line_end":1946,"column_start":5,"column_end":99}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":66894,"byte_end":66938,"line_start":1947,"line_end":1947,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67621,"byte_end":67638,"line_start":1967,"line_end":1967,"column_start":12,"column_end":29},"name":"set_vertex_buffer","qualname":"<RenderPass>::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":null,"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67198,"byte_end":67235,"line_start":1957,"line_end":1957,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67240,"byte_end":67243,"line_start":1958,"line_end":1958,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67248,"byte_end":67309,"line_start":1959,"line_end":1959,"column_start":5,"column_end":66}},{"value":"/ [`RenderPass`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67314,"byte_end":67387,"line_start":1960,"line_end":1960,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67392,"byte_end":67395,"line_start":1961,"line_end":1961,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67400,"byte_end":67464,"line_start":1962,"line_end":1962,"column_start":5,"column_end":69}},{"value":"/ [`VertexStateDescriptor::vertex_buffers`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67469,"byte_end":67515,"line_start":1963,"line_end":1963,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67520,"byte_end":67523,"line_start":1964,"line_end":1964,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderPass::draw","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67528,"byte_end":67558,"line_start":1965,"line_end":1965,"column_start":5,"column_end":35}},{"value":"/ [`draw_indexed`]: RenderPass::draw_indexed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67563,"byte_end":67609,"line_start":1966,"line_end":1966,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68036,"byte_end":68052,"line_start":1980,"line_end":1980,"column_start":12,"column_end":28},"name":"set_scissor_rect","qualname":"<RenderPass>::set_scissor_rect","value":"pub fn set_scissor_rect(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the scissor region.","sig":null,"attributes":[{"value":"/ Sets the scissor region.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67900,"byte_end":67928,"line_start":1977,"line_end":1977,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67933,"byte_end":67936,"line_start":1978,"line_end":1978,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will discard any fragments that fall outside this region.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":67941,"byte_end":68024,"line_start":1979,"line_end":1979,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68292,"byte_end":68304,"line_start":1987,"line_end":1987,"column_start":12,"column_end":24},"name":"set_viewport","qualname":"<RenderPass>::set_viewport","value":"pub fn set_viewport(&mut Self, f32, f32, f32, f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the viewport region.","sig":null,"attributes":[{"value":"/ Sets the viewport region.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68173,"byte_end":68202,"line_start":1984,"line_end":1984,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68207,"byte_end":68210,"line_start":1985,"line_end":1985,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will draw any fragments in this region.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68215,"byte_end":68280,"line_start":1986,"line_end":1986,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68571,"byte_end":68592,"line_start":1994,"line_end":1994,"column_start":12,"column_end":33},"name":"set_stencil_reference","qualname":"<RenderPass>::set_stencil_reference","value":"pub fn set_stencil_reference(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the stencil reference.","sig":null,"attributes":[{"value":"/ Sets the stencil reference.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68457,"byte_end":68488,"line_start":1991,"line_end":1991,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68493,"byte_end":68496,"line_start":1992,"line_end":1992,"column_start":5,"column_end":8}},{"value":"/ Subsequent stencil tests will test against this value.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68501,"byte_end":68559,"line_start":1993,"line_end":1993,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68842,"byte_end":68846,"line_start":2001,"line_end":2001,"column_start":12,"column_end":16},"name":"draw","qualname":"<RenderPass>::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68683,"byte_end":68737,"line_start":1998,"line_end":1998,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68742,"byte_end":68745,"line_start":1999,"line_end":1999,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68750,"byte_end":68830,"line_start":2000,"line_end":2000,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69014,"byte_end":69033,"line_start":2006,"line_end":2006,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<RenderPass>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":68977,"byte_end":69002,"line_start":2005,"line_end":2005,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69190,"byte_end":69206,"line_start":2011,"line_end":2011,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<RenderPass>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69115,"byte_end":69178,"line_start":2010,"line_end":2010,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69349,"byte_end":69364,"line_start":2016,"line_end":2016,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<RenderPass>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69285,"byte_end":69337,"line_start":2015,"line_end":2015,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69706,"byte_end":69718,"line_start":2024,"line_end":2024,"column_start":12,"column_end":24},"name":"draw_indexed","qualname":"<RenderPass>::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69424,"byte_end":69513,"line_start":2020,"line_end":2020,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69518,"byte_end":69521,"line_start":2021,"line_end":2021,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69526,"byte_end":69620,"line_start":2022,"line_end":2022,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69625,"byte_end":69694,"line_start":2023,"line_end":2023,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70555,"byte_end":70568,"line_start":2043,"line_end":2043,"column_start":12,"column_end":25},"name":"draw_indirect","qualname":"<RenderPass>::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69887,"byte_end":69988,"line_start":2028,"line_end":2028,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":69993,"byte_end":69996,"line_start":2029,"line_end":2029,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70001,"byte_end":70081,"line_start":2030,"line_end":2030,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70086,"byte_end":70089,"line_start":2031,"line_end":2031,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70094,"byte_end":70159,"line_start":2032,"line_end":2032,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70164,"byte_end":70167,"line_start":2033,"line_end":2033,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70172,"byte_end":70183,"line_start":2034,"line_end":2034,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70188,"byte_end":70202,"line_start":2035,"line_end":2035,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70207,"byte_end":70232,"line_start":2036,"line_end":2036,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70237,"byte_end":70298,"line_start":2037,"line_end":2037,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70303,"byte_end":70367,"line_start":2038,"line_end":2038,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70372,"byte_end":70439,"line_start":2039,"line_end":2039,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70444,"byte_end":70521,"line_start":2040,"line_end":2040,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70526,"byte_end":70531,"line_start":2041,"line_end":2041,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70536,"byte_end":70543,"line_start":2042,"line_end":2042,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71641,"byte_end":71662,"line_start":2065,"line_end":2065,"column_start":12,"column_end":33},"name":"draw_indexed_indirect","qualname":"<RenderPass>::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70723,"byte_end":70812,"line_start":2047,"line_end":2047,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70817,"byte_end":70868,"line_start":2048,"line_end":2048,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70873,"byte_end":70876,"line_start":2049,"line_end":2049,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70881,"byte_end":70975,"line_start":2050,"line_end":2050,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":70980,"byte_end":71049,"line_start":2051,"line_end":2051,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71054,"byte_end":71057,"line_start":2052,"line_end":2052,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71062,"byte_end":71127,"line_start":2053,"line_end":2053,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71132,"byte_end":71135,"line_start":2054,"line_end":2054,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71140,"byte_end":71151,"line_start":2055,"line_end":2055,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71156,"byte_end":71170,"line_start":2056,"line_end":2056,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71175,"byte_end":71207,"line_start":2057,"line_end":2057,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71212,"byte_end":71273,"line_start":2058,"line_end":2058,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71278,"byte_end":71342,"line_start":2059,"line_end":2059,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71347,"byte_end":71414,"line_start":2060,"line_end":2060,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71419,"byte_end":71525,"line_start":2061,"line_end":2061,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71530,"byte_end":71607,"line_start":2062,"line_end":2062,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71612,"byte_end":71617,"line_start":2063,"line_end":2063,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71622,"byte_end":71629,"line_start":2064,"line_end":2064,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71999,"byte_end":72014,"line_start":2076,"line_end":2076,"column_start":12,"column_end":27},"name":"execute_bundles","qualname":"<RenderPass>::execute_bundles","value":"pub fn execute_bundles<I: Iterator<Item = &'a RenderBundle>>(&mut Self, I)","parent":null,"children":[],"decl_id":null,"docs":" Execute a [render bundle][RenderBundle], which is a set of pre-recorded commands\n that can be run together.\n","sig":null,"attributes":[{"value":"/ Execute a [render bundle][RenderBundle], which is a set of pre-recorded commands","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71869,"byte_end":71953,"line_start":2074,"line_end":2074,"column_start":5,"column_end":89}},{"value":"/ that can be run together.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":71958,"byte_end":71987,"line_start":2075,"line_end":2075,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73110,"byte_end":73129,"line_start":2102,"line_end":2102,"column_start":12,"column_end":31},"name":"multi_draw_indirect","qualname":"<RenderPass>::multi_draw_indirect","value":"pub fn multi_draw_indirect(&mut Self, &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.\n `count` draw calls are issued.","sig":null,"attributes":[{"value":"/ Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72316,"byte_end":72431,"line_start":2084,"line_end":2084,"column_start":5,"column_end":120}},{"value":"/ `count` draw calls are issued.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72436,"byte_end":72470,"line_start":2085,"line_end":2085,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72475,"byte_end":72478,"line_start":2086,"line_end":2086,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72483,"byte_end":72563,"line_start":2087,"line_end":2087,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72568,"byte_end":72571,"line_start":2088,"line_end":2088,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72576,"byte_end":72641,"line_start":2089,"line_end":2089,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72646,"byte_end":72649,"line_start":2090,"line_end":2090,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72654,"byte_end":72665,"line_start":2091,"line_end":2091,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72670,"byte_end":72684,"line_start":2092,"line_end":2092,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72689,"byte_end":72714,"line_start":2093,"line_end":2093,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72719,"byte_end":72780,"line_start":2094,"line_end":2094,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72785,"byte_end":72849,"line_start":2095,"line_end":2095,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72854,"byte_end":72921,"line_start":2096,"line_end":2096,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72926,"byte_end":73003,"line_start":2097,"line_end":2097,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73008,"byte_end":73013,"line_start":2098,"line_end":2098,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73018,"byte_end":73025,"line_start":2099,"line_end":2099,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73030,"byte_end":73033,"line_start":2100,"line_end":2100,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73038,"byte_end":73098,"line_start":2101,"line_end":2101,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74388,"byte_end":74415,"line_start":2132,"line_end":2132,"column_start":12,"column_end":39},"name":"multi_draw_indexed_indirect","qualname":"<RenderPass>::multi_draw_indexed_indirect","value":"pub fn multi_draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Disptaches multiple draw calls from the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`. `count` draw calls are issued.","sig":null,"attributes":[{"value":"/ Disptaches multiple draw calls from the active index buffer and the active vertex buffers,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73361,"byte_end":73455,"line_start":2112,"line_end":2112,"column_start":5,"column_end":99}},{"value":"/ based on the contents of the `indirect_buffer`. `count` draw calls are issued.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73460,"byte_end":73542,"line_start":2113,"line_end":2113,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73547,"byte_end":73550,"line_start":2114,"line_end":2114,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73555,"byte_end":73649,"line_start":2115,"line_end":2115,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73654,"byte_end":73723,"line_start":2116,"line_end":2116,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73728,"byte_end":73731,"line_start":2117,"line_end":2117,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73736,"byte_end":73801,"line_start":2118,"line_end":2118,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73806,"byte_end":73809,"line_start":2119,"line_end":2119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73814,"byte_end":73825,"line_start":2120,"line_end":2120,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73830,"byte_end":73844,"line_start":2121,"line_end":2121,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73849,"byte_end":73881,"line_start":2122,"line_end":2122,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73886,"byte_end":73947,"line_start":2123,"line_end":2123,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":73952,"byte_end":74016,"line_start":2124,"line_end":2124,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74021,"byte_end":74088,"line_start":2125,"line_end":2125,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74093,"byte_end":74199,"line_start":2126,"line_end":2126,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74204,"byte_end":74281,"line_start":2127,"line_end":2127,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74286,"byte_end":74291,"line_start":2128,"line_end":2128,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74296,"byte_end":74303,"line_start":2129,"line_end":2129,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74308,"byte_end":74311,"line_start":2130,"line_end":2130,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74316,"byte_end":74376,"line_start":2131,"line_end":2131,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":76060,"byte_end":76085,"line_start":2175,"line_end":2175,"column_start":12,"column_end":37},"name":"multi_draw_indirect_count","qualname":"<RenderPass>::multi_draw_indirect_count","value":"pub fn multi_draw_indirect_count(&mut Self, &'a Buffer, BufferAddress,\n                                 &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.\n The count buffer is read to determine how many draws to issue.","sig":null,"attributes":[{"value":"/ Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74791,"byte_end":74906,"line_start":2145,"line_end":2145,"column_start":5,"column_end":120}},{"value":"/ The count buffer is read to determine how many draws to issue.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74911,"byte_end":74977,"line_start":2146,"line_end":2146,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74982,"byte_end":74985,"line_start":2147,"line_end":2147,"column_start":5,"column_end":8}},{"value":"/ The indirect buffer must be long enough to account for `max_count` draws, however only `count` will","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74990,"byte_end":75093,"line_start":2148,"line_end":2148,"column_start":5,"column_end":108}},{"value":"/ draws will be read. If `count` is greater than `max_count`, `max_count` will be used.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75098,"byte_end":75187,"line_start":2149,"line_end":2149,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75192,"byte_end":75195,"line_start":2150,"line_end":2150,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75200,"byte_end":75280,"line_start":2151,"line_end":2151,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75285,"byte_end":75288,"line_start":2152,"line_end":2152,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75293,"byte_end":75358,"line_start":2153,"line_end":2153,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75363,"byte_end":75366,"line_start":2154,"line_end":2154,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75371,"byte_end":75382,"line_start":2155,"line_end":2155,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75387,"byte_end":75401,"line_start":2156,"line_end":2156,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75406,"byte_end":75431,"line_start":2157,"line_end":2157,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75436,"byte_end":75497,"line_start":2158,"line_end":2158,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75502,"byte_end":75566,"line_start":2159,"line_end":2159,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75571,"byte_end":75638,"line_start":2160,"line_end":2160,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75643,"byte_end":75720,"line_start":2161,"line_end":2161,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75725,"byte_end":75730,"line_start":2162,"line_end":2162,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75735,"byte_end":75742,"line_start":2163,"line_end":2163,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75747,"byte_end":75750,"line_start":2164,"line_end":2164,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75755,"byte_end":75815,"line_start":2165,"line_end":2165,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75820,"byte_end":75823,"line_start":2166,"line_end":2166,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `count_buffer` is the following:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75828,"byte_end":75890,"line_start":2167,"line_end":2167,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75895,"byte_end":75898,"line_start":2168,"line_end":2168,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75903,"byte_end":75914,"line_start":2169,"line_end":2169,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75919,"byte_end":75933,"line_start":2170,"line_end":2170,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirectCount {","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75938,"byte_end":75968,"line_start":2171,"line_end":2171,"column_start":5,"column_end":35}},{"value":"/     count: u32, // Number of draw calls to issue.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":75973,"byte_end":76026,"line_start":2172,"line_end":2172,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":76031,"byte_end":76036,"line_start":2173,"line_end":2173,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":76041,"byte_end":76048,"line_start":2174,"line_end":2174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78001,"byte_end":78034,"line_start":2224,"line_end":2224,"column_start":12,"column_end":45},"name":"multi_draw_indexed_indirect_count","qualname":"<RenderPass>::multi_draw_indexed_indirect_count","value":"pub fn multi_draw_indexed_indirect_count(&mut Self, &'a Buffer, BufferAddress,\n                                         &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Disptaches multiple draw calls from the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`. The count buffer is read to determine how many draws to issue.","sig":null,"attributes":[{"value":"/ Disptaches multiple draw calls from the active index buffer and the active vertex buffers,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":76492,"byte_end":76586,"line_start":2192,"line_end":2192,"column_start":5,"column_end":99}},{"value":"/ based on the contents of the `indirect_buffer`. The count buffer is read to determine how many draws to issue.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":76591,"byte_end":76705,"line_start":2193,"line_end":2193,"column_start":5,"column_end":119}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":76710,"byte_end":76713,"line_start":2194,"line_end":2194,"column_start":5,"column_end":8}},{"value":"/ The indirect buffer must be long enough to account for `max_count` draws, however only `count` will","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":76718,"byte_end":76821,"line_start":2195,"line_end":2195,"column_start":5,"column_end":108}},{"value":"/ draws will be read. If `count` is greater than `max_count`, `max_count` will be used.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":76826,"byte_end":76915,"line_start":2196,"line_end":2196,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":76920,"byte_end":76923,"line_start":2197,"line_end":2197,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":76928,"byte_end":77022,"line_start":2198,"line_end":2198,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77027,"byte_end":77096,"line_start":2199,"line_end":2199,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77101,"byte_end":77104,"line_start":2200,"line_end":2200,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77109,"byte_end":77174,"line_start":2201,"line_end":2201,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77179,"byte_end":77182,"line_start":2202,"line_end":2202,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77187,"byte_end":77198,"line_start":2203,"line_end":2203,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77203,"byte_end":77217,"line_start":2204,"line_end":2204,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77222,"byte_end":77254,"line_start":2205,"line_end":2205,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77259,"byte_end":77320,"line_start":2206,"line_end":2206,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77325,"byte_end":77389,"line_start":2207,"line_end":2207,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77394,"byte_end":77461,"line_start":2208,"line_end":2208,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77466,"byte_end":77572,"line_start":2209,"line_end":2209,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77577,"byte_end":77654,"line_start":2210,"line_end":2210,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77659,"byte_end":77664,"line_start":2211,"line_end":2211,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77669,"byte_end":77676,"line_start":2212,"line_end":2212,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77681,"byte_end":77684,"line_start":2213,"line_end":2213,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77689,"byte_end":77749,"line_start":2214,"line_end":2214,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77754,"byte_end":77757,"line_start":2215,"line_end":2215,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `count_buffer` is the following:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77762,"byte_end":77824,"line_start":2216,"line_end":2216,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77829,"byte_end":77832,"line_start":2217,"line_end":2217,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77837,"byte_end":77848,"line_start":2218,"line_end":2218,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77853,"byte_end":77867,"line_start":2219,"line_end":2219,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirectCount {","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77872,"byte_end":77909,"line_start":2220,"line_end":2220,"column_start":5,"column_end":42}},{"value":"/     count: u32, // Number of draw calls to issue.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77914,"byte_end":77967,"line_start":2221,"line_end":2221,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77972,"byte_end":77977,"line_start":2222,"line_end":2222,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":77982,"byte_end":77989,"line_start":2223,"line_end":2223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79784,"byte_end":79802,"line_start":2272,"line_end":2272,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<RenderPass>::set_push_constants","value":"pub fn set_push_constants(&mut Self, wgt::ShaderStage, u32, &[u32])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data.","sig":null,"attributes":[{"value":"/ Set push constant data.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78574,"byte_end":78601,"line_start":2244,"line_end":2244,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78606,"byte_end":78609,"line_start":2245,"line_end":2245,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78614,"byte_end":78701,"line_start":2246,"line_end":2246,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78706,"byte_end":78709,"line_start":2247,"line_end":2247,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78714,"byte_end":78810,"line_start":2248,"line_end":2248,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78815,"byte_end":78908,"line_start":2249,"line_end":2249,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78913,"byte_end":78926,"line_start":2250,"line_end":2250,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78931,"byte_end":78934,"line_start":2251,"line_end":2251,"column_start":5,"column_end":8}},{"value":"/ For each byte in the range of push constant data written, the union of the stages of all push constant","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78939,"byte_end":79045,"line_start":2252,"line_end":2252,"column_start":5,"column_end":111}},{"value":"/ ranges that covers that byte must be exactly `stages`. There's no good way of explaining this simply,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79050,"byte_end":79155,"line_start":2253,"line_end":2253,"column_start":5,"column_end":110}},{"value":"/ so here are some examples:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79160,"byte_end":79190,"line_start":2254,"line_end":2254,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79195,"byte_end":79198,"line_start":2255,"line_end":2255,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79203,"byte_end":79214,"line_start":2256,"line_end":2256,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79219,"byte_end":79244,"line_start":2257,"line_end":2257,"column_start":5,"column_end":30}},{"value":"/ - 0..4 Vertex","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79249,"byte_end":79266,"line_start":2258,"line_end":2258,"column_start":5,"column_end":22}},{"value":"/ - 4..8 Fragment","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79271,"byte_end":79290,"line_start":2259,"line_end":2259,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79295,"byte_end":79302,"line_start":2260,"line_end":2260,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79307,"byte_end":79310,"line_start":2261,"line_end":2261,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in two set_push_constants calls. First for the `Vertex` range, second for the `Fragment` range.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79315,"byte_end":79444,"line_start":2262,"line_end":2262,"column_start":5,"column_end":134}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79449,"byte_end":79452,"line_start":2263,"line_end":2263,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79457,"byte_end":79468,"line_start":2264,"line_end":2264,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79473,"byte_end":79498,"line_start":2265,"line_end":2265,"column_start":5,"column_end":30}},{"value":"/ - 0..8  Vertex","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79503,"byte_end":79521,"line_start":2266,"line_end":2266,"column_start":5,"column_end":23}},{"value":"/ - 4..12 Fragment","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79526,"byte_end":79546,"line_start":2267,"line_end":2267,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79551,"byte_end":79558,"line_start":2268,"line_end":2268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79563,"byte_end":79566,"line_start":2269,"line_end":2269,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in three set_push_constants calls. First for the `Vertex` only range 0..4, second","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79571,"byte_end":79686,"line_start":2270,"line_end":2270,"column_start":5,"column_end":120}},{"value":"/ for the `Vertex | Fragment` range 4..8, third for the `Fragment` range 8..12.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79691,"byte_end":79772,"line_start":2271,"line_end":2271,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80518,"byte_end":80532,"line_start":2292,"line_end":2292,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<ComputePass>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when the `dispatch()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80210,"byte_end":80292,"line_start":2288,"line_end":2288,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when the `dispatch()` function is called must match the layout of this bind group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80297,"byte_end":80406,"line_start":2289,"line_end":2289,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80411,"byte_end":80414,"line_start":2290,"line_end":2290,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in order of their declaration.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80419,"byte_end":80506,"line_start":2291,"line_end":2291,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80799,"byte_end":80811,"line_start":2302,"line_end":2302,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<ComputePass>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a ComputePipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active compute pipeline.\n","sig":null,"attributes":[{"value":"/ Sets the active compute pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80750,"byte_end":80787,"line_start":2301,"line_end":2301,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80972,"byte_end":80991,"line_start":2307,"line_end":2307,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<ComputePass>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80935,"byte_end":80960,"line_start":2306,"line_end":2306,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":81148,"byte_end":81164,"line_start":2312,"line_end":2312,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<ComputePass>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":81073,"byte_end":81136,"line_start":2311,"line_end":2311,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":81307,"byte_end":81322,"line_start":2317,"line_end":2317,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<ComputePass>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":81243,"byte_end":81295,"line_start":2316,"line_end":2316,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":81530,"byte_end":81538,"line_start":2324,"line_end":2324,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<ComputePass>::dispatch","value":"pub fn dispatch(&mut Self, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations.","sig":null,"attributes":[{"value":"/ Dispatches compute work operations.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":81382,"byte_end":81421,"line_start":2321,"line_end":2321,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":81426,"byte_end":81429,"line_start":2322,"line_end":2322,"column_start":5,"column_end":8}},{"value":"/ `x`, `y` and `z` denote the number of work groups to dispatch in each dimension.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":81434,"byte_end":81518,"line_start":2323,"line_end":2323,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":81745,"byte_end":81762,"line_start":2329,"line_end":2329,"column_start":12,"column_end":29},"name":"dispatch_indirect","qualname":"<ComputePass>::dispatch_indirect","value":"pub fn dispatch_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations, based on the contents of the `indirect_buffer`.\n","sig":null,"attributes":[{"value":"/ Dispatches compute work operations, based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":81646,"byte_end":81733,"line_start":2328,"line_end":2328,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82466,"byte_end":82484,"line_start":2347,"line_end":2347,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<ComputePass>::set_push_constants","value":"pub fn set_push_constants(&mut Self, u32, &[u32])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data.","sig":null,"attributes":[{"value":"/ Set push constant data.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82102,"byte_end":82129,"line_start":2340,"line_end":2340,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82134,"byte_end":82137,"line_start":2341,"line_end":2341,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82142,"byte_end":82229,"line_start":2342,"line_end":2342,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82234,"byte_end":82237,"line_start":2343,"line_end":2343,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82242,"byte_end":82338,"line_start":2344,"line_end":2344,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82343,"byte_end":82436,"line_start":2345,"line_end":2345,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82441,"byte_end":82454,"line_start":2346,"line_end":2346,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82978,"byte_end":82984,"line_start":2364,"line_end":2364,"column_start":12,"column_end":18},"name":"finish","qualname":"<RenderBundleEncoder>::finish","value":"pub fn finish(Self, &RenderBundleDescriptor) -> RenderBundle","parent":null,"children":[],"decl_id":null,"docs":" Finishes recording and returns a [`RenderBundle`] that can be executed in other render passes.\n","sig":null,"attributes":[{"value":"/ Finishes recording and returns a [`RenderBundle`] that can be executed in other render passes.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82868,"byte_end":82966,"line_start":2363,"line_end":2363,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":83522,"byte_end":83536,"line_start":2375,"line_end":2375,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<RenderBundleEncoder>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":83218,"byte_end":83300,"line_start":2371,"line_end":2371,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":83305,"byte_end":83410,"line_start":2372,"line_end":2372,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":83415,"byte_end":83418,"line_start":2373,"line_end":2373,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in order of their declaration.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":83423,"byte_end":83510,"line_start":2374,"line_end":2374,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":83883,"byte_end":83895,"line_start":2387,"line_end":2387,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<RenderBundleEncoder>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":83748,"byte_end":83784,"line_start":2384,"line_end":2384,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":83789,"byte_end":83792,"line_start":2385,"line_end":2385,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":83797,"byte_end":83871,"line_start":2386,"line_end":2386,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84231,"byte_end":84247,"line_start":2395,"line_end":2395,"column_start":12,"column_end":28},"name":"set_index_buffer","qualname":"<RenderBundleEncoder>::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84012,"byte_end":84045,"line_start":2391,"line_end":2391,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84050,"byte_end":84053,"line_start":2392,"line_end":2392,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderBundleEncoder::draw_indexed) on this [`RenderBundleEncoder`] will","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84058,"byte_end":84170,"line_start":2393,"line_end":2393,"column_start":5,"column_end":117}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84175,"byte_end":84219,"line_start":2394,"line_end":2394,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84929,"byte_end":84946,"line_start":2414,"line_end":2414,"column_start":12,"column_end":29},"name":"set_vertex_buffer","qualname":"<RenderBundleEncoder>::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":null,"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84479,"byte_end":84516,"line_start":2404,"line_end":2404,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84521,"byte_end":84524,"line_start":2405,"line_end":2405,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84529,"byte_end":84590,"line_start":2406,"line_end":2406,"column_start":5,"column_end":66}},{"value":"/ [`RenderBundleEncoder`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84595,"byte_end":84677,"line_start":2407,"line_end":2407,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84682,"byte_end":84685,"line_start":2408,"line_end":2408,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84690,"byte_end":84754,"line_start":2409,"line_end":2409,"column_start":5,"column_end":69}},{"value":"/ [`VertexStateDescriptor::vertex_buffers`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84759,"byte_end":84805,"line_start":2410,"line_end":2410,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84810,"byte_end":84813,"line_start":2411,"line_end":2411,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderBundleEncoder::draw","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84818,"byte_end":84857,"line_start":2412,"line_end":2412,"column_start":5,"column_end":44}},{"value":"/ [`draw_indexed`]: RenderBundleEncoder::draw_indexed","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":84862,"byte_end":84917,"line_start":2413,"line_end":2413,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":85376,"byte_end":85380,"line_start":2427,"line_end":2427,"column_start":12,"column_end":16},"name":"draw","qualname":"<RenderBundleEncoder>::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":85208,"byte_end":85262,"line_start":2424,"line_end":2424,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":85267,"byte_end":85270,"line_start":2425,"line_end":2425,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":85275,"byte_end":85364,"line_start":2426,"line_end":2426,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":85811,"byte_end":85823,"line_start":2435,"line_end":2435,"column_start":12,"column_end":24},"name":"draw_indexed","qualname":"<RenderBundleEncoder>::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":85511,"byte_end":85600,"line_start":2431,"line_end":2431,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":85605,"byte_end":85608,"line_start":2432,"line_end":2432,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderBundleEncoder::set_index_buffer`], while the active","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":85613,"byte_end":85716,"line_start":2433,"line_end":2433,"column_start":5,"column_end":108}},{"value":"/ vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":85721,"byte_end":85799,"line_start":2434,"line_end":2434,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86669,"byte_end":86682,"line_start":2454,"line_end":2454,"column_start":12,"column_end":25},"name":"draw_indirect","qualname":"<RenderBundleEncoder>::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":85992,"byte_end":86093,"line_start":2439,"line_end":2439,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86098,"byte_end":86101,"line_start":2440,"line_end":2440,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86106,"byte_end":86195,"line_start":2441,"line_end":2441,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86200,"byte_end":86203,"line_start":2442,"line_end":2442,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86208,"byte_end":86273,"line_start":2443,"line_end":2443,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86278,"byte_end":86281,"line_start":2444,"line_end":2444,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86286,"byte_end":86297,"line_start":2445,"line_end":2445,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86302,"byte_end":86316,"line_start":2446,"line_end":2446,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86321,"byte_end":86346,"line_start":2447,"line_end":2447,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86351,"byte_end":86412,"line_start":2448,"line_end":2448,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86417,"byte_end":86481,"line_start":2449,"line_end":2449,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86486,"byte_end":86553,"line_start":2450,"line_end":2450,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86558,"byte_end":86635,"line_start":2451,"line_end":2451,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86640,"byte_end":86645,"line_start":2452,"line_end":2452,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86650,"byte_end":86657,"line_start":2453,"line_end":2453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87773,"byte_end":87794,"line_start":2476,"line_end":2476,"column_start":12,"column_end":33},"name":"draw_indexed_indirect","qualname":"<RenderBundleEncoder>::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86837,"byte_end":86926,"line_start":2458,"line_end":2458,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86931,"byte_end":86982,"line_start":2459,"line_end":2459,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86987,"byte_end":86990,"line_start":2460,"line_end":2460,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderBundleEncoder::set_index_buffer`], while the active","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":86995,"byte_end":87098,"line_start":2461,"line_end":2461,"column_start":5,"column_end":108}},{"value":"/ vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87103,"byte_end":87181,"line_start":2462,"line_end":2462,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87186,"byte_end":87189,"line_start":2463,"line_end":2463,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87194,"byte_end":87259,"line_start":2464,"line_end":2464,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87264,"byte_end":87267,"line_start":2465,"line_end":2465,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87272,"byte_end":87283,"line_start":2466,"line_end":2466,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87288,"byte_end":87302,"line_start":2467,"line_end":2467,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87307,"byte_end":87339,"line_start":2468,"line_end":2468,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87344,"byte_end":87405,"line_start":2469,"line_end":2469,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87410,"byte_end":87474,"line_start":2470,"line_end":2470,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87479,"byte_end":87546,"line_start":2471,"line_end":2471,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87551,"byte_end":87657,"line_start":2472,"line_end":2472,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87662,"byte_end":87739,"line_start":2473,"line_end":2473,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87744,"byte_end":87749,"line_start":2474,"line_end":2474,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":87754,"byte_end":87761,"line_start":2475,"line_end":2475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89345,"byte_end":89363,"line_start":2516,"line_end":2516,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<RenderBundleEncoder>::set_push_constants","value":"pub fn set_push_constants(&mut Self, wgt::ShaderStage, u32, &[u32])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data.","sig":null,"attributes":[{"value":"/ Set push constant data.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88135,"byte_end":88162,"line_start":2488,"line_end":2488,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88167,"byte_end":88170,"line_start":2489,"line_end":2489,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88175,"byte_end":88262,"line_start":2490,"line_end":2490,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88267,"byte_end":88270,"line_start":2491,"line_end":2491,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88275,"byte_end":88371,"line_start":2492,"line_end":2492,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88376,"byte_end":88469,"line_start":2493,"line_end":2493,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88474,"byte_end":88487,"line_start":2494,"line_end":2494,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88492,"byte_end":88495,"line_start":2495,"line_end":2495,"column_start":5,"column_end":8}},{"value":"/ For each byte in the range of push constant data written, the union of the stages of all push constant","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88500,"byte_end":88606,"line_start":2496,"line_end":2496,"column_start":5,"column_end":111}},{"value":"/ ranges that covers that byte must be exactly `stages`. There's no good way of explaining this simply,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88611,"byte_end":88716,"line_start":2497,"line_end":2497,"column_start":5,"column_end":110}},{"value":"/ so here are some examples:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88721,"byte_end":88751,"line_start":2498,"line_end":2498,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88756,"byte_end":88759,"line_start":2499,"line_end":2499,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88764,"byte_end":88775,"line_start":2500,"line_end":2500,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88780,"byte_end":88805,"line_start":2501,"line_end":2501,"column_start":5,"column_end":30}},{"value":"/ - 0..4 Vertex","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88810,"byte_end":88827,"line_start":2502,"line_end":2502,"column_start":5,"column_end":22}},{"value":"/ - 4..8 Fragment","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88832,"byte_end":88851,"line_start":2503,"line_end":2503,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88856,"byte_end":88863,"line_start":2504,"line_end":2504,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88868,"byte_end":88871,"line_start":2505,"line_end":2505,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in two set_push_constants calls. First for the `Vertex` range, second for the `Fragment` range.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88876,"byte_end":89005,"line_start":2506,"line_end":2506,"column_start":5,"column_end":134}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89010,"byte_end":89013,"line_start":2507,"line_end":2507,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89018,"byte_end":89029,"line_start":2508,"line_end":2508,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89034,"byte_end":89059,"line_start":2509,"line_end":2509,"column_start":5,"column_end":30}},{"value":"/ - 0..8  Vertex","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89064,"byte_end":89082,"line_start":2510,"line_end":2510,"column_start":5,"column_end":23}},{"value":"/ - 4..12 Fragment","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89087,"byte_end":89107,"line_start":2511,"line_end":2511,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89112,"byte_end":89119,"line_start":2512,"line_end":2512,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89124,"byte_end":89127,"line_start":2513,"line_end":2513,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in three set_push_constants calls. First for the `Vertex` only range 0..4, second","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89132,"byte_end":89247,"line_start":2514,"line_end":2514,"column_start":5,"column_end":120}},{"value":"/ for the `Vertex | Fragment` range 4..8, third for the `Fragment` range 8..12.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89252,"byte_end":89333,"line_start":2515,"line_end":2515,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89587,"byte_end":89599,"line_start":2523,"line_end":2523,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Queue>::write_buffer","value":"pub fn write_buffer(&Self, &Buffer, BufferAddress, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Schedule a data write into `buffer` starting at `offset`.\n","sig":null,"attributes":[{"value":"/ Schedule a data write into `buffer` starting at `offset`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89514,"byte_end":89575,"line_start":2522,"line_end":2522,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89814,"byte_end":89827,"line_start":2528,"line_end":2528,"column_start":12,"column_end":25},"name":"write_texture","qualname":"<Queue>::write_texture","value":"pub fn write_texture(&Self, TextureCopyView, &[u8], TextureDataLayout,\n                     Extent3d)","parent":null,"children":[],"decl_id":null,"docs":" Schedule a data write into `texture`.\n","sig":null,"attributes":[{"value":"/ Schedule a data write into `texture`.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89761,"byte_end":89802,"line_start":2527,"line_end":2527,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90154,"byte_end":90160,"line_start":2539,"line_end":2539,"column_start":12,"column_end":18},"name":"submit","qualname":"<Queue>::submit","value":"pub fn submit<I: IntoIterator<Item = CommandBuffer>>(&Self, I)","parent":null,"children":[],"decl_id":null,"docs":" Submits a series of finished command buffers for execution.\n","sig":null,"attributes":[{"value":"/ Submits a series of finished command buffers for execution.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90079,"byte_end":90142,"line_start":2538,"line_end":2538,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":91060,"byte_end":91077,"line_start":2566,"line_end":2566,"column_start":12,"column_end":29},"name":"get_current_frame","qualname":"<SwapChain>::get_current_frame","value":"pub fn get_current_frame(&mut Self) -> Result<SwapChainFrame, SwapChainError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next texture to be presented by the swapchain for drawing.","sig":null,"attributes":[{"value":"/ Returns the next texture to be presented by the swapchain for drawing.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90668,"byte_end":90742,"line_start":2559,"line_end":2559,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90747,"byte_end":90750,"line_start":2560,"line_end":2560,"column_start":5,"column_end":8}},{"value":"/ When the [`SwapChainFrame`] returned by this method is dropped, the swapchain will present","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90755,"byte_end":90849,"line_start":2561,"line_end":2561,"column_start":5,"column_end":99}},{"value":"/ the texture to the associated [`Surface`].","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90854,"byte_end":90900,"line_start":2562,"line_end":2562,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90905,"byte_end":90908,"line_start":2563,"line_end":2563,"column_start":5,"column_end":8}},{"value":"/ If a SwapChainFrame referencing this surface is alive when the swapchain is recreated,","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90913,"byte_end":91003,"line_start":2564,"line_end":2564,"column_start":5,"column_end":95}},{"value":"/ recreating the swapchain will panic.","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":91008,"byte_end":91048,"line_start":2565,"line_end":2565,"column_start":5,"column_end":45}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":93022,"byte_end":93029,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":94272,"byte_end":94279,"line_start":54,"line_end":54,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":94677,"byte_end":94688,"line_start":67,"line_end":67,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":96763,"byte_end":96773,"line_start":127,"line_end":127,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":101511,"byte_end":101521,"line_start":267,"line_end":267,"column_start":60,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":103503,"byte_end":103522,"line_start":323,"line_end":323,"column_start":56,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":109181,"byte_end":109188,"line_start":500,"line_end":500,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":138694,"byte_end":138700,"line_start":1350,"line_end":1350,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/native_gpu_future.rs","byte_start":139414,"byte_end":139423,"line_start":27,"line_end":27,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/native_gpu_future.rs","byte_start":139889,"byte_end":139908,"line_start":43,"line_end":43,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145681,"byte_end":145692,"line_start":37,"line_end":37,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":142636,"byte_end":142642,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":15556,"byte_end":15566,"line_start":461,"line_end":461,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18515,"byte_end":18522,"line_start":567,"line_end":567,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19827,"byte_end":19842,"line_start":606,"line_end":606,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20463,"byte_end":20472,"line_start":626,"line_end":626,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21007,"byte_end":21019,"line_start":645,"line_end":645,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21966,"byte_end":21980,"line_start":678,"line_end":678,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22488,"byte_end":22502,"line_start":696,"line_end":696,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22645,"byte_end":22659,"line_start":704,"line_end":704,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23380,"byte_end":23395,"line_start":727,"line_end":727,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23539,"byte_end":23554,"line_start":735,"line_end":735,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24389,"byte_end":24402,"line_start":759,"line_end":759,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26671,"byte_end":26683,"line_start":827,"line_end":827,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28599,"byte_end":28605,"line_start":883,"line_end":883,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29132,"byte_end":29142,"line_start":900,"line_end":900,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":36294,"byte_end":36311,"line_start":1057,"line_end":1057,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44383,"byte_end":44397,"line_start":1247,"line_end":1247,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44930,"byte_end":44944,"line_start":1258,"line_end":1258,"column_start":16,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44954,"byte_end":44962,"line_start":1260,"line_end":1260,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":588},{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47303,"byte_end":47310,"line_start":1333,"line_end":1333,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49592,"byte_end":49598,"line_start":1395,"line_end":1395,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54707,"byte_end":54713,"line_start":1536,"line_end":1536,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54962,"byte_end":54980,"line_start":1548,"line_end":1548,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55128,"byte_end":55146,"line_start":1554,"line_end":1554,"column_start":16,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55291,"byte_end":55307,"line_start":1560,"line_end":1560,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55477,"byte_end":55493,"line_start":1566,"line_end":1566,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":56525,"byte_end":56535,"line_start":1609,"line_end":1609,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":56650,"byte_end":56663,"line_start":1617,"line_end":1617,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":56940,"byte_end":56953,"line_start":1630,"line_end":1630,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":57052,"byte_end":57062,"line_start":1636,"line_end":1636,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":57258,"byte_end":57271,"line_start":1646,"line_end":1646,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":57458,"byte_end":57464,"line_start":1656,"line_end":1656,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58134,"byte_end":58145,"line_start":1675,"line_end":1675,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":60698,"byte_end":60704,"line_start":1742,"line_end":1742,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":60838,"byte_end":60845,"line_start":1750,"line_end":1750,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61171,"byte_end":61178,"line_start":1761,"line_end":1761,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61336,"byte_end":61347,"line_start":1769,"line_end":1769,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61501,"byte_end":61515,"line_start":1777,"line_end":1777,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65694,"byte_end":65704,"line_start":1916,"line_end":1916,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72295,"byte_end":72305,"line_start":2083,"line_end":2083,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74770,"byte_end":74780,"line_start":2144,"line_end":2144,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78553,"byte_end":78563,"line_start":2243,"line_end":2243,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79954,"byte_end":79964,"line_start":2277,"line_end":2277,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80188,"byte_end":80199,"line_start":2287,"line_end":2287,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82080,"byte_end":82091,"line_start":2339,"line_end":2339,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82602,"byte_end":82613,"line_start":2352,"line_end":2352,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82838,"byte_end":82857,"line_start":2362,"line_end":2362,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88105,"byte_end":88124,"line_start":2487,"line_end":2487,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89502,"byte_end":89507,"line_start":2521,"line_end":2521,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90459,"byte_end":90475,"line_start":2550,"line_end":2550,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90652,"byte_end":90661,"line_start":2558,"line_end":2558,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":297,"byte_end":301,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":263}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":93022,"byte_end":93029,"line_start":17,"line_end":17,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":38},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":94272,"byte_end":94279,"line_start":54,"line_end":54,"column_start":21,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":38},"to":{"krate":2,"index":6599}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":94677,"byte_end":94688,"line_start":67,"line_end":67,"column_start":61,"column_end":72},"kind":{"Impl":{"id":2}},"from":{"krate":33,"index":327},"to":{"krate":0,"index":398}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":96763,"byte_end":96773,"line_start":127,"line_end":127,"column_start":56,"column_end":66},"kind":{"Impl":{"id":3}},"from":{"krate":33,"index":457},"to":{"krate":0,"index":408}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":101511,"byte_end":101521,"line_start":267,"line_end":267,"column_start":60,"column_end":70},"kind":{"Impl":{"id":4}},"from":{"krate":33,"index":457},"to":{"krate":0,"index":423}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":103503,"byte_end":103522,"line_start":323,"line_end":323,"column_start":56,"column_end":75},"kind":{"Impl":{"id":5}},"from":{"krate":33,"index":2762},"to":{"krate":0,"index":408}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":109181,"byte_end":109188,"line_start":500,"line_end":500,"column_start":25,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":38},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/direct.rs","byte_start":138694,"byte_end":138700,"line_start":1350,"line_end":1350,"column_start":32,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":2,"index":32474},"to":{"krate":0,"index":217}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/native_gpu_future.rs","byte_start":139414,"byte_end":139423,"line_start":27,"line_end":27,"column_start":20,"column_end":29},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":245},"to":{"krate":2,"index":9131}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/backend/native_gpu_future.rs","byte_start":139889,"byte_end":139908,"line_start":43,"line_end":43,"column_start":9,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":249},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/belt.rs","byte_start":145681,"byte_end":145692,"line_start":37,"line_end":37,"column_start":6,"column_end":17},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/util/mod.rs","byte_start":142636,"byte_end":142642,"line_start":61,"line_end":61,"column_start":27,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":819},"to":{"krate":0,"index":314}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":4333,"byte_end":4344,"line_start":130,"line_end":130,"column_start":38,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":408},"to":{"krate":0,"index":423}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":4989,"byte_end":4994,"line_start":152,"line_end":152,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":6599},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":4997,"byte_end":5001,"line_start":152,"line_end":152,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":2045},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5004,"byte_end":5009,"line_start":152,"line_end":152,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2050},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":5012,"byte_end":5016,"line_start":152,"line_end":152,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2057},"to":{"krate":0,"index":435}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":15556,"byte_end":15566,"line_start":461,"line_end":461,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":18515,"byte_end":18522,"line_start":567,"line_end":567,"column_start":15,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":878},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":19827,"byte_end":19842,"line_start":606,"line_end":606,"column_start":15,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":20463,"byte_end":20472,"line_start":626,"line_end":626,"column_start":15,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":897},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21007,"byte_end":21019,"line_start":645,"line_end":645,"column_start":15,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":902},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":21966,"byte_end":21980,"line_start":678,"line_end":678,"column_start":15,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":907},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22488,"byte_end":22502,"line_start":696,"line_end":696,"column_start":15,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":912},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":22645,"byte_end":22659,"line_start":704,"line_end":704,"column_start":6,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23380,"byte_end":23395,"line_start":727,"line_end":727,"column_start":15,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":917},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":23539,"byte_end":23554,"line_start":735,"line_end":735,"column_start":6,"column_end":21},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":24389,"byte_end":24402,"line_start":759,"line_end":759,"column_start":15,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":26671,"byte_end":26683,"line_start":827,"line_end":827,"column_start":15,"column_end":27},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":956},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":28599,"byte_end":28605,"line_start":883,"line_end":883,"column_start":30,"column_end":36},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":986},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":29132,"byte_end":29142,"line_start":900,"line_end":900,"column_start":30,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1016},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":36294,"byte_end":36311,"line_start":1057,"line_end":1057,"column_start":18,"column_end":35},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1212},"to":{"krate":2,"index":2033}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44383,"byte_end":44397,"line_start":1247,"line_end":1247,"column_start":18,"column_end":32},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1417},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44930,"byte_end":44944,"line_start":1258,"line_end":1258,"column_start":16,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1417},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":44954,"byte_end":44962,"line_start":1260,"line_end":1260,"column_start":6,"column_end":14},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":47303,"byte_end":47310,"line_start":1333,"line_end":1333,"column_start":6,"column_end":13},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":49592,"byte_end":49598,"line_start":1395,"line_end":1395,"column_start":6,"column_end":12},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54707,"byte_end":54713,"line_start":1536,"line_end":1536,"column_start":15,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":819},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":54962,"byte_end":54980,"line_start":1548,"line_end":1548,"column_start":18,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55128,"byte_end":55146,"line_start":1554,"line_end":1554,"column_start":16,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1436},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55291,"byte_end":55307,"line_start":1560,"line_end":1560,"column_start":18,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1448},"to":{"krate":2,"index":6604}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":55477,"byte_end":55493,"line_start":1566,"line_end":1566,"column_start":16,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1448},"to":{"krate":1,"index":1725}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":56525,"byte_end":56535,"line_start":1609,"line_end":1609,"column_start":26,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1473},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":56650,"byte_end":56663,"line_start":1617,"line_end":1617,"column_start":26,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":2242}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":56940,"byte_end":56953,"line_start":1630,"line_end":1630,"column_start":29,"column_end":42},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":57052,"byte_end":57062,"line_start":1636,"line_end":1636,"column_start":15,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1473},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":57258,"byte_end":57271,"line_start":1646,"line_end":1646,"column_start":15,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1480},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":57458,"byte_end":57464,"line_start":1656,"line_end":1656,"column_start":6,"column_end":12},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":58134,"byte_end":58145,"line_start":1675,"line_end":1675,"column_start":10,"column_end":21},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":853},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":60698,"byte_end":60704,"line_start":1742,"line_end":1742,"column_start":15,"column_end":21},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":60838,"byte_end":60845,"line_start":1750,"line_end":1750,"column_start":6,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61171,"byte_end":61178,"line_start":1761,"line_end":1761,"column_start":15,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":866},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61336,"byte_end":61347,"line_start":1769,"line_end":1769,"column_start":15,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":872},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":61501,"byte_end":61515,"line_start":1777,"line_end":1777,"column_start":6,"column_end":20},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":65694,"byte_end":65704,"line_start":1916,"line_end":1916,"column_start":10,"column_end":20},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":72295,"byte_end":72305,"line_start":2083,"line_end":2083,"column_start":10,"column_end":20},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":74770,"byte_end":74780,"line_start":2144,"line_end":2144,"column_start":10,"column_end":20},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":78553,"byte_end":78563,"line_start":2243,"line_end":2243,"column_start":10,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":79954,"byte_end":79964,"line_start":2277,"line_end":2277,"column_start":19,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":80188,"byte_end":80199,"line_start":2287,"line_end":2287,"column_start":10,"column_end":21},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82080,"byte_end":82091,"line_start":2339,"line_end":2339,"column_start":10,"column_end":21},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82602,"byte_end":82613,"line_start":2352,"line_end":2352,"column_start":19,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":82838,"byte_end":82857,"line_start":2362,"line_end":2362,"column_start":10,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":88105,"byte_end":88124,"line_start":2487,"line_end":2487,"column_start":10,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":89502,"byte_end":89507,"line_start":2521,"line_end":2521,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90459,"byte_end":90475,"line_start":2550,"line_end":2550,"column_start":15,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1407},"to":{"krate":2,"index":2266}},{"span":{"file_name":"/Users/antonioramos/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.6.2/src/lib.rs","byte_start":90652,"byte_end":90661,"line_start":2558,"line_end":2558,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":887},"to":{"krate":4294967295,"index":4294967295}}]}